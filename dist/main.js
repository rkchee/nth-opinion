/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@polymer/polymer/lib/elements/dom-module.js":
/*!******************************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/elements/dom-module.js ***!
  \******************************************************************/
/*! exports provided: DomModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DomModule\", function() { return DomModule; });\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_utils_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_resolve_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/resolve-url.js */ \"./node_modules/@polymer/polymer/lib/utils/resolve-url.js\");\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\nlet modules = {};\nlet lcModules = {};\nfunction findModule(id) {\n  return modules[id] || lcModules[id.toLowerCase()];\n}\n\nfunction styleOutsideTemplateCheck(inst) {\n  if (inst.querySelector('style')) {\n    console.warn('dom-module %s has style outside template', inst.id);\n  }\n}\n\n/**\n * The `dom-module` element registers the dom it contains to the name given\n * by the module's id attribute. It provides a unified database of dom\n * accessible via its static `import` API.\n *\n * A key use case of `dom-module` is for providing custom element `<template>`s\n * via HTML imports that are parsed by the native HTML parser, that can be\n * relocated during a bundling pass and still looked up by `id`.\n *\n * Example:\n *\n *     <dom-module id=\"foo\">\n *       <img src=\"stuff.png\">\n *     </dom-module>\n *\n * Then in code in some other location that cannot access the dom-module above\n *\n *     let img = customElements.get('dom-module').import('foo', 'img');\n *\n * @customElement\n * @extends HTMLElement\n * @summary Custom element that provides a registry of relocatable DOM content\n *   by `id` that is agnostic to bundling.\n * @unrestricted\n */\nclass DomModule extends HTMLElement {\n\n  static get observedAttributes() { return ['id']; }\n\n  /**\n   * Retrieves the element specified by the css `selector` in the module\n   * registered by `id`. For example, this.import('foo', 'img');\n   * @param {string} id The id of the dom-module in which to search.\n   * @param {string=} selector The css selector by which to find the element.\n   * @return {Element} Returns the element which matches `selector` in the\n   * module registered at the specified `id`.\n   */\n  static import(id, selector) {\n    if (id) {\n      let m = findModule(id);\n      if (m && selector) {\n        return m.querySelector(selector);\n      }\n      return m;\n    }\n    return null;\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * @param {string} name Name of attribute.\n   * @param {?string} old Old value of attribute.\n   * @param {?string} value Current value of attribute.\n   * @param {?string} namespace Attribute namespace.\n   * @return {void}\n   */\n  attributeChangedCallback(name, old, value, namespace) {\n    if (old !== value) {\n      this.register();\n    }\n  }\n  /* eslint-enable no-unused-args */\n\n  /**\n   * The absolute URL of the original location of this `dom-module`.\n   *\n   * This value will differ from this element's `ownerDocument` in the\n   * following ways:\n   * - Takes into account any `assetpath` attribute added during bundling\n   *   to indicate the original location relative to the bundled location\n   * - Uses the HTMLImports polyfill's `importForElement` API to ensure\n   *   the path is relative to the import document's location since\n   *   `ownerDocument` is not currently polyfilled\n   */\n  get assetpath() {\n    // Don't override existing assetpath.\n    if (!this.__assetpath) {\n      // note: assetpath set via an attribute must be relative to this\n      // element's location; accomodate polyfilled HTMLImports\n      const owner = window.HTMLImports && HTMLImports.importForElement ?\n        HTMLImports.importForElement(this) || document : this.ownerDocument;\n      const url = Object(_utils_resolve_url_js__WEBPACK_IMPORTED_MODULE_1__[\"resolveUrl\"])(\n        this.getAttribute('assetpath') || '', owner.baseURI);\n      this.__assetpath = Object(_utils_resolve_url_js__WEBPACK_IMPORTED_MODULE_1__[\"pathFromUrl\"])(url);\n    }\n    return this.__assetpath;\n  }\n\n  /**\n   * Registers the dom-module at a given id. This method should only be called\n   * when a dom-module is imperatively created. For\n   * example, `document.createElement('dom-module').register('foo')`.\n   * @param {string=} id The id at which to register the dom-module.\n   * @return {void}\n   */\n  register(id) {\n    id = id || this.id;\n    if (id) {\n      this.id = id;\n      // store id separate from lowercased id so that\n      // in all cases mixedCase id will stored distinctly\n      // and lowercase version is a fallback\n      modules[id] = this;\n      lcModules[id.toLowerCase()] = this;\n      styleOutsideTemplateCheck(this);\n    }\n  }\n}\n\nDomModule.prototype['modules'] = modules;\n\ncustomElements.define('dom-module', DomModule);\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/elements/dom-module.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/mixins/element-mixin.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/mixins/element-mixin.js ***!
  \*******************************************************************/
/*! exports provided: ElementMixin, instanceCount, registrations, register, dumpRegistrations, updateStyles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ElementMixin\", function() { return ElementMixin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"instanceCount\", function() { return instanceCount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registrations\", function() { return registrations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"register\", function() { return register; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dumpRegistrations\", function() { return dumpRegistrations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateStyles\", function() { return updateStyles; });\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_utils_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_settings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/settings.js */ \"./node_modules/@polymer/polymer/lib/utils/settings.js\");\n/* harmony import */ var _utils_mixin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/* harmony import */ var _utils_style_gather_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/style-gather.js */ \"./node_modules/@polymer/polymer/lib/utils/style-gather.js\");\n/* harmony import */ var _utils_resolve_url_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/resolve-url.js */ \"./node_modules/@polymer/polymer/lib/utils/resolve-url.js\");\n/* harmony import */ var _elements_dom_module_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../elements/dom-module.js */ \"./node_modules/@polymer/polymer/lib/elements/dom-module.js\");\n/* harmony import */ var _property_effects_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./property-effects.js */ \"./node_modules/@polymer/polymer/lib/mixins/property-effects.js\");\n/* harmony import */ var _properties_mixin_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./properties-mixin.js */ \"./node_modules/@polymer/polymer/lib/mixins/properties-mixin.js\");\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n\n\n\n\n\n/**\n * Element class mixin that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * Subclassers may provide the following static getters to return metadata\n * used to configure Polymer's features for the class:\n *\n * - `static get is()`: When the template is provided via a `dom-module`,\n *   users should return the `dom-module` id from a static `is` getter.  If\n *   no template is needed or the template is provided directly via the\n *   `template` getter, there is no need to define `is` for the element.\n *\n * - `static get template()`: Users may provide the template directly (as\n *   opposed to via `dom-module`) by implementing a static `template` getter.\n *   The getter may return an `HTMLTemplateElement` or a string, which will\n *   automatically be parsed into a template.\n *\n * - `static get properties()`: Should return an object describing\n *   property-related metadata used by Polymer features (key: property name\n *   value: object containing property metadata). Valid keys in per-property\n *   metadata include:\n *   - `type` (String|Number|Object|Array|...): Used by\n *     `attributeChangedCallback` to determine how string-based attributes\n *     are deserialized to JavaScript property values.\n *   - `notify` (boolean): Causes a change in the property to fire a\n *     non-bubbling event called `<property>-changed`. Elements that have\n *     enabled two-way binding to the property use this event to observe changes.\n *   - `readOnly` (boolean): Creates a getter for the property, but no setter.\n *     To set a read-only property, use the private setter method\n *     `_setProperty(property, value)`.\n *   - `observer` (string): Observer method name that will be called when\n *     the property changes. The arguments of the method are\n *     `(value, previousValue)`.\n *   - `computed` (string): String describing method and dependent properties\n *     for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).\n *     Computed properties are read-only by default and can only be changed\n *     via the return value of the computing method.\n *\n * - `static get observers()`: Array of strings describing multi-property\n *   observer methods and their dependent properties (e.g.\n *   `'observeABC(a, b, c)'`).\n *\n * The base class provides default implementations for the following standard\n * custom element lifecycle callbacks; users may override these, but should\n * call the super method to ensure\n * - `constructor`: Run when the element is created or upgraded\n * - `connectedCallback`: Run each time the element is connected to the\n *   document\n * - `disconnectedCallback`: Run each time the element is disconnected from\n *   the document\n * - `attributeChangedCallback`: Run each time an attribute in\n *   `observedAttributes` is set or removed (note: this element's default\n *   `observedAttributes` implementation will automatically return an array\n *   of dash-cased attributes based on `properties`)\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertyEffects\n * @appliesMixin PropertiesMixin\n * @property rootPath {string} Set to the value of `rootPath`,\n *   which defaults to the main document path\n * @property importPath {string} Set to the value of the class's static\n *   `importPath` property, which defaults to the path of this element's\n *   `dom-module` (when `is` is used), but can be overridden for other\n *   import strategies.\n * @summary Element class mixin that provides the core API for Polymer's\n * meta-programming features.\n */\nconst ElementMixin = Object(_utils_mixin_js__WEBPACK_IMPORTED_MODULE_2__[\"dedupingMixin\"])(base => {\n\n  /**\n   * @constructor\n   * @extends {base}\n   * @implements {Polymer_PropertyEffects}\n   * @implements {Polymer_PropertiesMixin}\n   */\n  const polymerElementBase = Object(_properties_mixin_js__WEBPACK_IMPORTED_MODULE_7__[\"PropertiesMixin\"])(Object(_property_effects_js__WEBPACK_IMPORTED_MODULE_6__[\"PropertyEffects\"])(base));\n\n  /**\n   * Returns a list of properties with default values.\n   * This list is created as an optimization since it is a subset of\n   * the list returned from `_properties`.\n   * This list is used in `_initializeProperties` to set property defaults.\n   *\n   * @param {PolymerElementConstructor} constructor Element class\n   * @return {PolymerElementProperties} Flattened properties for this class\n   *   that have default values\n   * @private\n   */\n  function propertyDefaults(constructor) {\n    if (!constructor.hasOwnProperty(\n      JSCompiler_renameProperty('__propertyDefaults', constructor))) {\n      constructor.__propertyDefaults = null;\n      let props = constructor._properties;\n      for (let p in props) {\n        let info = props[p];\n        if ('value' in info) {\n          constructor.__propertyDefaults = constructor.__propertyDefaults || {};\n          constructor.__propertyDefaults[p] = info;\n        }\n      }\n    }\n    return constructor.__propertyDefaults;\n  }\n\n  /**\n   * Returns a memoized version of the the `observers` array.\n   * @param {PolymerElementConstructor} constructor Element class\n   * @return {Array} Array containing own observers for the given class\n   * @protected\n   */\n  function ownObservers(constructor) {\n    if (!constructor.hasOwnProperty(\n      JSCompiler_renameProperty('__ownObservers', constructor))) {\n        constructor.__ownObservers =\n        constructor.hasOwnProperty(JSCompiler_renameProperty('observers', constructor)) ?\n        /** @type {PolymerElementConstructor} */ (constructor).observers : null;\n    }\n    return constructor.__ownObservers;\n  }\n\n  /**\n   * Creates effects for a property.\n   *\n   * Note, once a property has been set to\n   * `readOnly`, `computed`, `reflectToAttribute`, or `notify`\n   * these values may not be changed. For example, a subclass cannot\n   * alter these settings. However, additional `observers` may be added\n   * by subclasses.\n   *\n   * The info object should may contain property metadata as follows:\n   *\n   * * `type`: {function} type to which an attribute matching the property\n   * is deserialized. Note the property is camel-cased from a dash-cased\n   * attribute. For example, 'foo-bar' attribute is deserialized to a\n   * property named 'fooBar'.\n   *\n   * * `readOnly`: {boolean} creates a readOnly property and\n   * makes a private setter for the private of the form '_setFoo' for a\n   * property 'foo',\n   *\n   * * `computed`: {string} creates a computed property. A computed property\n   * also automatically is set to `readOnly: true`. The value is calculated\n   * by running a method and arguments parsed from the given string. For\n   * example 'compute(foo)' will compute a given property when the\n   * 'foo' property changes by executing the 'compute' method. This method\n   * must return the computed value.\n   *\n   * * `reflectToAttribute`: {boolean} If true, the property value is reflected\n   * to an attribute of the same name. Note, the attribute is dash-cased\n   * so a property named 'fooBar' is reflected as 'foo-bar'.\n   *\n   * * `notify`: {boolean} sends a non-bubbling notification event when\n   * the property changes. For example, a property named 'foo' sends an\n   * event named 'foo-changed' with `event.detail` set to the value of\n   * the property.\n   *\n   * * observer: {string} name of a method that runs when the property\n   * changes. The arguments of the method are (value, previousValue).\n   *\n   * Note: Users may want control over modifying property\n   * effects via subclassing. For example, a user might want to make a\n   * reflectToAttribute property not do so in a subclass. We've chosen to\n   * disable this because it leads to additional complication.\n   * For example, a readOnly effect generates a special setter. If a subclass\n   * disables the effect, the setter would fail unexpectedly.\n   * Based on feedback, we may want to try to make effects more malleable\n   * and/or provide an advanced api for manipulating them.\n   * Also consider adding warnings when an effect cannot be changed.\n   *\n   * @param {!PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {string} name Name of the property.\n   * @param {Object} info Info object from which to create property effects.\n   * Supported keys:\n   * @param {Object} allProps Flattened map of all properties defined in this\n   *   element (including inherited properties)\n   * @return {void}\n   * @private\n   */\n  function createPropertyFromConfig(proto, name, info, allProps) {\n    // computed forces readOnly...\n    if (info.computed) {\n      info.readOnly = true;\n    }\n    // Note, since all computed properties are readOnly, this prevents\n    // adding additional computed property effects (which leads to a confusing\n    // setup where multiple triggers for setting a property)\n    // While we do have `hasComputedEffect` this is set on the property's\n    // dependencies rather than itself.\n    if (info.computed && !proto._hasReadOnlyEffect(name)) {\n      proto._createComputedProperty(name, info.computed, allProps);\n    }\n    if (info.readOnly && !proto._hasReadOnlyEffect(name)) {\n      proto._createReadOnlyProperty(name, !info.computed);\n    }\n    if (info.reflectToAttribute && !proto._hasReflectEffect(name)) {\n      proto._createReflectedProperty(name);\n    }\n    if (info.notify && !proto._hasNotifyEffect(name)) {\n      proto._createNotifyingProperty(name);\n    }\n    // always add observer\n    if (info.observer) {\n      proto._createPropertyObserver(name, info.observer, allProps[info.observer]);\n    }\n    // always create the mapping from attribute back to property for deserialization.\n    proto._addPropertyToAttributeMap(name);\n  }\n\n  /**\n   * Process all style elements in the element template. Styles with the\n   * `include` attribute are processed such that any styles in\n   * the associated \"style modules\" are included in the element template.\n   * @param {PolymerElementConstructor} klass Element class\n   * @param {!HTMLTemplateElement} template Template to process\n   * @param {string} is Name of element\n   * @param {string} baseURI Base URI for element\n   * @private\n   */\n  function processElementStyles(klass, template, is, baseURI) {\n    const templateStyles = template.content.querySelectorAll('style');\n    const stylesWithImports = Object(_utils_style_gather_js__WEBPACK_IMPORTED_MODULE_3__[\"stylesFromTemplate\"])(template);\n    // insert styles from <link rel=\"import\" type=\"css\"> at the top of the template\n    const linkedStyles = Object(_utils_style_gather_js__WEBPACK_IMPORTED_MODULE_3__[\"stylesFromModuleImports\"])(is);\n    const firstTemplateChild = template.content.firstElementChild;\n    for (let idx = 0; idx < linkedStyles.length; idx++) {\n      let s = linkedStyles[idx];\n      s.textContent = klass._processStyleText(s.textContent, baseURI);\n      template.content.insertBefore(s, firstTemplateChild);\n    }\n    // keep track of the last \"concrete\" style in the template we have encountered\n    let templateStyleIndex = 0;\n    // ensure all gathered styles are actually in this template.\n    for (let i = 0; i < stylesWithImports.length; i++) {\n      let s = stylesWithImports[i];\n      let templateStyle = templateStyles[templateStyleIndex];\n      // if the style is not in this template, it's been \"included\" and\n      // we put a clone of it in the template before the style that included it\n      if (templateStyle !== s) {\n        s = s.cloneNode(true);\n        templateStyle.parentNode.insertBefore(s, templateStyle);\n      } else {\n        templateStyleIndex++;\n      }\n      s.textContent = klass._processStyleText(s.textContent, baseURI);\n    }\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(template, is);\n    }\n  }\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @unrestricted\n   * @implements {Polymer_ElementMixin}\n   */\n  class PolymerElement extends polymerElementBase {\n\n    /**\n     * Override of PropertiesMixin _finalizeClass to create observers and\n     * find the template.\n     * @return {void}\n     * @protected\n     * @override\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n   static _finalizeClass() {\n      super._finalizeClass();\n      if (this.hasOwnProperty(\n        JSCompiler_renameProperty('is', this)) &&  this.is) {\n        register(this.prototype);\n      }\n      const observers = ownObservers(this);\n      if (observers) {\n        this.createObservers(observers, this._properties);\n      }\n      // note: create \"working\" template that is finalized at instance time\n      let template = /** @type {PolymerElementConstructor} */ (this).template;\n      if (template) {\n        if (typeof template === 'string') {\n          console.error('template getter must return HTMLTemplateElement');\n          template = null;\n        } else {\n          template = template.cloneNode(true);\n        }\n      }\n\n      this.prototype._template = template;\n    }\n\n    /**\n     * Override of PropertiesChanged createProperties to create accessors\n     * and property effects for all of the properties.\n     * @return {void}\n     * @protected\n     * @override\n     */\n     static createProperties(props) {\n      for (let p in props) {\n        createPropertyFromConfig(this.prototype, p, props[p], props);\n      }\n    }\n\n    /**\n     * Creates observers for the given `observers` array.\n     * Leverages `PropertyEffects` to create observers.\n     * @param {Object} observers Array of observer descriptors for\n     *   this class\n     * @param {Object} dynamicFns Object containing keys for any properties\n     *   that are functions and should trigger the effect when the function\n     *   reference is changed\n     * @return {void}\n     * @protected\n     */\n    static createObservers(observers, dynamicFns) {\n      const proto = this.prototype;\n      for (let i=0; i < observers.length; i++) {\n        proto._createMethodObserver(observers[i], dynamicFns);\n      }\n    }\n\n    /**\n     * Returns the template that will be stamped into this element's shadow root.\n     *\n     * If a `static get is()` getter is defined, the default implementation\n     * will return the first `<template>` in a `dom-module` whose `id`\n     * matches this element's `is`.\n     *\n     * Users may override this getter to return an arbitrary template\n     * (in which case the `is` getter is unnecessary). The template returned\n     * may be either an `HTMLTemplateElement` or a string that will be\n     * automatically parsed into a template.\n     *\n     * Note that when subclassing, if the super class overrode the default\n     * implementation and the subclass would like to provide an alternate\n     * template via a `dom-module`, it should override this getter and\n     * return `DomModule.import(this.is, 'template')`.\n     *\n     * If a subclass would like to modify the super class template, it should\n     * clone it rather than modify it in place.  If the getter does expensive\n     * work such as cloning/modifying a template, it should memoize the\n     * template for maximum performance:\n     *\n     *   let memoizedTemplate;\n     *   class MySubClass extends MySuperClass {\n     *     static get template() {\n     *       if (!memoizedTemplate) {\n     *         memoizedTemplate = super.template.cloneNode(true);\n     *         let subContent = document.createElement('div');\n     *         subContent.textContent = 'This came from MySubClass';\n     *         memoizedTemplate.content.appendChild(subContent);\n     *       }\n     *       return memoizedTemplate;\n     *     }\n     *   }\n     *\n     * @return {HTMLTemplateElement|string} Template to be stamped\n     */\n    static get template() {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_template', this))) {\n        this._template = _elements_dom_module_js__WEBPACK_IMPORTED_MODULE_5__[\"DomModule\"] && _elements_dom_module_js__WEBPACK_IMPORTED_MODULE_5__[\"DomModule\"].import(\n          /** @type {PolymerElementConstructor}*/ (this).is, 'template') ||\n          // note: implemented so a subclass can retrieve the super\n          // template; call the super impl this way so that `this` points\n          // to the superclass.\n          Object.getPrototypeOf(/** @type {PolymerElementConstructor}*/ (this).prototype).constructor.template;\n      }\n      return this._template;\n    }\n\n    /**\n     * Path matching the url from which the element was imported.\n     *\n     * This path is used to resolve url's in template style cssText.\n     * The `importPath` property is also set on element instances and can be\n     * used to create bindings relative to the import path.\n     *\n     * For elements defined in ES modules, users should implement\n     * `static get importMeta() { return import.meta; }`, and the default\n     * implementation of `importPath` will  return `import.meta.url`'s path.\n     * For elements defined in HTML imports, this getter will return the path\n     * to the document containing a `dom-module` element matching this\n     * element's static `is` property.\n     *\n     * Note, this path should contain a trailing `/`.\n     *\n     * @return {string} The import path for this element class\n     * @suppress {missingProperties}\n     */\n    static get importPath() {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_importPath', this))) {\n        const meta = this.importMeta;\n        if (meta) {\n          this._importPath = Object(_utils_resolve_url_js__WEBPACK_IMPORTED_MODULE_4__[\"pathFromUrl\"])(meta.url);\n        } else {\n          const module = _elements_dom_module_js__WEBPACK_IMPORTED_MODULE_5__[\"DomModule\"] && _elements_dom_module_js__WEBPACK_IMPORTED_MODULE_5__[\"DomModule\"].import(/** @type {PolymerElementConstructor} */ (this).is);\n          this._importPath = (module && module.assetpath) ||\n            Object.getPrototypeOf(/** @type {PolymerElementConstructor}*/ (this).prototype).constructor.importPath;\n        }\n      }\n      return this._importPath;\n    }\n\n    constructor() {\n      super();\n      /** @type {HTMLTemplateElement} */\n      this._template;\n      /** @type {string} */\n      this._importPath;\n      /** @type {string} */\n      this.rootPath;\n      /** @type {string} */\n      this.importPath;\n      /** @type {StampedTemplate | HTMLElement | ShadowRoot} */\n      this.root;\n      /** @type {!Object<string, !Element>} */\n      this.$;\n    }\n\n    /**\n     * Overrides the default `PropertyAccessors` to ensure class\n     * metaprogramming related to property accessors and effects has\n     * completed (calls `finalize`).\n     *\n     * It also initializes any property defaults provided via `value` in\n     * `properties` metadata.\n     *\n     * @return {void}\n     * @override\n     * @suppress {invalidCasts}\n     */\n    _initializeProperties() {\n      instanceCount++;\n      this.constructor.finalize();\n      // note: finalize template when we have access to `localName` to\n      // avoid dependence on `is` for polyfilling styling.\n      this.constructor._finalizeTemplate(/** @type {!HTMLElement} */(this).localName);\n      super._initializeProperties();\n      // set path defaults\n      this.rootPath = _utils_settings_js__WEBPACK_IMPORTED_MODULE_1__[\"rootPath\"];\n      this.importPath = this.constructor.importPath;\n      // apply property defaults...\n      let p$ = propertyDefaults(this.constructor);\n      if (!p$) {\n        return;\n      }\n      for (let p in p$) {\n        let info = p$[p];\n        // Don't set default value if there is already an own property, which\n        // happens when a `properties` property with default but no effects had\n        // a property set (e.g. bound) by its host before upgrade\n        if (!this.hasOwnProperty(p)) {\n          let value = typeof info.value == 'function' ?\n            info.value.call(this) :\n            info.value;\n          // Set via `_setProperty` if there is an accessor, to enable\n          // initializing readOnly property defaults\n          if (this._hasAccessor(p)) {\n            this._setPendingProperty(p, value, true);\n          } else {\n            this[p] = value;\n          }\n        }\n      }\n    }\n\n    /**\n     * Gather style text for a style element in the template.\n     *\n     * @param {string} cssText Text containing styling to process\n     * @param {string} baseURI Base URI to rebase CSS paths against\n     * @return {string} The processed CSS text\n     * @protected\n     */\n    static _processStyleText(cssText, baseURI) {\n      return Object(_utils_resolve_url_js__WEBPACK_IMPORTED_MODULE_4__[\"resolveCss\"])(cssText, baseURI);\n    }\n\n    /**\n    * Configures an element `proto` to function with a given `template`.\n    * The element name `is` and extends `ext` must be specified for ShadyCSS\n    * style scoping.\n    *\n    * @param {string} is Tag name (or type extension name) for this element\n    * @return {void}\n    * @protected\n    */\n    static _finalizeTemplate(is) {\n      /** @const {HTMLTemplateElement} */\n      const template = this.prototype._template;\n      if (template && !template.__polymerFinalized) {\n        template.__polymerFinalized = true;\n        const importPath = this.importPath;\n        const baseURI = importPath ? Object(_utils_resolve_url_js__WEBPACK_IMPORTED_MODULE_4__[\"resolveUrl\"])(importPath) : '';\n        // e.g. support `include=\"module-name\"`, and ShadyCSS\n        processElementStyles(this, template, is, baseURI);\n        this.prototype._bindTemplate(template);\n      }\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `connectedCallback`.\n     *\n     * The default implementation enables the property effects system and\n     * flushes any pending properties, and updates shimmed CSS properties\n     * when using the ShadyCSS scoping/custom properties polyfill.\n     *\n     * @suppress {missingProperties, invalidCasts} Super may or may not implement the callback\n     * @return {void}\n     */\n    connectedCallback() {\n      if (window.ShadyCSS && this._template) {\n        window.ShadyCSS.styleElement(/** @type {!HTMLElement} */(this));\n      }\n      super.connectedCallback();\n    }\n\n    /**\n     * Stamps the element template.\n     *\n     * @return {void}\n     * @override\n     */\n    ready() {\n      if (this._template) {\n        this.root = this._stampTemplate(this._template);\n        this.$ = this.root.$;\n      }\n      super.ready();\n    }\n\n    /**\n     * Implements `PropertyEffects`'s `_readyClients` call. Attaches\n     * element dom by calling `_attachDom` with the dom stamped from the\n     * element's template via `_stampTemplate`. Note that this allows\n     * client dom to be attached to the element prior to any observers\n     * running.\n     *\n     * @return {void}\n     * @override\n     */\n    _readyClients() {\n      if (this._template) {\n        this.root = this._attachDom(/** @type {StampedTemplate} */(this.root));\n      }\n      // The super._readyClients here sets the clients initialized flag.\n      // We must wait to do this until after client dom is created/attached\n      // so that this flag can be checked to prevent notifications fired\n      // during this process from being handled before clients are ready.\n      super._readyClients();\n    }\n\n\n    /**\n     * Attaches an element's stamped dom to itself. By default,\n     * this method creates a `shadowRoot` and adds the dom to it.\n     * However, this method may be overridden to allow an element\n     * to put its dom in another location.\n     *\n     * @throws {Error}\n     * @suppress {missingReturn}\n     * @param {StampedTemplate} dom to attach to the element.\n     * @return {ShadowRoot} node to which the dom has been attached.\n     */\n    _attachDom(dom) {\n      if (this.attachShadow) {\n        if (dom) {\n          if (!this.shadowRoot) {\n            this.attachShadow({mode: 'open'});\n          }\n          this.shadowRoot.appendChild(dom);\n          return this.shadowRoot;\n        }\n        return null;\n      } else {\n        throw new Error('ShadowDOM not available. ' +\n          // TODO(sorvell): move to compile-time conditional when supported\n        'PolymerElement can create dom as children instead of in ' +\n        'ShadowDOM by setting `this.root = this;\\` before \\`ready\\`.');\n      }\n    }\n\n    /**\n     * When using the ShadyCSS scoping and custom property shim, causes all\n     * shimmed styles in this element (and its subtree) to be updated\n     * based on current custom property values.\n     *\n     * The optional parameter overrides inline custom property styles with an\n     * object of properties where the keys are CSS properties, and the values\n     * are strings.\n     *\n     * Example: `this.updateStyles({'--color': 'blue'})`\n     *\n     * These properties are retained unless a value of `null` is set.\n     *\n     * Note: This function does not support updating CSS mixins.\n     * You can not dynamically change the value of an `@apply`.\n     *\n     * @param {Object=} properties Bag of custom property key/values to\n     *   apply to this element.\n     * @return {void}\n     * @suppress {invalidCasts}\n     */\n    updateStyles(properties) {\n      if (window.ShadyCSS) {\n        window.ShadyCSS.styleSubtree(/** @type {!HTMLElement} */(this), properties);\n      }\n    }\n\n    /**\n     * Rewrites a given URL relative to a base URL. The base URL defaults to\n     * the original location of the document containing the `dom-module` for\n     * this element. This method will return the same URL before and after\n     * bundling.\n     *\n     * Note that this function performs no resolution for URLs that start\n     * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n     * URL resolution, use `window.URL`.\n     *\n     * @param {string} url URL to resolve.\n     * @param {string=} base Optional base URL to resolve against, defaults\n     * to the element's `importPath`\n     * @return {string} Rewritten URL relative to base\n     */\n    resolveUrl(url, base) {\n      if (!base && this.importPath) {\n        base = Object(_utils_resolve_url_js__WEBPACK_IMPORTED_MODULE_4__[\"resolveUrl\"])(this.importPath);\n      }\n      return Object(_utils_resolve_url_js__WEBPACK_IMPORTED_MODULE_4__[\"resolveUrl\"])(url, base);\n    }\n\n    /**\n     * Overrides `PropertyAccessors` to add map of dynamic functions on\n     * template info, for consumption by `PropertyEffects` template binding\n     * code. This map determines which method templates should have accessors\n     * created for them.\n     *\n     * @override\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      templateInfo.dynamicFns = templateInfo.dynamicFns || this._properties;\n      return super._parseTemplateContent(template, templateInfo, nodeInfo);\n    }\n\n  }\n\n  return PolymerElement;\n});\n\n/**\n * Provides basic tracking of element definitions (registrations) and\n * instance counts.\n *\n * @summary Provides basic tracking of element definitions (registrations) and\n * instance counts.\n */\n`TODO(modulizer): A namespace named Polymer.telemetry was\ndeclared here. The surrounding comments should be reviewed,\nand this string can then be deleted`;\n\n/**\n * Total number of Polymer element instances created.\n * @type {number}\n */\nlet instanceCount = 0;\n\n/**\n * Array of Polymer element classes that have been finalized.\n * @type {Array<PolymerElement>}\n */\nconst registrations = [];\n\n/**\n * @param {!PolymerElementConstructor} prototype Element prototype to log\n * @this {this}\n * @private\n */\nfunction _regLog(prototype) {\n  console.log('[' + prototype.is + ']: registered');\n}\n\n/**\n * Registers a class prototype for telemetry purposes.\n * @param {HTMLElement} prototype Element prototype to register\n * @this {this}\n * @protected\n */\nfunction register(prototype) {\n  registrations.push(prototype);\n  undefined && _regLog(prototype);\n}\n\n/**\n * Logs all elements registered with an `is` to the console.\n * @public\n * @this {this}\n */\nfunction dumpRegistrations() {\n  registrations.forEach(_regLog);\n}\n\n/**\n * When using the ShadyCSS scoping and custom property shim, causes all\n * shimmed `styles` (via `custom-style`) in the document (and its subtree)\n * to be updated based on current custom property values.\n *\n * The optional parameter overrides inline custom property styles with an\n * object of properties where the keys are CSS properties, and the values\n * are strings.\n *\n * Example: `updateStyles({'--color': 'blue'})`\n *\n * These properties are retained unless a value of `null` is set.\n *\n * @param {Object=} props Bag of custom property key/values to\n *   apply to the document.\n * @return {void}\n */\nconst updateStyles = function(props) {\n  if (window.ShadyCSS) {\n    window.ShadyCSS.styleDocument(props);\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/mixins/element-mixin.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/mixins/properties-changed.js":
/*!************************************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/mixins/properties-changed.js ***!
  \************************************************************************/
/*! exports provided: PropertiesChanged */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PropertiesChanged\", function() { return PropertiesChanged; });\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_utils_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/* harmony import */ var _utils_async_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/async.js */ \"./node_modules/@polymer/polymer/lib/utils/async.js\");\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n/** @const {!AsyncInterface} */\nconst microtask = _utils_async_js__WEBPACK_IMPORTED_MODULE_2__[\"microTask\"];\n\n/**\n * Element class mixin that provides basic meta-programming for creating one\n * or more property accessors (getter/setter pair) that enqueue an async\n * (batched) `_propertiesChanged` callback.\n *\n * For basic usage of this mixin, call `MyClass.createProperties(props)`\n * once at class definition time to create property accessors for properties\n * named in props, implement `_propertiesChanged` to react as desired to\n * property changes, and implement `static get observedAttributes()` and\n * include lowercase versions of any property names that should be set from\n * attributes. Last, call `this._enableProperties()` in the element's\n * `connectedCallback` to enable the accessors.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin for reacting to property changes from\n *   generated property accessors.\n */\nconst PropertiesChanged = Object(_utils_mixin_js__WEBPACK_IMPORTED_MODULE_1__[\"dedupingMixin\"])(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @extends {superClass}\n   * @implements {Polymer_PropertiesChanged}\n   * @unrestricted\n   */\n  class PropertiesChanged extends superClass {\n\n    /**\n     * Creates property accessors for the given property names.\n     * @param {!Object} props Object whose keys are names of accessors.\n     * @return {void}\n     * @protected\n     */\n    static createProperties(props) {\n      const proto = this.prototype;\n      for (let prop in props) {\n        // don't stomp an existing accessor\n        if (!(prop in proto)) {\n          proto._createPropertyAccessor(prop);\n        }\n      }\n    }\n\n    /**\n     * Returns an attribute name that corresponds to the given property.\n     * The attribute name is the lowercased property name. Override to\n     * customize this mapping.\n     * @param {string} property Property to convert\n     * @return {string} Attribute name corresponding to the given property.\n     *\n     * @protected\n     */\n    static attributeNameForProperty(property) {\n      return property.toLowerCase();\n    }\n\n    /**\n     * Override point to provide a type to which to deserialize a value to\n     * a given property.\n     * @param {string} name Name of property\n     *\n     * @protected\n     */\n    static typeForProperty(name) { } //eslint-disable-line no-unused-vars\n\n    /**\n     * Creates a setter/getter pair for the named property with its own\n     * local storage.  The getter returns the value in the local storage,\n     * and the setter calls `_setProperty`, which updates the local storage\n     * for the property and enqueues a `_propertiesChanged` callback.\n     *\n     * This method may be called on a prototype or an instance.  Calling\n     * this method may overwrite a property value that already exists on\n     * the prototype/instance by creating the accessor.\n     *\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created; the\n     *   protected `_setProperty` function must be used to set the property\n     * @return {void}\n     * @protected\n     */\n    _createPropertyAccessor(property, readOnly) {\n      this._addPropertyToAttributeMap(property);\n      if (!this.hasOwnProperty('__dataHasAccessor')) {\n        this.__dataHasAccessor = Object.assign({}, this.__dataHasAccessor);\n      }\n      if (!this.__dataHasAccessor[property]) {\n        this.__dataHasAccessor[property] = true;\n        this._definePropertyAccessor(property, readOnly);\n      }\n    }\n\n    /**\n     * Adds the given `property` to a map matching attribute names\n     * to property names, using `attributeNameForProperty`. This map is\n     * used when deserializing attribute values to properties.\n     *\n     * @param {string} property Name of the property\n     */\n    _addPropertyToAttributeMap(property) {\n      if (!this.hasOwnProperty('__dataAttributes')) {\n        this.__dataAttributes = Object.assign({}, this.__dataAttributes);\n      }\n      if (!this.__dataAttributes[property]) {\n        const attr = this.constructor.attributeNameForProperty(property);\n        this.__dataAttributes[attr] = property;\n      }\n    }\n\n    /**\n     * Defines a property accessor for the given property.\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created\n     * @return {void}\n     */\n     _definePropertyAccessor(property, readOnly) {\n      Object.defineProperty(this, property, {\n        /* eslint-disable valid-jsdoc */\n        /** @this {PropertiesChanged} */\n        get() {\n          return this._getProperty(property);\n        },\n        /** @this {PropertiesChanged} */\n        set: readOnly ? function () {} : function (value) {\n          this._setProperty(property, value);\n        }\n        /* eslint-enable */\n      });\n    }\n\n    constructor() {\n      super();\n      this.__dataEnabled = false;\n      this.__dataReady = false;\n      this.__dataInvalid = false;\n      this.__data = {};\n      this.__dataPending = null;\n      this.__dataOld = null;\n      this.__dataInstanceProps = null;\n      this.__serializing = false;\n      this._initializeProperties();\n    }\n\n    /**\n     * Lifecycle callback called when properties are enabled via\n     * `_enableProperties`.\n     *\n     * Users may override this function to implement behavior that is\n     * dependent on the element having its property data initialized, e.g.\n     * from defaults (initialized from `constructor`, `_initializeProperties`),\n     * `attributeChangedCallback`, or values propagated from host e.g. via\n     * bindings.  `super.ready()` must be called to ensure the data system\n     * becomes enabled.\n     *\n     * @return {void}\n     * @public\n     */\n    ready() {\n      this.__dataReady = true;\n      this._flushProperties();\n    }\n\n    /**\n     * Initializes the local storage for property accessors.\n     *\n     * Provided as an override point for performing any setup work prior\n     * to initializing the property accessor system.\n     *\n     * @return {void}\n     * @protected\n     */\n    _initializeProperties() {\n      // Capture instance properties; these will be set into accessors\n      // during first flush. Don't set them here, since we want\n      // these to overwrite defaults/constructor assignments\n      for (let p in this.__dataHasAccessor) {\n        if (this.hasOwnProperty(p)) {\n          this.__dataInstanceProps = this.__dataInstanceProps || {};\n          this.__dataInstanceProps[p] = this[p];\n          delete this[p];\n        }\n      }\n    }\n\n    /**\n     * Called at ready time with bag of instance properties that overwrote\n     * accessors when the element upgraded.\n     *\n     * The default implementation sets these properties back into the\n     * setter at ready time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @return {void}\n     * @protected\n     */\n    _initializeInstanceProperties(props) {\n      Object.assign(this, props);\n    }\n\n    /**\n     * Updates the local storage for a property (via `_setPendingProperty`)\n     * and enqueues a `_proeprtiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {void}\n     * @protected\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Returns the value for the given property.\n     * @param {string} property Name of property\n     * @return {*} Value for the given property\n     * @protected\n     */\n    _getProperty(property) {\n      return this.__data[property];\n    }\n\n    /* eslint-disable no-unused-vars */\n    /**\n     * Updates the local storage for a property, records the previous value,\n     * and adds it to the set of \"pending changes\" that will be passed to the\n     * `_propertiesChanged` callback.  This method does not enqueue the\n     * `_propertiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} ext Not used here; affordance for closure\n     * @return {boolean} Returns true if the property changed\n     * @protected\n     */\n    _setPendingProperty(property, value, ext) {\n      let old = this.__data[property];\n      let changed = this._shouldPropertyChange(property, value, old);\n      if (changed) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (this.__dataOld && !(property in this.__dataOld)) {\n          this.__dataOld[property] = old;\n        }\n        this.__data[property] = value;\n        this.__dataPending[property] = value;\n      }\n      return changed;\n    }\n    /* eslint-enable */\n\n    /**\n     * Marks the properties as invalid, and enqueues an async\n     * `_propertiesChanged` callback.\n     *\n     * @return {void}\n     * @protected\n     */\n    _invalidateProperties() {\n      if (!this.__dataInvalid && this.__dataReady) {\n        this.__dataInvalid = true;\n        microtask.run(() => {\n          if (this.__dataInvalid) {\n            this.__dataInvalid = false;\n            this._flushProperties();\n          }\n        });\n      }\n    }\n\n    /**\n     * Call to enable property accessor processing. Before this method is\n     * called accessor values will be set but side effects are\n     * queued. When called, any pending side effects occur immediately.\n     * For elements, generally `connectedCallback` is a normal spot to do so.\n     * It is safe to call this method multiple times as it only turns on\n     * property accessors once.\n     *\n     * @return {void}\n     * @protected\n     */\n    _enableProperties() {\n      if (!this.__dataEnabled) {\n        this.__dataEnabled = true;\n        if (this.__dataInstanceProps) {\n          this._initializeInstanceProperties(this.__dataInstanceProps);\n          this.__dataInstanceProps = null;\n        }\n        this.ready();\n      }\n    }\n\n    /**\n     * Calls the `_propertiesChanged` callback with the current set of\n     * pending changes (and old values recorded when pending changes were\n     * set), and resets the pending set of changes. Generally, this method\n     * should not be called in user code.\n     *\n     * @return {void}\n     * @protected\n     */\n    _flushProperties() {\n      const props = this.__data;\n      const changedProps = this.__dataPending;\n      const old = this.__dataOld;\n      if (this._shouldPropertiesChange(props, changedProps, old)) {\n        this.__dataPending = null;\n        this.__dataOld = null;\n        this._propertiesChanged(props, changedProps, old);\n      }\n    }\n\n    /**\n     * Called in `_flushProperties` to determine if `_propertiesChanged`\n     * should be called. The default implementation returns true if\n     * properties are pending. Override to customize when\n     * `_propertiesChanged` is called.\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {!Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {!Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {boolean} true if changedProps is truthy\n     */\n    _shouldPropertiesChange(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n      return Boolean(changedProps);\n    }\n\n    /**\n     * Callback called when any properties with accessors created via\n     * `_createPropertyAccessor` have been set.\n     *\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {!Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {!Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {void}\n     * @protected\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n    }\n\n    /**\n     * Method called to determine whether a property value should be\n     * considered as a change and cause the `_propertiesChanged` callback\n     * to be enqueued.\n     *\n     * The default implementation returns `true` if a strict equality\n     * check fails. The method always returns false for `NaN`.\n     *\n     * Override this method to e.g. provide stricter checking for\n     * Objects/Arrays when using immutable patterns.\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     *   and enqueue a `_proeprtiesChanged` callback\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return (\n        // Strict equality check\n        (old !== value &&\n          // This ensures (old==NaN, value==NaN) always returns false\n          (old === old || value === value))\n      );\n    }\n\n    /**\n     * Implements native Custom Elements `attributeChangedCallback` to\n     * set an attribute value to a property via `_attributeToProperty`.\n     *\n     * @param {string} name Name of attribute that changed\n     * @param {?string} old Old attribute value\n     * @param {?string} value New attribute value\n     * @param {?string} namespace Attribute namespace.\n     * @return {void}\n     * @suppress {missingProperties} Super may or may not implement the callback\n     */\n    attributeChangedCallback(name, old, value, namespace) {\n      if (old !== value) {\n        this._attributeToProperty(name, value);\n      }\n      if (super.attributeChangedCallback) {\n        super.attributeChangedCallback(name, old, value, namespace);\n      }\n    }\n\n    /**\n     * Deserializes an attribute to its associated property.\n     *\n     * This method calls the `_deserializeValue` method to convert the string to\n     * a typed value.\n     *\n     * @param {string} attribute Name of attribute to deserialize.\n     * @param {?string} value of the attribute.\n     * @param {*=} type type to deserialize to, defaults to the value\n     * returned from `typeForProperty`\n     * @return {void}\n     */\n    _attributeToProperty(attribute, value, type) {\n      if (!this.__serializing) {\n        const map = this.__dataAttributes;\n        const property = map && map[attribute] || attribute;\n        this[property] = this._deserializeValue(value, type ||\n          this.constructor.typeForProperty(property));\n      }\n    }\n\n    /**\n     * Serializes a property to its associated attribute.\n     *\n     * @suppress {invalidCasts} Closure can't figure out `this` is an element.\n     *\n     * @param {string} property Property name to reflect.\n     * @param {string=} attribute Attribute name to reflect to.\n     * @param {*=} value Property value to refect.\n     * @return {void}\n     */\n    _propertyToAttribute(property, attribute, value) {\n      this.__serializing = true;\n      value = (arguments.length < 3) ? this[property] : value;\n      this._valueToNodeAttribute(/** @type {!HTMLElement} */(this), value,\n        attribute || this.constructor.attributeNameForProperty(property));\n      this.__serializing = false;\n    }\n\n    /**\n     * Sets a typed value to an HTML attribute on a node.\n     *\n     * This method calls the `_serializeValue` method to convert the typed\n     * value to a string.  If the `_serializeValue` method returns `undefined`,\n     * the attribute will be removed (this is the default for boolean\n     * type `false`).\n     *\n     * @param {Element} node Element to set attribute to.\n     * @param {*} value Value to serialize.\n     * @param {string} attribute Attribute name to serialize to.\n     * @return {void}\n     */\n    _valueToNodeAttribute(node, value, attribute) {\n      const str = this._serializeValue(value);\n      if (str === undefined) {\n        node.removeAttribute(attribute);\n      } else {\n        node.setAttribute(attribute, str);\n      }\n    }\n\n    /**\n     * Converts a typed JavaScript value to a string.\n     *\n     * This method is called when setting JS property values to\n     * HTML attributes.  Users may override this method to provide\n     * serialization for custom types.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided\n     * property  value.\n     */\n    _serializeValue(value) {\n      switch (typeof value) {\n        case 'boolean':\n          return value ? '' : undefined;\n        default:\n          return value != null ? value.toString() : undefined;\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called when reading HTML attribute values to\n     * JS properties.  Users may override this method to provide\n     * deserialization for custom `type`s. Types for `Boolean`, `String`,\n     * and `Number` convert attributes to the expected types.\n     *\n     * @param {?string} value Value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     */\n    _deserializeValue(value, type) {\n      switch (type) {\n        case Boolean:\n          return (value !== null);\n        case Number:\n          return Number(value);\n        default:\n          return value;\n      }\n    }\n\n  }\n\n  return PropertiesChanged;\n});\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/mixins/properties-changed.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/mixins/properties-mixin.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/mixins/properties-mixin.js ***!
  \**********************************************************************/
/*! exports provided: PropertiesMixin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PropertiesMixin\", function() { return PropertiesMixin; });\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_utils_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/* harmony import */ var _properties_changed_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./properties-changed.js */ \"./node_modules/@polymer/polymer/lib/mixins/properties-changed.js\");\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n/**\n * Creates a copy of `props` with each property normalized such that\n * upgraded it is an object with at least a type property { type: Type}.\n *\n * @param {Object} props Properties to normalize\n * @return {Object} Copy of input `props` with normalized properties that\n * are in the form {type: Type}\n * @private\n */\nfunction normalizeProperties(props) {\n  const output = {};\n  for (let p in props) {\n    const o = props[p];\n    output[p] = (typeof o === 'function') ? {type: o} : o;\n  }\n  return output;\n}\n\n/**\n * Mixin that provides a minimal starting point to using the PropertiesChanged\n * mixin by providing a mechanism to declare properties in a static\n * getter (e.g. static get properties() { return { foo: String } }). Changes\n * are reported via the `_propertiesChanged` method.\n *\n * This mixin provides no specific support for rendering. Users are expected\n * to create a ShadowRoot and put content into it and update it in whatever\n * way makes sense. This can be done in reaction to properties changing by\n * implementing `_propertiesChanged`.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertiesChanged\n * @summary Mixin that provides a minimal starting point for using\n * the PropertiesChanged mixin by providing a declarative `properties` object.\n */\nconst PropertiesMixin = Object(_utils_mixin_js__WEBPACK_IMPORTED_MODULE_1__[\"dedupingMixin\"])(superClass => {\n\n /**\n  * @constructor\n  * @extends {superClass}\n  * @implements {Polymer_PropertiesChanged}\n  */\n const base = Object(_properties_changed_js__WEBPACK_IMPORTED_MODULE_2__[\"PropertiesChanged\"])(superClass);\n\n /**\n  * Returns the super class constructor for the given class, if it is an\n  * instance of the PropertiesMixin.\n  *\n  * @param {!PropertiesMixinConstructor} constructor PropertiesMixin constructor\n  * @return {PropertiesMixinConstructor} Super class constructor\n  */\n function superPropertiesClass(constructor) {\n   const superCtor = Object.getPrototypeOf(constructor);\n\n   // Note, the `PropertiesMixin` class below only refers to the class\n   // generated by this call to the mixin; the instanceof test only works\n   // because the mixin is deduped and guaranteed only to apply once, hence\n   // all constructors in a proto chain will see the same `PropertiesMixin`\n   return (superCtor.prototype instanceof PropertiesMixin) ?\n     /** @type {PropertiesMixinConstructor} */ (superCtor) : null;\n }\n\n /**\n  * Returns a memoized version of the `properties` object for the\n  * given class. Properties not in object format are converted to at\n  * least {type}.\n  *\n  * @param {PropertiesMixinConstructor} constructor PropertiesMixin constructor\n  * @return {Object} Memoized properties object\n  */\n function ownProperties(constructor) {\n   if (!constructor.hasOwnProperty(JSCompiler_renameProperty('__ownProperties', constructor))) {\n     let props = null;\n\n     if (constructor.hasOwnProperty(JSCompiler_renameProperty('properties', constructor)) && constructor.properties) {\n       props = normalizeProperties(constructor.properties);\n     }\n\n     constructor.__ownProperties = props;\n   }\n   return constructor.__ownProperties;\n }\n\n /**\n  * @polymer\n  * @mixinClass\n  * @extends {base}\n  * @implements {Polymer_PropertiesMixin}\n  * @unrestricted\n  */\n class PropertiesMixin extends base {\n\n   /**\n    * Implements standard custom elements getter to observes the attributes\n    * listed in `properties`.\n    * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n    */\n   static get observedAttributes() {\n     const props = this._properties;\n     return props ? Object.keys(props).map(p => this.attributeNameForProperty(p)) : [];\n   }\n\n   /**\n    * Finalizes an element definition, including ensuring any super classes\n    * are also finalized. This includes ensuring property\n    * accessors exist on the element prototype. This method calls\n    * `_finalizeClass` to finalize each constructor in the prototype chain.\n    * @return {void}\n    */\n   static finalize() {\n     if (!this.hasOwnProperty(JSCompiler_renameProperty('__finalized', this))) {\n       const superCtor = superPropertiesClass(/** @type {PropertiesMixinConstructor} */(this));\n       if (superCtor) {\n         superCtor.finalize();\n       }\n       this.__finalized = true;\n       this._finalizeClass();\n     }\n   }\n\n   /**\n    * Finalize an element class. This includes ensuring property\n    * accessors exist on the element prototype. This method is called by\n    * `finalize` and finalizes the class constructor.\n    *\n    * @protected\n    */\n   static _finalizeClass() {\n     const props = ownProperties(/** @type {PropertiesMixinConstructor} */(this));\n     if (props) {\n       this.createProperties(props);\n     }\n   }\n\n   /**\n    * Returns a memoized version of all properties, including those inherited\n    * from super classes. Properties not in object format are converted to\n    * at least {type}.\n    *\n    * @return {Object} Object containing properties for this class\n    * @protected\n    */\n   static get _properties() {\n     if (!this.hasOwnProperty(\n       JSCompiler_renameProperty('__properties', this))) {\n       const superCtor = superPropertiesClass(/** @type {PropertiesMixinConstructor} */(this));\n       this.__properties = Object.assign({},\n         superCtor && superCtor._properties,\n         ownProperties(/** @type {PropertiesMixinConstructor} */(this)));\n     }\n     return this.__properties;\n   }\n\n   /**\n    * Overrides `PropertiesChanged` method to return type specified in the\n    * static `properties` object for the given property.\n    * @param {string} name Name of property\n    * @return {*} Type to which to deserialize attribute\n    *\n    * @protected\n    */\n   static typeForProperty(name) {\n     const info = this._properties[name];\n     return info && info.type;\n   }\n\n   /**\n    * Overrides `PropertiesChanged` method and adds a call to\n    * `finalize` which lazily configures the element's property accessors.\n    * @override\n    * @return {void}\n    */\n   _initializeProperties() {\n     this.constructor.finalize();\n     super._initializeProperties();\n   }\n\n   /**\n    * Called when the element is added to a document.\n    * Calls `_enableProperties` to turn on property system from\n    * `PropertiesChanged`.\n    * @suppress {missingProperties} Super may or may not implement the callback\n    * @return {void}\n    */\n   connectedCallback() {\n     if (super.connectedCallback) {\n       super.connectedCallback();\n     }\n     this._enableProperties();\n   }\n\n   /**\n    * Called when the element is removed from a document\n    * @suppress {missingProperties} Super may or may not implement the callback\n    * @return {void}\n    */\n   disconnectedCallback() {\n     if (super.disconnectedCallback) {\n       super.disconnectedCallback();\n     }\n   }\n\n }\n\n return PropertiesMixin;\n\n});\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/mixins/properties-mixin.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/mixins/property-accessors.js":
/*!************************************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/mixins/property-accessors.js ***!
  \************************************************************************/
/*! exports provided: PropertyAccessors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PropertyAccessors\", function() { return PropertyAccessors; });\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_utils_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/* harmony import */ var _utils_case_map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/case-map.js */ \"./node_modules/@polymer/polymer/lib/utils/case-map.js\");\n/* harmony import */ var _properties_changed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./properties-changed.js */ \"./node_modules/@polymer/polymer/lib/mixins/properties-changed.js\");\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n\nlet caseMap = _utils_case_map_js__WEBPACK_IMPORTED_MODULE_2__;\n\n// Save map of native properties; this forms a blacklist or properties\n// that won't have their values \"saved\" by `saveAccessorValue`, since\n// reading from an HTMLElement accessor from the context of a prototype throws\nconst nativeProperties = {};\nlet proto = HTMLElement.prototype;\nwhile (proto) {\n  let props = Object.getOwnPropertyNames(proto);\n  for (let i=0; i<props.length; i++) {\n    nativeProperties[props[i]] = true;\n  }\n  proto = Object.getPrototypeOf(proto);\n}\n\n/**\n * Used to save the value of a property that will be overridden with\n * an accessor. If the `model` is a prototype, the values will be saved\n * in `__dataProto`, and it's up to the user (or downstream mixin) to\n * decide how/when to set these values back into the accessors.\n * If `model` is already an instance (it has a `__data` property), then\n * the value will be set as a pending property, meaning the user should\n * call `_invalidateProperties` or `_flushProperties` to take effect\n *\n * @param {Object} model Prototype or instance\n * @param {string} property Name of property\n * @return {void}\n * @private\n */\nfunction saveAccessorValue(model, property) {\n  // Don't read/store value for any native properties since they could throw\n  if (!nativeProperties[property]) {\n    let value = model[property];\n    if (value !== undefined) {\n      if (model.__data) {\n        // Adding accessor to instance; update the property\n        // It is the user's responsibility to call _flushProperties\n        model._setPendingProperty(property, value);\n      } else {\n        // Adding accessor to proto; save proto's value for instance-time use\n        if (!model.__dataProto) {\n          model.__dataProto = {};\n        } else if (!model.hasOwnProperty(JSCompiler_renameProperty('__dataProto', model))) {\n          model.__dataProto = Object.create(model.__dataProto);\n        }\n        model.__dataProto[property] = value;\n      }\n    }\n  }\n}\n\n/**\n * Element class mixin that provides basic meta-programming for creating one\n * or more property accessors (getter/setter pair) that enqueue an async\n * (batched) `_propertiesChanged` callback.\n *\n * For basic usage of this mixin:\n *\n * -   Declare attributes to observe via the standard `static get observedAttributes()`. Use\n *     `dash-case` attribute names to represent `camelCase` property names.\n * -   Implement the `_propertiesChanged` callback on the class.\n * -   Call `MyClass.createPropertiesForAttributes()` **once** on the class to generate\n *     property accessors for each observed attribute. This must be called before the first\n *     instance is created, for example, by calling it before calling `customElements.define`.\n *     It can also be called lazily from the element's `constructor`, as long as it's guarded so\n *     that the call is only made once, when the first instance is created.\n * -   Call `this._enableProperties()` in the element's `connectedCallback` to enable\n *     the accessors.\n *\n * Any `observedAttributes` will automatically be\n * deserialized via `attributeChangedCallback` and set to the associated\n * property using `dash-case`-to-`camelCase` convention.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertiesChanged\n * @summary Element class mixin for reacting to property changes from\n *   generated property accessors.\n */\nconst PropertyAccessors = Object(_utils_mixin_js__WEBPACK_IMPORTED_MODULE_1__[\"dedupingMixin\"])(superClass => {\n\n  /**\n   * @constructor\n   * @extends {superClass}\n   * @implements {Polymer_PropertiesChanged}\n   * @unrestricted\n   */\n   const base = Object(_properties_changed_js__WEBPACK_IMPORTED_MODULE_3__[\"PropertiesChanged\"])(superClass);\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyAccessors}\n   * @extends {base}\n   * @unrestricted\n   */\n  class PropertyAccessors extends base {\n\n    /**\n     * Generates property accessors for all attributes in the standard\n     * static `observedAttributes` array.\n     *\n     * Attribute names are mapped to property names using the `dash-case` to\n     * `camelCase` convention\n     *\n     * @return {void}\n     */\n    static createPropertiesForAttributes() {\n      let a$ = this.observedAttributes;\n      for (let i=0; i < a$.length; i++) {\n        this.prototype._createPropertyAccessor(caseMap.dashToCamelCase(a$[i]));\n      }\n    }\n\n    /**\n     * Returns an attribute name that corresponds to the given property.\n     * By default, converts camel to dash case, e.g. `fooBar` to `foo-bar`.\n     * @param {string} property Property to convert\n     * @return {string} Attribute name corresponding to the given property.\n     *\n     * @protected\n     */\n    static attributeNameForProperty(property) {\n      return caseMap.camelToDashCase(property);\n    }\n\n    /**\n     * Overrides PropertiesChanged implementation to initialize values for\n     * accessors created for values that already existed on the element\n     * prototype.\n     *\n     * @return {void}\n     * @protected\n     */\n    _initializeProperties() {\n      if (this.__dataProto) {\n        this._initializeProtoProperties(this.__dataProto);\n        this.__dataProto = null;\n      }\n      super._initializeProperties();\n    }\n\n    /**\n     * Called at instance time with bag of properties that were overwritten\n     * by accessors on the prototype when accessors were created.\n     *\n     * The default implementation sets these properties back into the\n     * setter at instance time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @return {void}\n     * @protected\n     */\n    _initializeProtoProperties(props) {\n      for (let p in props) {\n        this._setProperty(p, props[p]);\n      }\n    }\n\n    /**\n     * Ensures the element has the given attribute. If it does not,\n     * assigns the given value to the attribute.\n     *\n     * @suppress {invalidCasts} Closure can't figure out `this` is infact an element\n     *\n     * @param {string} attribute Name of attribute to ensure is set.\n     * @param {string} value of the attribute.\n     * @return {void}\n     */\n    _ensureAttribute(attribute, value) {\n      const el = /** @type {!HTMLElement} */(this);\n      if (!el.hasAttribute(attribute)) {\n        this._valueToNodeAttribute(el, value, attribute);\n      }\n    }\n\n    /**\n     * Overrides PropertiesChanged implemention to serialize objects as JSON.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided property value.\n     */\n    _serializeValue(value) {\n      /* eslint-disable no-fallthrough */\n      switch (typeof value) {\n        case 'object':\n          if (value instanceof Date) {\n            return value.toString();\n          } else if (value) {\n            try {\n              return JSON.stringify(value);\n            } catch(x) {\n              return '';\n            }\n          }\n\n        default:\n          return super._serializeValue(value);\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called by Polymer when reading HTML attribute values to\n     * JS properties.  Users may override this method on Polymer element\n     * prototypes to provide deserialization for custom `type`s.  Note,\n     * the `type` argument is the value of the `type` field provided in the\n     * `properties` configuration object for a given property, and is\n     * by convention the constructor for the type to deserialize.\n     *\n     *\n     * @param {?string} value Attribute value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     */\n    _deserializeValue(value, type) {\n      /**\n       * @type {*}\n       */\n      let outValue;\n      switch (type) {\n        case Object:\n          try {\n            outValue = JSON.parse(/** @type {string} */(value));\n          } catch(x) {\n            // allow non-JSON literals like Strings and Numbers\n            outValue = value;\n          }\n          break;\n        case Array:\n          try {\n            outValue = JSON.parse(/** @type {string} */(value));\n          } catch(x) {\n            outValue = null;\n            console.warn(`Polymer::Attributes: couldn't decode Array as JSON: ${value}`);\n          }\n          break;\n        case Date:\n          outValue = isNaN(value) ? String(value) : Number(value);\n          outValue = new Date(outValue);\n          break;\n        default:\n          outValue = super._deserializeValue(value, type);\n          break;\n      }\n      return outValue;\n    }\n    /* eslint-enable no-fallthrough */\n\n    /**\n     * Overrides PropertiesChanged implementation to save existing prototype\n     * property value so that it can be reset.\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created\n     *\n     * When calling on a prototype, any overwritten values are saved in\n     * `__dataProto`, and it is up to the subclasser to decide how/when\n     * to set those properties back into the accessor.  When calling on an\n     * instance, the overwritten value is set via `_setPendingProperty`,\n     * and the user should call `_invalidateProperties` or `_flushProperties`\n     * for the values to take effect.\n     * @protected\n     * @return {void}\n     */\n    _definePropertyAccessor(property, readOnly) {\n      saveAccessorValue(this, property);\n      super._definePropertyAccessor(property, readOnly);\n    }\n\n    /**\n     * Returns true if this library created an accessor for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if an accessor was created\n     */\n    _hasAccessor(property) {\n      return this.__dataHasAccessor && this.__dataHasAccessor[property];\n    }\n\n    /**\n     * Returns true if the specified property has a pending change.\n     *\n     * @param {string} prop Property name\n     * @return {boolean} True if property has a pending change\n     * @protected\n     */\n    _isPropertyPending(prop) {\n      return Boolean(this.__dataPending && (prop in this.__dataPending));\n    }\n\n  }\n\n  return PropertyAccessors;\n\n});\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/mixins/property-accessors.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/mixins/property-effects.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/mixins/property-effects.js ***!
  \**********************************************************************/
/*! exports provided: PropertyEffects */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PropertyEffects\", function() { return PropertyEffects; });\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_utils_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/* harmony import */ var _utils_path_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/path.js */ \"./node_modules/@polymer/polymer/lib/utils/path.js\");\n/* harmony import */ var _utils_case_map_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/case-map.js */ \"./node_modules/@polymer/polymer/lib/utils/case-map.js\");\n/* harmony import */ var _property_accessors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./property-accessors.js */ \"./node_modules/@polymer/polymer/lib/mixins/property-accessors.js\");\n/* harmony import */ var _template_stamp_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./template-stamp.js */ \"./node_modules/@polymer/polymer/lib/mixins/template-stamp.js\");\n/* harmony import */ var _utils_settings_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/settings.js */ \"./node_modules/@polymer/polymer/lib/utils/settings.js\");\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n/* for notify, reflect */\n\n\n\n/* for annotated effects */\n\n\n\n/** @const {Object} */\nconst CaseMap = _utils_case_map_js__WEBPACK_IMPORTED_MODULE_3__;\n\n// Monotonically increasing unique ID used for de-duping effects triggered\n// from multiple properties in the same turn\nlet dedupeId = 0;\n\n/**\n * Property effect types; effects are stored on the prototype using these keys\n * @enum {string}\n */\nconst TYPES = {\n  COMPUTE: '__computeEffects',\n  REFLECT: '__reflectEffects',\n  NOTIFY: '__notifyEffects',\n  PROPAGATE: '__propagateEffects',\n  OBSERVE: '__observeEffects',\n  READ_ONLY: '__readOnly'\n};\n\n/** @const {RegExp} */\nconst capitalAttributeRegex = /[A-Z]/;\n\n/**\n * @typedef {{\n * name: (string | undefined),\n * structured: (boolean | undefined),\n * wildcard: (boolean | undefined)\n * }}\n */\nlet DataTrigger; //eslint-disable-line no-unused-vars\n\n/**\n * @typedef {{\n * info: ?,\n * trigger: (!DataTrigger | undefined),\n * fn: (!Function | undefined)\n * }}\n */\nlet DataEffect; //eslint-disable-line no-unused-vars\n\nlet PropertyEffectsType; //eslint-disable-line no-unused-vars\n\n/**\n * Ensures that the model has an own-property map of effects for the given type.\n * The model may be a prototype or an instance.\n *\n * Property effects are stored as arrays of effects by property in a map,\n * by named type on the model. e.g.\n *\n *   __computeEffects: {\n *     foo: [ ... ],\n *     bar: [ ... ]\n *   }\n *\n * If the model does not yet have an effect map for the type, one is created\n * and returned.  If it does, but it is not an own property (i.e. the\n * prototype had effects), the the map is deeply cloned and the copy is\n * set on the model and returned, ready for new effects to be added.\n *\n * @param {Object} model Prototype or instance\n * @param {string} type Property effect type\n * @return {Object} The own-property map of effects for the given type\n * @private\n */\nfunction ensureOwnEffectMap(model, type) {\n  let effects = model[type];\n  if (!effects) {\n    effects = model[type] = {};\n  } else if (!model.hasOwnProperty(type)) {\n    effects = model[type] = Object.create(model[type]);\n    for (let p in effects) {\n      let protoFx = effects[p];\n      let instFx = effects[p] = Array(protoFx.length);\n      for (let i=0; i<protoFx.length; i++) {\n        instFx[i] = protoFx[i];\n      }\n    }\n  }\n  return effects;\n}\n\n// -- effects ----------------------------------------------\n\n/**\n * Runs all effects of a given type for the given set of property changes\n * on an instance.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} effects Object map of property-to-Array of effects\n * @param {Object} props Bag of current property changes\n * @param {Object=} oldProps Bag of previous values for changed properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffects(inst, effects, props, oldProps, hasPaths, extraArgs) {\n  if (effects) {\n    let ran = false;\n    let id = dedupeId++;\n    for (let prop in props) {\n      if (runEffectsForProperty(inst, effects, id, prop, props, oldProps, hasPaths, extraArgs)) {\n        ran = true;\n      }\n    }\n    return ran;\n  }\n  return false;\n}\n\n/**\n * Runs a list of effects for a given property.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} effects Object map of property-to-Array of effects\n * @param {number} dedupeId Counter used for de-duping effects\n * @param {string} prop Name of changed property\n * @param {*} props Changed properties\n * @param {*} oldProps Old properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffectsForProperty(inst, effects, dedupeId, prop, props, oldProps, hasPaths, extraArgs) {\n  let ran = false;\n  let rootProperty = hasPaths ? Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"root\"])(prop) : prop;\n  let fxs = effects[rootProperty];\n  if (fxs) {\n    for (let i=0, l=fxs.length, fx; (i<l) && (fx=fxs[i]); i++) {\n      if ((!fx.info || fx.info.lastRun !== dedupeId) &&\n          (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n        if (fx.info) {\n          fx.info.lastRun = dedupeId;\n        }\n        fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);\n        ran = true;\n      }\n    }\n  }\n  return ran;\n}\n\n/**\n * Determines whether a property/path that has changed matches the trigger\n * criteria for an effect.  A trigger is a descriptor with the following\n * structure, which matches the descriptors returned from `parseArg`.\n * e.g. for `foo.bar.*`:\n * ```\n * trigger: {\n *   name: 'a.b',\n *   structured: true,\n *   wildcard: true\n * }\n * ```\n * If no trigger is given, the path is deemed to match.\n *\n * @param {string} path Path or property that changed\n * @param {DataTrigger} trigger Descriptor\n * @return {boolean} Whether the path matched the trigger\n */\nfunction pathMatchesTrigger(path, trigger) {\n  if (trigger) {\n    let triggerPath = trigger.name;\n    return (triggerPath == path) ||\n      (trigger.structured && Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"isAncestor\"])(triggerPath, path)) ||\n      (trigger.wildcard && Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"isDescendant\"])(triggerPath, path));\n  } else {\n    return true;\n  }\n}\n\n/**\n * Implements the \"observer\" effect.\n *\n * Calls the method with `info.methodName` on the instance, passing the\n * new and old values.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {void}\n * @private\n */\nfunction runObserverEffect(inst, property, props, oldProps, info) {\n  let fn = typeof info.method === \"string\" ? inst[info.method] : info.method;\n  let changedProp = info.property;\n  if (fn) {\n    fn.call(inst, inst.__data[changedProp], oldProps[changedProp]);\n  } else if (!info.dynamicFn) {\n    console.warn('observer method `' + info.method + '` not defined');\n  }\n}\n\n/**\n * Runs \"notify\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * will dispatch path notification events in the case that the property\n * changed was a path and the root property for that path didn't have a\n * \"notify\" effect.  This is to maintain 1.0 behavior that did not require\n * `notify: true` to ensure object sub-property notifications were\n * sent.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} notifyProps Bag of properties to notify\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runNotifyEffects(inst, notifyProps, props, oldProps, hasPaths) {\n  // Notify\n  let fxs = inst[TYPES.NOTIFY];\n  let notified;\n  let id = dedupeId++;\n  // Try normal notify effects; if none, fall back to try path notification\n  for (let prop in notifyProps) {\n    if (notifyProps[prop]) {\n      if (fxs && runEffectsForProperty(inst, fxs, id, prop, props, oldProps, hasPaths)) {\n        notified = true;\n      } else if (hasPaths && notifyPath(inst, prop, props)) {\n        notified = true;\n      }\n    }\n  }\n  // Flush host if we actually notified and host was batching\n  // And the host has already initialized clients; this prevents\n  // an issue with a host observing data changes before clients are ready.\n  let host;\n  if (notified && (host = inst.__dataHost) && host._invalidateProperties) {\n    host._invalidateProperties();\n  }\n}\n\n/**\n * Dispatches {property}-changed events with path information in the detail\n * object to indicate a sub-path of the property was changed.\n *\n * @param {!PropertyEffectsType} inst The element from which to fire the event\n * @param {string} path The path that was changed\n * @param {Object} props Bag of current property changes\n * @return {boolean} Returns true if the path was notified\n * @private\n */\nfunction notifyPath(inst, path, props) {\n  let rootProperty = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"root\"])(path);\n  if (rootProperty !== path) {\n    let eventName = Object(_utils_case_map_js__WEBPACK_IMPORTED_MODULE_3__[\"camelToDashCase\"])(rootProperty) + '-changed';\n    dispatchNotifyEvent(inst, eventName, props[path], path);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Dispatches {property}-changed events to indicate a property (or path)\n * changed.\n *\n * @param {!PropertyEffectsType} inst The element from which to fire the event\n * @param {string} eventName The name of the event to send ('{property}-changed')\n * @param {*} value The value of the changed property\n * @param {string | null | undefined} path If a sub-path of this property changed, the path\n *   that changed (optional).\n * @return {void}\n * @private\n * @suppress {invalidCasts}\n */\nfunction dispatchNotifyEvent(inst, eventName, value, path) {\n  let detail = {\n    value: value,\n    queueProperty: true\n  };\n  if (path) {\n    detail.path = path;\n  }\n  /** @type {!HTMLElement} */(inst).dispatchEvent(new CustomEvent(eventName, { detail }));\n}\n\n/**\n * Implements the \"notify\" effect.\n *\n * Dispatches a non-bubbling event named `info.eventName` on the instance\n * with a detail object containing the new `value`.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runNotifyEffect(inst, property, props, oldProps, info, hasPaths) {\n  let rootProperty = hasPaths ? Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"root\"])(property) : property;\n  let path = rootProperty != property ? property : null;\n  let value = path ? Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(inst, path) : inst.__data[property];\n  if (path && value === undefined) {\n    value = props[property];  // specifically for .splices\n  }\n  dispatchNotifyEvent(inst, info.eventName, value, path);\n}\n\n/**\n * Handler function for 2-way notification events. Receives context\n * information captured in the `addNotifyListener` closure from the\n * `__notifyListeners` metadata.\n *\n * Sets the value of the notified property to the host property or path.  If\n * the event contained path information, translate that path to the host\n * scope's name for that path first.\n *\n * @param {CustomEvent} event Notification event (e.g. '<property>-changed')\n * @param {!PropertyEffectsType} inst Host element instance handling the notification event\n * @param {string} fromProp Child element property that was bound\n * @param {string} toPath Host property/path that was bound\n * @param {boolean} negate Whether the binding was negated\n * @return {void}\n * @private\n */\nfunction handleNotification(event, inst, fromProp, toPath, negate) {\n  let value;\n  let detail = /** @type {Object} */(event.detail);\n  let fromPath = detail && detail.path;\n  if (fromPath) {\n    toPath = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"translate\"])(fromProp, toPath, fromPath);\n    value = detail && detail.value;\n  } else {\n    value = event.target[fromProp];\n  }\n  value = negate ? !value : value;\n  if (!inst[TYPES.READ_ONLY] || !inst[TYPES.READ_ONLY][toPath]) {\n    if (inst._setPendingPropertyOrPath(toPath, value, true, Boolean(fromPath))\n      && (!detail || !detail.queueProperty)) {\n      inst._invalidateProperties();\n    }\n  }\n}\n\n/**\n * Implements the \"reflect\" effect.\n *\n * Sets the attribute named `info.attrName` to the given property value.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {void}\n * @private\n */\nfunction runReflectEffect(inst, property, props, oldProps, info) {\n  let value = inst.__data[property];\n  if (_utils_settings_js__WEBPACK_IMPORTED_MODULE_6__[\"sanitizeDOMValue\"]) {\n    value = Object(_utils_settings_js__WEBPACK_IMPORTED_MODULE_6__[\"sanitizeDOMValue\"])(value, info.attrName, 'attribute', /** @type {Node} */(inst));\n  }\n  inst._propertyToAttribute(property, info.attrName, value);\n}\n\n/**\n * Runs \"computed\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * continues to run computed effects based on the output of each pass until\n * there are no more newly computed properties.  This ensures that all\n * properties that will be computed by the initial set of changes are\n * computed before other effects (binding propagation, observers, and notify)\n * run.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {!Object} changedProps Bag of changed properties\n * @param {!Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runComputedEffects(inst, changedProps, oldProps, hasPaths) {\n  let computeEffects = inst[TYPES.COMPUTE];\n  if (computeEffects) {\n    let inputProps = changedProps;\n    while (runEffects(inst, computeEffects, inputProps, oldProps, hasPaths)) {\n      Object.assign(oldProps, inst.__dataOld);\n      Object.assign(changedProps, inst.__dataPending);\n      inputProps = inst.__dataPending;\n      inst.__dataPending = null;\n    }\n  }\n}\n\n/**\n * Implements the \"computed property\" effect by running the method with the\n * values of the arguments specified in the `info` object and setting the\n * return value to the computed property specified.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {void}\n * @private\n */\nfunction runComputedEffect(inst, property, props, oldProps, info) {\n  let result = runMethodEffect(inst, property, props, oldProps, info);\n  let computedProp = info.methodInfo;\n  if (inst.__dataHasAccessor && inst.__dataHasAccessor[computedProp]) {\n    inst._setPendingProperty(computedProp, result, true);\n  } else {\n    inst[computedProp] = result;\n  }\n}\n\n/**\n * Computes path changes based on path links set up using the `linkPaths`\n * API.\n *\n * @param {!PropertyEffectsType} inst The instance whose props are changing\n * @param {string | !Array<(string|number)>} path Path that has changed\n * @param {*} value Value of changed path\n * @return {void}\n * @private\n */\nfunction computeLinkedPaths(inst, path, value) {\n  let links = inst.__dataLinkedPaths;\n  if (links) {\n    let link;\n    for (let a in links) {\n      let b = links[a];\n      if (Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"isDescendant\"])(a, path)) {\n        link = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"translate\"])(a, b, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      } else if (Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"isDescendant\"])(b, path)) {\n        link = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"translate\"])(b, a, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      }\n    }\n  }\n}\n\n// -- bindings ----------------------------------------------\n\n/**\n * Adds binding metadata to the current `nodeInfo`, and binding effects\n * for all part dependencies to `templateInfo`.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {NodeInfo} nodeInfo Node metadata for current template node\n * @param {string} kind Binding kind, either 'property', 'attribute', or 'text'\n * @param {string} target Target property name\n * @param {!Array<!BindingPart>} parts Array of binding part metadata\n * @param {string=} literal Literal text surrounding binding parts (specified\n *   only for 'property' bindings, since these must be initialized as part\n *   of boot-up)\n * @return {void}\n * @private\n */\nfunction addBinding(constructor, templateInfo, nodeInfo, kind, target, parts, literal) {\n  // Create binding metadata and add to nodeInfo\n  nodeInfo.bindings = nodeInfo.bindings || [];\n  let /** Binding */ binding = { kind, target, parts, literal, isCompound: (parts.length !== 1) };\n  nodeInfo.bindings.push(binding);\n  // Add listener info to binding metadata\n  if (shouldAddListener(binding)) {\n    let {event, negate} = binding.parts[0];\n    binding.listenerEvent = event || (CaseMap.camelToDashCase(target) + '-changed');\n    binding.listenerNegate = negate;\n  }\n  // Add \"propagate\" property effects to templateInfo\n  let index = templateInfo.nodeInfoList.length;\n  for (let i=0; i<binding.parts.length; i++) {\n    let part = binding.parts[i];\n    part.compoundIndex = i;\n    addEffectForBindingPart(constructor, templateInfo, binding, part, index);\n  }\n}\n\n/**\n * Adds property effects to the given `templateInfo` for the given binding\n * part.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {number} index Index into `nodeInfoList` for this node\n * @return {void}\n */\nfunction addEffectForBindingPart(constructor, templateInfo, binding, part, index) {\n  if (!part.literal) {\n    if (binding.kind === 'attribute' && binding.target[0] === '-') {\n      console.warn('Cannot set attribute ' + binding.target +\n        ' because \"-\" is not a valid attribute starting character');\n    } else {\n      let dependencies = part.dependencies;\n      let info = { index, binding, part, evaluator: constructor };\n      for (let j=0; j<dependencies.length; j++) {\n        let trigger = dependencies[j];\n        if (typeof trigger == 'string') {\n          trigger = parseArg(trigger);\n          trigger.wildcard = true;\n        }\n        constructor._addTemplatePropertyEffect(templateInfo, trigger.rootProperty, {\n          fn: runBindingEffect,\n          info, trigger\n        });\n      }\n    }\n  }\n}\n\n/**\n * Implements the \"binding\" (property/path binding) effect.\n *\n * Note that binding syntax is overridable via `_parseBindings` and\n * `_evaluateBinding`.  This method will call `_evaluateBinding` for any\n * non-literal parts returned from `_parseBindings`.  However,\n * there is no support for _path_ bindings via custom binding parts,\n * as this is specific to Polymer's path binding syntax.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} path Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @param {Array} nodeList List of nodes associated with `nodeInfoList` template\n *   metadata\n * @return {void}\n * @private\n */\nfunction runBindingEffect(inst, path, props, oldProps, info, hasPaths, nodeList) {\n  let node = nodeList[info.index];\n  let binding = info.binding;\n  let part = info.part;\n  // Subpath notification: transform path and set to client\n  // e.g.: foo=\"{{obj.sub}}\", path: 'obj.sub.prop', set 'foo.prop'=obj.sub.prop\n  if (hasPaths && part.source && (path.length > part.source.length) &&\n      (binding.kind == 'property') && !binding.isCompound &&\n      node.__isPropertyEffectsClient &&\n      node.__dataHasAccessor && node.__dataHasAccessor[binding.target]) {\n    let value = props[path];\n    path = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"translate\"])(part.source, binding.target, path);\n    if (node._setPendingPropertyOrPath(path, value, false, true)) {\n      inst._enqueueClient(node);\n    }\n  } else {\n    let value = info.evaluator._evaluateBinding(inst, part, path, props, oldProps, hasPaths);\n    // Propagate value to child\n    applyBindingValue(inst, node, binding, part, value);\n  }\n}\n\n/**\n * Sets the value for an \"binding\" (binding) effect to a node,\n * either as a property or attribute.\n *\n * @param {!PropertyEffectsType} inst The instance owning the binding effect\n * @param {Node} node Target node for binding\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {*} value Value to set\n * @return {void}\n * @private\n */\nfunction applyBindingValue(inst, node, binding, part, value) {\n  value = computeBindingValue(node, value, binding, part);\n  if (_utils_settings_js__WEBPACK_IMPORTED_MODULE_6__[\"sanitizeDOMValue\"]) {\n    value = Object(_utils_settings_js__WEBPACK_IMPORTED_MODULE_6__[\"sanitizeDOMValue\"])(value, binding.target, binding.kind, node);\n  }\n  if (binding.kind == 'attribute') {\n    // Attribute binding\n    inst._valueToNodeAttribute(/** @type {Element} */(node), value, binding.target);\n  } else {\n    // Property binding\n    let prop = binding.target;\n    if (node.__isPropertyEffectsClient &&\n        node.__dataHasAccessor && node.__dataHasAccessor[prop]) {\n      if (!node[TYPES.READ_ONLY] || !node[TYPES.READ_ONLY][prop]) {\n        if (node._setPendingProperty(prop, value)) {\n          inst._enqueueClient(node);\n        }\n      }\n    } else  {\n      inst._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n}\n\n/**\n * Transforms an \"binding\" effect value based on compound & negation\n * effect metadata, as well as handling for special-case properties\n *\n * @param {Node} node Node the value will be set to\n * @param {*} value Value to set\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @return {*} Transformed value to set\n * @private\n */\nfunction computeBindingValue(node, value, binding, part) {\n  if (binding.isCompound) {\n    let storage = node.__dataCompoundStorage[binding.target];\n    storage[part.compoundIndex] = value;\n    value = storage.join('');\n  }\n  if (binding.kind !== 'attribute') {\n    // Some browsers serialize `undefined` to `\"undefined\"`\n    if (binding.target === 'textContent' ||\n        (binding.target === 'value' &&\n          (node.localName === 'input' || node.localName === 'textarea'))) {\n      value = value == undefined ? '' : value;\n    }\n  }\n  return value;\n}\n\n/**\n * Returns true if a binding's metadata meets all the requirements to allow\n * 2-way binding, and therefore a `<property>-changed` event listener should be\n * added:\n * - used curly braces\n * - is a property (not attribute) binding\n * - is not a textContent binding\n * - is not compound\n *\n * @param {!Binding} binding Binding metadata\n * @return {boolean} True if 2-way listener should be added\n * @private\n */\nfunction shouldAddListener(binding) {\n  return Boolean(binding.target) &&\n         binding.kind != 'attribute' &&\n         binding.kind != 'text' &&\n         !binding.isCompound &&\n         binding.parts[0].mode === '{';\n}\n\n/**\n * Setup compound binding storage structures, notify listeners, and dataHost\n * references onto the bound nodeList.\n *\n * @param {!PropertyEffectsType} inst Instance that bas been previously bound\n * @param {TemplateInfo} templateInfo Template metadata\n * @return {void}\n * @private\n */\nfunction setupBindings(inst, templateInfo) {\n  // Setup compound storage, dataHost, and notify listeners\n  let {nodeList, nodeInfoList} = templateInfo;\n  if (nodeInfoList.length) {\n    for (let i=0; i < nodeInfoList.length; i++) {\n      let info = nodeInfoList[i];\n      let node = nodeList[i];\n      let bindings = info.bindings;\n      if (bindings) {\n        for (let i=0; i<bindings.length; i++) {\n          let binding = bindings[i];\n          setupCompoundStorage(node, binding);\n          addNotifyListener(node, inst, binding);\n        }\n      }\n      node.__dataHost = inst;\n    }\n  }\n}\n\n/**\n * Initializes `__dataCompoundStorage` local storage on a bound node with\n * initial literal data for compound bindings, and sets the joined\n * literal parts to the bound property.\n *\n * When changes to compound parts occur, they are first set into the compound\n * storage array for that property, and then the array is joined to result in\n * the final value set to the property/attribute.\n *\n * @param {Node} node Bound node to initialize\n * @param {Binding} binding Binding metadata\n * @return {void}\n * @private\n */\nfunction setupCompoundStorage(node, binding) {\n  if (binding.isCompound) {\n    // Create compound storage map\n    let storage = node.__dataCompoundStorage ||\n      (node.__dataCompoundStorage = {});\n    let parts = binding.parts;\n    // Copy literals from parts into storage for this binding\n    let literals = new Array(parts.length);\n    for (let j=0; j<parts.length; j++) {\n      literals[j] = parts[j].literal;\n    }\n    let target = binding.target;\n    storage[target] = literals;\n    // Configure properties with their literal parts\n    if (binding.literal && binding.kind == 'property') {\n      node[target] = binding.literal;\n    }\n  }\n}\n\n/**\n * Adds a 2-way binding notification event listener to the node specified\n *\n * @param {Object} node Child element to add listener to\n * @param {!PropertyEffectsType} inst Host element instance to handle notification event\n * @param {Binding} binding Binding metadata\n * @return {void}\n * @private\n */\nfunction addNotifyListener(node, inst, binding) {\n  if (binding.listenerEvent) {\n    let part = binding.parts[0];\n    node.addEventListener(binding.listenerEvent, function(e) {\n      handleNotification(e, inst, binding.target, part.source, part.negate);\n    });\n  }\n}\n\n// -- for method-based effects (complexObserver & computed) --------------\n\n/**\n * Adds property effects for each argument in the method signature (and\n * optionally, for the method name if `dynamic` is true) that calls the\n * provided effect function.\n *\n * @param {Element | Object} model Prototype or instance\n * @param {!MethodSignature} sig Method signature metadata\n * @param {string} type Type of property effect to add\n * @param {Function} effectFn Function to run when arguments change\n * @param {*=} methodInfo Effect-specific information to be included in\n *   method effect metadata\n * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n *   method names should be included as a dependency to the effect. Note,\n *   defaults to true if the signature is static (sig.static is true).\n * @return {void}\n * @private\n */\nfunction createMethodEffect(model, sig, type, effectFn, methodInfo, dynamicFn) {\n  dynamicFn = sig.static || (dynamicFn &&\n    (typeof dynamicFn !== 'object' || dynamicFn[sig.methodName]));\n  let info = {\n    methodName: sig.methodName,\n    args: sig.args,\n    methodInfo,\n    dynamicFn\n  };\n  for (let i=0, arg; (i<sig.args.length) && (arg=sig.args[i]); i++) {\n    if (!arg.literal) {\n      model._addPropertyEffect(arg.rootProperty, type, {\n        fn: effectFn, info: info, trigger: arg\n      });\n    }\n  }\n  if (dynamicFn) {\n    model._addPropertyEffect(sig.methodName, type, {\n      fn: effectFn, info: info\n    });\n  }\n}\n\n/**\n * Calls a method with arguments marshaled from properties on the instance\n * based on the method signature contained in the effect metadata.\n *\n * Multi-property observers, computed properties, and inline computing\n * functions call this function to invoke the method, then use the return\n * value accordingly.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {*} Returns the return value from the method invocation\n * @private\n */\nfunction runMethodEffect(inst, property, props, oldProps, info) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  let context = inst._methodHost || inst;\n  let fn = context[info.methodName];\n  if (fn) {\n    let args = marshalArgs(inst.__data, info.args, property, props);\n    return fn.apply(context, args);\n  } else if (!info.dynamicFn) {\n    console.warn('method `' + info.methodName + '` not defined');\n  }\n}\n\nconst emptyArray = [];\n\n// Regular expressions used for binding\nconst IDENT  = '(?:' + '[a-zA-Z_$][\\\\w.:$\\\\-*]*' + ')';\nconst NUMBER = '(?:' + '[-+]?[0-9]*\\\\.?[0-9]+(?:[eE][-+]?[0-9]+)?' + ')';\nconst SQUOTE_STRING = '(?:' + '\\'(?:[^\\'\\\\\\\\]|\\\\\\\\.)*\\'' + ')';\nconst DQUOTE_STRING = '(?:' + '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"' + ')';\nconst STRING = '(?:' + SQUOTE_STRING + '|' + DQUOTE_STRING + ')';\nconst ARGUMENT = '(?:(' + IDENT + '|' + NUMBER + '|' +  STRING + ')\\\\s*' + ')';\nconst ARGUMENTS = '(?:' + ARGUMENT + '(?:,\\\\s*' + ARGUMENT + ')*' + ')';\nconst ARGUMENT_LIST = '(?:' + '\\\\(\\\\s*' +\n                              '(?:' + ARGUMENTS + '?' + ')' +\n                            '\\\\)\\\\s*' + ')';\nconst BINDING = '(' + IDENT + '\\\\s*' + ARGUMENT_LIST + '?' + ')'; // Group 3\nconst OPEN_BRACKET = '(\\\\[\\\\[|{{)' + '\\\\s*';\nconst CLOSE_BRACKET = '(?:]]|}})';\nconst NEGATE = '(?:(!)\\\\s*)?'; // Group 2\nconst EXPRESSION = OPEN_BRACKET + NEGATE + BINDING + CLOSE_BRACKET;\nconst bindingRegex = new RegExp(EXPRESSION, \"g\");\n\n/**\n * Create a string from binding parts of all the literal parts\n *\n * @param {!Array<BindingPart>} parts All parts to stringify\n * @return {string} String made from the literal parts\n */\nfunction literalFromParts(parts) {\n  let s = '';\n  for (let i=0; i<parts.length; i++) {\n    let literal = parts[i].literal;\n    s += literal || '';\n  }\n  return s;\n}\n\n/**\n * Parses an expression string for a method signature, and returns a metadata\n * describing the method in terms of `methodName`, `static` (whether all the\n * arguments are literals), and an array of `args`\n *\n * @param {string} expression The expression to parse\n * @return {?MethodSignature} The method metadata object if a method expression was\n *   found, otherwise `undefined`\n * @private\n */\nfunction parseMethod(expression) {\n  // tries to match valid javascript property names\n  let m = expression.match(/([^\\s]+?)\\(([\\s\\S]*)\\)/);\n  if (m) {\n    let methodName = m[1];\n    let sig = { methodName, static: true, args: emptyArray };\n    if (m[2].trim()) {\n      // replace escaped commas with comma entity, split on un-escaped commas\n      let args = m[2].replace(/\\\\,/g, '&comma;').split(',');\n      return parseArgs(args, sig);\n    } else {\n      return sig;\n    }\n  }\n  return null;\n}\n\n/**\n * Parses an array of arguments and sets the `args` property of the supplied\n * signature metadata object. Sets the `static` property to false if any\n * argument is a non-literal.\n *\n * @param {!Array<string>} argList Array of argument names\n * @param {!MethodSignature} sig Method signature metadata object\n * @return {!MethodSignature} The updated signature metadata object\n * @private\n */\nfunction parseArgs(argList, sig) {\n  sig.args = argList.map(function(rawArg) {\n    let arg = parseArg(rawArg);\n    if (!arg.literal) {\n      sig.static = false;\n    }\n    return arg;\n  }, this);\n  return sig;\n}\n\n/**\n * Parses an individual argument, and returns an argument metadata object\n * with the following fields:\n *\n *   {\n *     value: 'prop',        // property/path or literal value\n *     literal: false,       // whether argument is a literal\n *     structured: false,    // whether the property is a path\n *     rootProperty: 'prop', // the root property of the path\n *     wildcard: false       // whether the argument was a wildcard '.*' path\n *   }\n *\n * @param {string} rawArg The string value of the argument\n * @return {!MethodArg} Argument metadata object\n * @private\n */\nfunction parseArg(rawArg) {\n  // clean up whitespace\n  let arg = rawArg.trim()\n    // replace comma entity with comma\n    .replace(/&comma;/g, ',')\n    // repair extra escape sequences; note only commas strictly need\n    // escaping, but we allow any other char to be escaped since its\n    // likely users will do this\n    .replace(/\\\\(.)/g, '\\$1')\n    ;\n  // basic argument descriptor\n  let a = {\n    name: arg,\n    value: '',\n    literal: false\n  };\n  // detect literal value (must be String or Number)\n  let fc = arg[0];\n  if (fc === '-') {\n    fc = arg[1];\n  }\n  if (fc >= '0' && fc <= '9') {\n    fc = '#';\n  }\n  switch(fc) {\n    case \"'\":\n    case '\"':\n      a.value = arg.slice(1, -1);\n      a.literal = true;\n      break;\n    case '#':\n      a.value = Number(arg);\n      a.literal = true;\n      break;\n  }\n  // if not literal, look for structured path\n  if (!a.literal) {\n    a.rootProperty = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"root\"])(arg);\n    // detect structured path (has dots)\n    a.structured = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"isPath\"])(arg);\n    if (a.structured) {\n      a.wildcard = (arg.slice(-2) == '.*');\n      if (a.wildcard) {\n        a.name = arg.slice(0, -2);\n      }\n    }\n  }\n  return a;\n}\n\n/**\n * Gather the argument values for a method specified in the provided array\n * of argument metadata.\n *\n * The `path` and `value` arguments are used to fill in wildcard descriptor\n * when the method is being called as a result of a path notification.\n *\n * @param {Object} data Instance data storage object to read properties from\n * @param {!Array<!MethodArg>} args Array of argument metadata\n * @param {string} path Property/path name that triggered the method effect\n * @param {Object} props Bag of current property changes\n * @return {Array<*>} Array of argument values\n * @private\n */\nfunction marshalArgs(data, args, path, props) {\n  let values = [];\n  for (let i=0, l=args.length; i<l; i++) {\n    let arg = args[i];\n    let name = arg.name;\n    let v;\n    if (arg.literal) {\n      v = arg.value;\n    } else {\n      if (arg.structured) {\n        v = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(data, name);\n        // when data is not stored e.g. `splices`\n        if (v === undefined) {\n          v = props[name];\n        }\n      } else {\n        v = data[name];\n      }\n    }\n    if (arg.wildcard) {\n      // Only send the actual path changed info if the change that\n      // caused the observer to run matched the wildcard\n      let baseChanged = (name.indexOf(path + '.') === 0);\n      let matches = (path.indexOf(name) === 0 && !baseChanged);\n      values[i] = {\n        path: matches ? path : name,\n        value: matches ? props[path] : v,\n        base: v\n      };\n    } else {\n      values[i] = v;\n    }\n  }\n  return values;\n}\n\n// data api\n\n/**\n * Sends array splice notifications (`.splices` and `.length`)\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!PropertyEffectsType} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {Array} splices Array of splice records\n * @return {void}\n * @private\n */\nfunction notifySplices(inst, array, path, splices) {\n  let splicesPath = path + '.splices';\n  inst.notifyPath(splicesPath, { indexSplices: splices });\n  inst.notifyPath(path + '.length', array.length);\n  // Null here to allow potentially large splice records to be GC'ed.\n  inst.__data[splicesPath] = {indexSplices: null};\n}\n\n/**\n * Creates a splice record and sends an array splice notification for\n * the described mutation\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!PropertyEffectsType} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {number} index Index at which the array mutation occurred\n * @param {number} addedCount Number of added items\n * @param {Array} removed Array of removed items\n * @return {void}\n * @private\n */\nfunction notifySplice(inst, array, path, index, addedCount, removed) {\n  notifySplices(inst, array, path, [{\n    index: index,\n    addedCount: addedCount,\n    removed: removed,\n    object: array,\n    type: 'splice'\n  }]);\n}\n\n/**\n * Returns an upper-cased version of the string.\n *\n * @param {string} name String to uppercase\n * @return {string} Uppercased string\n * @private\n */\nfunction upper(name) {\n  return name[0].toUpperCase() + name.substring(1);\n}\n\n/**\n * Element class mixin that provides meta-programming for Polymer's template\n * binding and data observation (collectively, \"property effects\") system.\n *\n * This mixin uses provides the following key static methods for adding\n * property effects to an element class:\n * - `addPropertyEffect`\n * - `createPropertyObserver`\n * - `createMethodObserver`\n * - `createNotifyingProperty`\n * - `createReadOnlyProperty`\n * - `createReflectedProperty`\n * - `createComputedProperty`\n * - `bindTemplate`\n *\n * Each method creates one or more property accessors, along with metadata\n * used by this mixin's implementation of `_propertiesChanged` to perform\n * the property effects.\n *\n * Underscored versions of the above methods also exist on the element\n * prototype for adding property effects on instances at runtime.\n *\n * Note that this mixin overrides several `PropertyAccessors` methods, in\n * many cases to maintain guarantees provided by the Polymer 1.x features;\n * notably it changes property accessors to be synchronous by default\n * whereas the default when using `PropertyAccessors` standalone is to be\n * async by default.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin TemplateStamp\n * @appliesMixin PropertyAccessors\n * @summary Element class mixin that provides meta-programming for Polymer's\n * template binding and data observation system.\n */\nconst PropertyEffects = Object(_utils_mixin_js__WEBPACK_IMPORTED_MODULE_1__[\"dedupingMixin\"])(superClass => {\n\n  /**\n   * @constructor\n   * @extends {superClass}\n   * @implements {Polymer_PropertyAccessors}\n   * @implements {Polymer_TemplateStamp}\n   * @unrestricted\n   */\n  const propertyEffectsBase = Object(_template_stamp_js__WEBPACK_IMPORTED_MODULE_5__[\"TemplateStamp\"])(Object(_property_accessors_js__WEBPACK_IMPORTED_MODULE_4__[\"PropertyAccessors\"])(superClass));\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyEffects}\n   * @extends {propertyEffectsBase}\n   * @unrestricted\n   */\n  class PropertyEffects extends propertyEffectsBase {\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      // Used to identify users of this mixin, ala instanceof\n      this.__isPropertyEffectsClient = true;\n      /** @type {number} */\n      // NOTE: used to track re-entrant calls to `_flushProperties`\n      // path changes dirty check against `__dataTemp` only during one \"turn\"\n      // and are cleared when `__dataCounter` returns to 0.\n      this.__dataCounter = 0;\n      /** @type {boolean} */\n      this.__dataClientsReady;\n      /** @type {Array} */\n      this.__dataPendingClients;\n      /** @type {Object} */\n      this.__dataToNotify;\n      /** @type {Object} */\n      this.__dataLinkedPaths;\n      /** @type {boolean} */\n      this.__dataHasPaths;\n      /** @type {Object} */\n      this.__dataCompoundStorage;\n      /** @type {Polymer_PropertyEffects} */\n      this.__dataHost;\n      /** @type {!Object} */\n      this.__dataTemp;\n      /** @type {boolean} */\n      this.__dataClientsInitialized;\n      /** @type {!Object} */\n      this.__data;\n      /** @type {!Object} */\n      this.__dataPending;\n      /** @type {!Object} */\n      this.__dataOld;\n      /** @type {Object} */\n      this.__computeEffects;\n      /** @type {Object} */\n      this.__reflectEffects;\n      /** @type {Object} */\n      this.__notifyEffects;\n      /** @type {Object} */\n      this.__propagateEffects;\n      /** @type {Object} */\n      this.__observeEffects;\n      /** @type {Object} */\n      this.__readOnly;\n      /** @type {!TemplateInfo} */\n      this.__templateInfo;\n    }\n\n    get PROPERTY_EFFECT_TYPES() {\n      return TYPES;\n    }\n\n    /**\n     * @return {void}\n     */\n    _initializeProperties() {\n      super._initializeProperties();\n      hostStack.registerHost(this);\n      this.__dataClientsReady = false;\n      this.__dataPendingClients = null;\n      this.__dataToNotify = null;\n      this.__dataLinkedPaths = null;\n      this.__dataHasPaths = false;\n      // May be set on instance prior to upgrade\n      this.__dataCompoundStorage = this.__dataCompoundStorage || null;\n      this.__dataHost = this.__dataHost || null;\n      this.__dataTemp = {};\n      this.__dataClientsInitialized = false;\n    }\n\n    /**\n     * Overrides `PropertyAccessors` implementation to provide a\n     * more efficient implementation of initializing properties from\n     * the prototype on the instance.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the prototype\n     * @return {void}\n     */\n    _initializeProtoProperties(props) {\n      this.__data = Object.create(props);\n      this.__dataPending = Object.create(props);\n      this.__dataOld = {};\n    }\n\n    /**\n     * Overrides `PropertyAccessors` implementation to avoid setting\n     * `_setProperty`'s `shouldNotify: true`.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the instance\n     * @return {void}\n     */\n    _initializeInstanceProperties(props) {\n      let readOnly = this[TYPES.READ_ONLY];\n      for (let prop in props) {\n        if (!readOnly || !readOnly[prop]) {\n          this.__dataPending = this.__dataPending || {};\n          this.__dataOld = this.__dataOld || {};\n          this.__data[prop] = this.__dataPending[prop] = props[prop];\n        }\n      }\n    }\n\n    // Prototype setup ----------------------------------------\n\n    /**\n     * Equivalent to static `addPropertyEffect` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     */\n    _addPropertyEffect(property, type, effect) {\n      this._createPropertyAccessor(property, type == TYPES.READ_ONLY);\n      // effects are accumulated into arrays per property based on type\n      let effects = ensureOwnEffectMap(this, type)[property];\n      if (!effects) {\n        effects = this[type][property] = [];\n      }\n      effects.push(effect);\n    }\n\n    /**\n     * Removes the given property effect.\n     *\n     * @param {string} property Property the effect was associated with\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object to remove\n     * @return {void}\n     */\n    _removePropertyEffect(property, type, effect) {\n      let effects = ensureOwnEffectMap(this, type)[property];\n      let idx = effects.indexOf(effect);\n      if (idx >= 0) {\n        effects.splice(idx, 1);\n      }\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a property effect\n     * of a certain type.\n     *\n     * @param {string} property Property name\n     * @param {string=} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasPropertyEffect(property, type) {\n      let effects = this[type];\n      return Boolean(effects && effects[property]);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"read only\"\n     * accessor for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasReadOnlyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.READ_ONLY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"notify\"\n     * property effect for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasNotifyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.NOTIFY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"reflect to attribute\"\n     * property effect for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasReflectEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.REFLECT);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"computed\"\n     * property effect for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasComputedEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.COMPUTE);\n    }\n\n    // Runtime ----------------------------------------\n\n    /**\n     * Sets a pending property or path.  If the root property of the path in\n     * question had no accessor, the path is set, otherwise it is enqueued\n     * via `_setPendingProperty`.\n     *\n     * This function isolates relatively expensive functionality necessary\n     * for the public API (`set`, `setProperties`, `notifyPath`, and property\n     * change listeners via {{...}} bindings), such that it is only done\n     * when paths enter the system, and not at every propagation step.  It\n     * also sets a `__dataHasPaths` flag on the instance which is used to\n     * fast-path slower path-matching code in the property effects host paths.\n     *\n     * `path` can be a path string or array of path parts as accepted by the\n     * public API.\n     *\n     * @param {string | !Array<number|string>} path Path to set\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify Set to true if this change should\n     *  cause a property notification event dispatch\n     * @param {boolean=} isPathNotification If the path being set is a path\n     *   notification of an already changed value, as opposed to a request\n     *   to set and notify the change.  In the latter `false` case, a dirty\n     *   check is performed and then the value is set to the path before\n     *   enqueuing the pending property change.\n     * @return {boolean} Returns true if the property/path was enqueued in\n     *   the pending changes bag.\n     * @protected\n     */\n    _setPendingPropertyOrPath(path, value, shouldNotify, isPathNotification) {\n      if (isPathNotification ||\n          Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"root\"])(Array.isArray(path) ? path[0] : path) !== path) {\n        // Dirty check changes being set to a path against the actual object,\n        // since this is the entry point for paths into the system; from here\n        // the only dirty checks are against the `__dataTemp` cache to prevent\n        // duplicate work in the same turn only. Note, if this was a notification\n        // of a change already set to a path (isPathNotification: true),\n        // we always let the change through and skip the `set` since it was\n        // already dirty checked at the point of entry and the underlying\n        // object has already been updated\n        if (!isPathNotification) {\n          let old = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(this, path);\n          path = /** @type {string} */ (Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"set\"])(this, path, value));\n          // Use property-accessor's simpler dirty check\n          if (!path || !super._shouldPropertyChange(path, value, old)) {\n            return false;\n          }\n        }\n        this.__dataHasPaths = true;\n        if (this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify)) {\n          computeLinkedPaths(this, path, value);\n          return true;\n        }\n      } else {\n        if (this.__dataHasAccessor && this.__dataHasAccessor[path]) {\n          return this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify);\n        } else {\n          this[path] = value;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Applies a value to a non-Polymer element/node's property.\n     *\n     * The implementation makes a best-effort at binding interop:\n     * Some native element properties have side-effects when\n     * re-setting the same value (e.g. setting `<input>.value` resets the\n     * cursor position), so we do a dirty-check before setting the value.\n     * However, for better interop with non-Polymer custom elements that\n     * accept objects, we explicitly re-set object changes coming from the\n     * Polymer world (which may include deep object changes without the\n     * top reference changing), erring on the side of providing more\n     * information.\n     *\n     * Users may override this method to provide alternate approaches.\n     *\n     * @param {!Node} node The node to set a property on\n     * @param {string} prop The property to set\n     * @param {*} value The value to set\n     * @return {void}\n     * @protected\n     */\n    _setUnmanagedPropertyToNode(node, prop, value) {\n      // It is a judgment call that resetting primitives is\n      // \"bad\" and resettings objects is also \"good\"; alternatively we could\n      // implement a whitelist of tag & property values that should never\n      // be reset (e.g. <input>.value && <select>.value)\n      if (value !== node[prop] || typeof value == 'object') {\n        node[prop] = value;\n      }\n    }\n\n    /**\n     * Overrides the `PropertiesChanged` implementation to introduce special\n     * dirty check logic depending on the property & value being set:\n     *\n     * 1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})\n     *    Stored in `__dataTemp`, dirty checked against `__dataTemp`\n     * 2. Object set to simple property (e.g. 'prop': {...})\n     *    Stored in `__dataTemp` and `__data`, dirty checked against\n     *    `__dataTemp` by default implementation of `_shouldPropertyChange`\n     * 3. Primitive value set to simple property (e.g. 'prop': 42)\n     *    Stored in `__data`, dirty checked against `__data`\n     *\n     * The dirty-check is important to prevent cycles due to two-way\n     * notification, but paths and objects are only dirty checked against any\n     * previous value set during this turn via a \"temporary cache\" that is\n     * cleared when the last `_propertiesChanged` exits. This is so:\n     * a. any cached array paths (e.g. 'array.3.prop') may be invalidated\n     *    due to array mutations like shift/unshift/splice; this is fine\n     *    since path changes are dirty-checked at user entry points like `set`\n     * b. dirty-checking for objects only lasts one turn to allow the user\n     *    to mutate the object in-place and re-set it with the same identity\n     *    and have all sub-properties re-propagated in a subsequent turn.\n     *\n     * The temp cache is not necessarily sufficient to prevent invalid array\n     * paths, since a splice can happen during the same turn (with pathological\n     * user code); we could introduce a \"fixup\" for temporarily cached array\n     * paths if needed: https://github.com/Polymer/polymer/issues/4227\n     *\n     * @override\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify True if property should fire notification\n     *   event (applies only for `notify: true` properties)\n     * @return {boolean} Returns true if the property changed\n     */\n    _setPendingProperty(property, value, shouldNotify) {\n      let isPath = this.__dataHasPaths && Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"isPath\"])(property);\n      let prevProps = isPath ? this.__dataTemp : this.__data;\n      if (this._shouldPropertyChange(property, value, prevProps[property])) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (!(property in this.__dataOld)) {\n          this.__dataOld[property] = this.__data[property];\n        }\n        // Paths are stored in temporary cache (cleared at end of turn),\n        // which is used for dirty-checking, all others stored in __data\n        if (isPath) {\n          this.__dataTemp[property] = value;\n        } else {\n          this.__data[property] = value;\n        }\n        // All changes go into pending property bag, passed to _propertiesChanged\n        this.__dataPending[property] = value;\n        // Track properties that should notify separately\n        if (isPath || (this[TYPES.NOTIFY] && this[TYPES.NOTIFY][property])) {\n          this.__dataToNotify = this.__dataToNotify || {};\n          this.__dataToNotify[property] = shouldNotify;\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Overrides base implementation to ensure all accessors set `shouldNotify`\n     * to true, for per-property notification tracking.\n     *\n     * @override\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {void}\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Overrides `PropertyAccessor`'s default async queuing of\n     * `_propertiesChanged`: if `__dataReady` is false (has not yet been\n     * manually flushed), the function no-ops; otherwise flushes\n     * `_propertiesChanged` synchronously.\n     *\n     * @override\n     * @return {void}\n     */\n    _invalidateProperties() {\n      if (this.__dataReady) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Enqueues the given client on a list of pending clients, whose\n     * pending property changes can later be flushed via a call to\n     * `_flushClients`.\n     *\n     * @param {Object} client PropertyEffects client to enqueue\n     * @return {void}\n     * @protected\n     */\n    _enqueueClient(client) {\n      this.__dataPendingClients = this.__dataPendingClients || [];\n      if (client !== this) {\n        this.__dataPendingClients.push(client);\n      }\n    }\n\n    /**\n     * Overrides superclass implementation.\n     *\n     * @return {void}\n     * @protected\n     */\n    _flushProperties() {\n      this.__dataCounter++;\n      super._flushProperties();\n      this.__dataCounter--;\n    }\n\n    /**\n     * Flushes any clients previously enqueued via `_enqueueClient`, causing\n     * their `_flushProperties` method to run.\n     *\n     * @return {void}\n     * @protected\n     */\n    _flushClients() {\n      if (!this.__dataClientsReady) {\n        this.__dataClientsReady = true;\n        this._readyClients();\n        // Override point where accessors are turned on; importantly,\n        // this is after clients have fully readied, providing a guarantee\n        // that any property effects occur only after all clients are ready.\n        this.__dataReady = true;\n      } else {\n        this.__enableOrFlushClients();\n      }\n    }\n\n    // NOTE: We ensure clients either enable or flush as appropriate. This\n    // handles two corner cases:\n    // (1) clients flush properly when connected/enabled before the host\n    // enables; e.g.\n    //   (a) Templatize stamps with no properties and does not flush and\n    //   (b) the instance is inserted into dom and\n    //   (c) then the instance flushes.\n    // (2) clients enable properly when not connected/enabled when the host\n    // flushes; e.g.\n    //   (a) a template is runtime stamped and not yet connected/enabled\n    //   (b) a host sets a property, causing stamped dom to flush\n    //   (c) the stamped dom enables.\n    __enableOrFlushClients() {\n      let clients = this.__dataPendingClients;\n      if (clients) {\n        this.__dataPendingClients = null;\n        for (let i=0; i < clients.length; i++) {\n          let client = clients[i];\n          if (!client.__dataEnabled) {\n            client._enableProperties();\n          } else if (client.__dataPending) {\n            client._flushProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Perform any initial setup on client dom. Called before the first\n     * `_flushProperties` call on client dom and before any element\n     * observers are called.\n     *\n     * @return {void}\n     * @protected\n     */\n    _readyClients() {\n      this.__enableOrFlushClients();\n    }\n\n    /**\n     * Sets a bag of property changes to this instance, and\n     * synchronously processes all effects of the properties as a batch.\n     *\n     * Property names must be simple properties, not paths.  Batched\n     * path propagation is not supported.\n     *\n     * @param {Object} props Bag of one or more key-value pairs whose key is\n     *   a property and value is the new value to set for that property.\n     * @param {boolean=} setReadOnly When true, any private values set in\n     *   `props` will be set. By default, `setProperties` will not set\n     *   `readOnly: true` root properties.\n     * @return {void}\n     * @public\n     */\n    setProperties(props, setReadOnly) {\n      for (let path in props) {\n        if (setReadOnly || !this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][path]) {\n          //TODO(kschaaf): explicitly disallow paths in setProperty?\n          // wildcard observers currently only pass the first changed path\n          // in the `info` object, and you could do some odd things batching\n          // paths, e.g. {'foo.bar': {...}, 'foo': null}\n          this._setPendingPropertyOrPath(path, props[path], true);\n        }\n      }\n      this._invalidateProperties();\n    }\n\n    /**\n     * Overrides `PropertyAccessors` so that property accessor\n     * side effects are not enabled until after client dom is fully ready.\n     * Also calls `_flushClients` callback to ensure client dom is enabled\n     * that was not enabled as a result of flushing properties.\n     *\n     * @override\n     * @return {void}\n     */\n    ready() {\n      // It is important that `super.ready()` is not called here as it\n      // immediately turns on accessors. Instead, we wait until `readyClients`\n      // to enable accessors to provide a guarantee that clients are ready\n      // before processing any accessors side effects.\n      this._flushProperties();\n      // If no data was pending, `_flushProperties` will not `flushClients`\n      // so ensure this is done.\n      if (!this.__dataClientsReady) {\n        this._flushClients();\n      }\n      // Before ready, client notifications do not trigger _flushProperties.\n      // Therefore a flush is necessary here if data has been set.\n      if (this.__dataPending) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Implements `PropertyAccessors`'s properties changed callback.\n     *\n     * Runs each class of effects for the batch of changed properties in\n     * a specific order (compute, propagate, reflect, observe, notify).\n     *\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {!Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {!Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {void}\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) {\n      // ----------------------------\n      // let c = Object.getOwnPropertyNames(changedProps || {});\n      // window.debug && console.group(this.localName + '#' + this.id + ': ' + c);\n      // if (window.debug) { debugger; }\n      // ----------------------------\n      let hasPaths = this.__dataHasPaths;\n      this.__dataHasPaths = false;\n      // Compute properties\n      runComputedEffects(this, changedProps, oldProps, hasPaths);\n      // Clear notify properties prior to possible reentry (propagate, observe),\n      // but after computing effects have a chance to add to them\n      let notifyProps = this.__dataToNotify;\n      this.__dataToNotify = null;\n      // Propagate properties to clients\n      this._propagatePropertyChanges(changedProps, oldProps, hasPaths);\n      // Flush clients\n      this._flushClients();\n      // Reflect properties\n      runEffects(this, this[TYPES.REFLECT], changedProps, oldProps, hasPaths);\n      // Observe properties\n      runEffects(this, this[TYPES.OBSERVE], changedProps, oldProps, hasPaths);\n      // Notify properties to host\n      if (notifyProps) {\n        runNotifyEffects(this, notifyProps, changedProps, oldProps, hasPaths);\n      }\n      // Clear temporary cache at end of turn\n      if (this.__dataCounter == 1) {\n        this.__dataTemp = {};\n      }\n      // ----------------------------\n      // window.debug && console.groupEnd(this.localName + '#' + this.id + ': ' + c);\n      // ----------------------------\n    }\n\n    /**\n     * Called to propagate any property changes to stamped template nodes\n     * managed by this element.\n     *\n     * @param {Object} changedProps Bag of changed properties\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @return {void}\n     * @protected\n     */\n    _propagatePropertyChanges(changedProps, oldProps, hasPaths) {\n      if (this[TYPES.PROPAGATE]) {\n        runEffects(this, this[TYPES.PROPAGATE], changedProps, oldProps, hasPaths);\n      }\n      let templateInfo = this.__templateInfo;\n      while (templateInfo) {\n        runEffects(this, templateInfo.propertyEffects, changedProps, oldProps,\n          hasPaths, templateInfo.nodeList);\n        templateInfo = templateInfo.nextTemplateInfo;\n      }\n    }\n\n    /**\n     * Aliases one data path as another, such that path notifications from one\n     * are routed to the other.\n     *\n     * @param {string | !Array<string|number>} to Target path to link.\n     * @param {string | !Array<string|number>} from Source path to link.\n     * @return {void}\n     * @public\n     */\n    linkPaths(to, from) {\n      to = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"normalize\"])(to);\n      from = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"normalize\"])(from);\n      this.__dataLinkedPaths = this.__dataLinkedPaths || {};\n      this.__dataLinkedPaths[to] = from;\n    }\n\n    /**\n     * Removes a data path alias previously established with `_linkPaths`.\n     *\n     * Note, the path to unlink should be the target (`to`) used when\n     * linking the paths.\n     *\n     * @param {string | !Array<string|number>} path Target path to unlink.\n     * @return {void}\n     * @public\n     */\n    unlinkPaths(path) {\n      path = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"normalize\"])(path);\n      if (this.__dataLinkedPaths) {\n        delete this.__dataLinkedPaths[path];\n      }\n    }\n\n    /**\n     * Notify that an array has changed.\n     *\n     * Example:\n     *\n     *     this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n     *     ...\n     *     this.items.splice(1, 1, {name: 'Sam'});\n     *     this.items.push({name: 'Bob'});\n     *     this.notifySplices('items', [\n     *       { index: 1, removed: [{name: 'Todd'}], addedCount: 1, object: this.items, type: 'splice' },\n     *       { index: 3, removed: [], addedCount: 1, object: this.items, type: 'splice'}\n     *     ]);\n     *\n     * @param {string} path Path that should be notified.\n     * @param {Array} splices Array of splice records indicating ordered\n     *   changes that occurred to the array. Each record should have the\n     *   following fields:\n     *    * index: index at which the change occurred\n     *    * removed: array of items that were removed from this index\n     *    * addedCount: number of new items added at this index\n     *    * object: a reference to the array in question\n     *    * type: the string literal 'splice'\n     *\n     *   Note that splice records _must_ be normalized such that they are\n     *   reported in index order (raw results from `Object.observe` are not\n     *   ordered and must be normalized/merged before notifying).\n     * @return {void}\n     * @public\n    */\n    notifySplices(path, splices) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(this, path, info));\n      notifySplices(this, array, info.path, splices);\n    }\n\n    /**\n     * Convenience method for reading a value from a path.\n     *\n     * Note, if any part in the path is undefined, this method returns\n     * `undefined` (this method does not throw when dereferencing undefined\n     * paths).\n     *\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `users.12.name` or `['users', 12, 'name']`).\n     * @param {Object=} root Root object from which the path is evaluated.\n     * @return {*} Value at the path, or `undefined` if any part of the path\n     *   is undefined.\n     * @public\n     */\n    get(path, root) {\n      return Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(root || this, path);\n    }\n\n    /**\n     * Convenience method for setting a value to a path and notifying any\n     * elements bound to the same path.\n     *\n     * Note, if any part in the path except for the last is undefined,\n     * this method does nothing (this method does not throw when\n     * dereferencing undefined paths).\n     *\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `'users.12.name'` or `['users', 12, 'name']`).\n     * @param {*} value Value to set at the specified path.\n     * @param {Object=} root Root object from which the path is evaluated.\n     *   When specified, no notification will occur.\n     * @return {void}\n     * @public\n    */\n    set(path, value, root) {\n      if (root) {\n        Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"set\"])(root, path, value);\n      } else {\n        if (!this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][/** @type {string} */(path)]) {\n          if (this._setPendingPropertyOrPath(path, value, true)) {\n            this._invalidateProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Adds items onto the end of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to push onto array\n     * @return {number} New length of the array.\n     * @public\n     */\n    push(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array}*/(Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(this, path, info));\n      let len = array.length;\n      let ret = array.push(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, len, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the end of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    pop(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.pop();\n      if (hadLength) {\n        notifySplice(this, array, info.path, array.length, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Starting from the start index specified, removes 0 or more items\n     * from the array and inserts 0 or more new items in their place.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.splice`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {number} start Index from which to start removing/inserting.\n     * @param {number} deleteCount Number of items to remove.\n     * @param {...*} items Items to insert into array.\n     * @return {Array} Array of removed items.\n     * @public\n     */\n    splice(path, start, deleteCount, ...items) {\n      let info = {path : ''};\n      let array = /** @type {Array} */(Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(this, path, info));\n      // Normalize fancy native splice handling of crazy start values\n      if (start < 0) {\n        start = array.length - Math.floor(-start);\n      } else if (start) {\n        start = Math.floor(start);\n      }\n      // array.splice does different things based on the number of arguments\n      // you pass in. Therefore, array.splice(0) and array.splice(0, undefined)\n      // do different things. In the former, the whole array is cleared. In the\n      // latter, no items are removed.\n      // This means that we need to detect whether 1. one of the arguments\n      // is actually passed in and then 2. determine how many arguments\n      // we should pass on to the native array.splice\n      //\n      let ret;\n      // Omit any additional arguments if they were not passed in\n      if (arguments.length === 2) {\n        ret = array.splice(start);\n      // Either start was undefined and the others were defined, but in this\n      // case we can safely pass on all arguments\n      //\n      // Note: this includes the case where none of the arguments were passed in,\n      // e.g. this.splice('array'). However, if both start and deleteCount\n      // are undefined, array.splice will not modify the array (as expected)\n      } else {\n        ret = array.splice(start, deleteCount, ...items);\n      }\n      // At the end, check whether any items were passed in (e.g. insertions)\n      // or if the return array contains items (e.g. deletions).\n      // Only notify if items were added or deleted.\n      if (items.length || ret.length) {\n        notifySplice(this, array, info.path, start, items.length, ret);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the beginning of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    shift(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.shift();\n      if (hadLength) {\n        notifySplice(this, array, info.path, 0, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Adds items onto the beginning of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to insert info array\n     * @return {number} New length of the array.\n     * @public\n     */\n    unshift(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(this, path, info));\n      let ret = array.unshift(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, 0, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Notify that a path has changed.\n     *\n     * Example:\n     *\n     *     this.item.user.name = 'Bob';\n     *     this.notifyPath('item.user.name');\n     *\n     * @param {string} path Path that should be notified.\n     * @param {*=} value Value at the path (optional).\n     * @return {void}\n     * @public\n    */\n    notifyPath(path, value) {\n      /** @type {string} */\n      let propPath;\n      if (arguments.length == 1) {\n        // Get value if not supplied\n        let info = {path: ''};\n        value = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(this, path, info);\n        propPath = info.path;\n      } else if (Array.isArray(path)) {\n        // Normalize path if needed\n        propPath = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"normalize\"])(path);\n      } else {\n        propPath = /** @type{string} */(path);\n      }\n      if (this._setPendingPropertyOrPath(propPath, value, true, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Equivalent to static `createReadOnlyProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @return {void}\n     * @protected\n     */\n    _createReadOnlyProperty(property, protectedSetter) {\n      this._addPropertyEffect(property, TYPES.READ_ONLY);\n      if (protectedSetter) {\n        this['_set' + upper(property)] = /** @this {PropertyEffects} */function(value) {\n          this._setProperty(property, value);\n        };\n      }\n    }\n\n    /**\n     * Equivalent to static `createPropertyObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @param {string|function(*,*)} method Function or name of observer method to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createPropertyObserver(property, method, dynamicFn) {\n      let info = { property, method, dynamicFn: Boolean(dynamicFn) };\n      this._addPropertyEffect(property, TYPES.OBSERVE, {\n        fn: runObserverEffect, info, trigger: {name: property}\n      });\n      if (dynamicFn) {\n        this._addPropertyEffect(/** @type {string} */(method), TYPES.OBSERVE, {\n          fn: runObserverEffect, info, trigger: {name: method}\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createMethodObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createMethodObserver(expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed observer expression '\" + expression + \"'\");\n      }\n      createMethodEffect(this, sig, TYPES.OBSERVE, runMethodEffect, null, dynamicFn);\n    }\n\n    /**\n     * Equivalent to static `createNotifyingProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     */\n    _createNotifyingProperty(property) {\n      this._addPropertyEffect(property, TYPES.NOTIFY, {\n        fn: runNotifyEffect,\n        info: {\n          eventName: CaseMap.camelToDashCase(property) + '-changed',\n          property: property\n        }\n      });\n    }\n\n    /**\n     * Equivalent to static `createReflectedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     */\n    _createReflectedProperty(property) {\n      let attr = this.constructor.attributeNameForProperty(property);\n      if (attr[0] === '-') {\n        console.warn('Property ' + property + ' cannot be reflected to attribute ' +\n          attr + ' because \"-\" is not a valid starting attribute name. Use a lowercase first letter for the property instead.');\n      } else {\n        this._addPropertyEffect(property, TYPES.REFLECT, {\n          fn: runReflectEffect,\n          info: {\n            attrName: attr\n          }\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createComputedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createComputedProperty(property, expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed computed expression '\" + expression + \"'\");\n      }\n      createMethodEffect(this, sig, TYPES.COMPUTE, runComputedEffect, property, dynamicFn);\n    }\n\n    // -- static class methods ------------\n\n    /**\n     * Ensures an accessor exists for the specified property, and adds\n     * to a list of \"property effects\" that will run when the accessor for\n     * the specified property is set.  Effects are grouped by \"type\", which\n     * roughly corresponds to a phase in effect processing.  The effect\n     * metadata should be in the following form:\n     *\n     *     {\n     *       fn: effectFunction, // Reference to function to call to perform effect\n     *       info: { ... }       // Effect metadata passed to function\n     *       trigger: {          // Optional triggering metadata; if not provided\n     *         name: string      // the property is treated as a wildcard\n     *         structured: boolean\n     *         wildcard: boolean\n     *       }\n     *     }\n     *\n     * Effects are called from `_propertiesChanged` in the following order by\n     * type:\n     *\n     * 1. COMPUTE\n     * 2. PROPAGATE\n     * 3. REFLECT\n     * 4. OBSERVE\n     * 5. NOTIFY\n     *\n     * Effect functions are called with the following signature:\n     *\n     *     effectFunction(inst, path, props, oldProps, info, hasPaths)\n     *\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     */\n    static addPropertyEffect(property, type, effect) {\n      this.prototype._addPropertyEffect(property, type, effect);\n    }\n\n    /**\n     * Creates a single-property observer for the given property.\n     *\n     * @param {string} property Property name\n     * @param {string|function(*,*)} method Function or name of observer method to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    static createPropertyObserver(property, method, dynamicFn) {\n      this.prototype._createPropertyObserver(property, method, dynamicFn);\n    }\n\n    /**\n     * Creates a multi-property \"method observer\" based on the provided\n     * expression, which should be a string in the form of a normal JavaScript\n     * function signature: `'methodName(arg1, [..., argn])'`.  Each argument\n     * should correspond to a property or path in the context of this\n     * prototype (or instance), or may be a literal string or number.\n     *\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     * @return {void}\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     */\n    static createMethodObserver(expression, dynamicFn) {\n      this.prototype._createMethodObserver(expression, dynamicFn);\n    }\n\n    /**\n     * Causes the setter for the given property to dispatch `<property>-changed`\n     * events to notify of changes to the property.\n     *\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     */\n    static createNotifyingProperty(property) {\n      this.prototype._createNotifyingProperty(property);\n    }\n\n    /**\n     * Creates a read-only accessor for the given property.\n     *\n     * To set the property, use the protected `_setProperty` API.\n     * To create a custom protected setter (e.g. `_setMyProp()` for\n     * property `myProp`), pass `true` for `protectedSetter`.\n     *\n     * Note, if the property will have other property effects, this method\n     * should be called first, before adding other effects.\n     *\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @return {void}\n     * @protected\n     */\n    static createReadOnlyProperty(property, protectedSetter) {\n      this.prototype._createReadOnlyProperty(property, protectedSetter);\n    }\n\n    /**\n     * Causes the setter for the given property to reflect the property value\n     * to a (dash-cased) attribute of the same name.\n     *\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     */\n    static createReflectedProperty(property) {\n      this.prototype._createReflectedProperty(property);\n    }\n\n    /**\n     * Creates a computed property whose value is set to the result of the\n     * method described by the given `expression` each time one or more\n     * arguments to the method changes.  The expression should be a string\n     * in the form of a normal JavaScript function signature:\n     * `'methodName(arg1, [..., argn])'`\n     *\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n     *   method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    static createComputedProperty(property, expression, dynamicFn) {\n      this.prototype._createComputedProperty(property, expression, dynamicFn);\n    }\n\n    /**\n     * Parses the provided template to ensure binding effects are created\n     * for them, and then ensures property accessors are created for any\n     * dependent properties in the template.  Binding effects for bound\n     * templates are stored in a linked list on the instance so that\n     * templates can be efficiently stamped and unstamped.\n     *\n     * @param {!HTMLTemplateElement} template Template containing binding\n     *   bindings\n     * @return {!TemplateInfo} Template metadata object\n     * @protected\n     */\n    static bindTemplate(template) {\n      return this.prototype._bindTemplate(template);\n    }\n\n    // -- binding ----------------------------------------------\n\n    /**\n     * Equivalent to static `bindTemplate` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * This method may be called on the prototype (for prototypical template\n     * binding, to avoid creating accessors every instance) once per prototype,\n     * and will be called with `runtimeBinding: true` by `_stampTemplate` to\n     * create and link an instance of the template metadata associated with a\n     * particular stamping.\n     *\n     * @param {!HTMLTemplateElement} template Template containing binding\n     *   bindings\n     * @param {boolean=} instanceBinding When false (default), performs\n     *   \"prototypical\" binding of the template and overwrites any previously\n     *   bound template for the class. When true (as passed from\n     *   `_stampTemplate`), the template info is instanced and linked into\n     *   the list of bound templates.\n     * @return {!TemplateInfo} Template metadata object; for `runtimeBinding`,\n     *   this is an instance of the prototypical template info\n     * @protected\n     */\n    _bindTemplate(template, instanceBinding) {\n      let templateInfo = this.constructor._parseTemplate(template);\n      let wasPreBound = this.__templateInfo == templateInfo;\n      // Optimization: since this is called twice for proto-bound templates,\n      // don't attempt to recreate accessors if this template was pre-bound\n      if (!wasPreBound) {\n        for (let prop in templateInfo.propertyEffects) {\n          this._createPropertyAccessor(prop);\n        }\n      }\n      if (instanceBinding) {\n        // For instance-time binding, create instance of template metadata\n        // and link into list of templates if necessary\n        templateInfo = /** @type {!TemplateInfo} */(Object.create(templateInfo));\n        templateInfo.wasPreBound = wasPreBound;\n        if (!wasPreBound && this.__templateInfo) {\n          let last = this.__templateInfoLast || this.__templateInfo;\n          this.__templateInfoLast = last.nextTemplateInfo = templateInfo;\n          templateInfo.previousTemplateInfo = last;\n          return templateInfo;\n        }\n      }\n      return this.__templateInfo = templateInfo;\n    }\n\n    /**\n     * Adds a property effect to the given template metadata, which is run\n     * at the \"propagate\" stage of `_propertiesChanged` when the template\n     * has been bound to the element via `_bindTemplate`.\n     *\n     * The `effect` object should match the format in `_addPropertyEffect`.\n     *\n     * @param {Object} templateInfo Template metadata to add effect to\n     * @param {string} prop Property that should trigger the effect\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     */\n    static _addTemplatePropertyEffect(templateInfo, prop, effect) {\n      let hostProps = templateInfo.hostProps = templateInfo.hostProps || {};\n      hostProps[prop] = true;\n      let effects = templateInfo.propertyEffects = templateInfo.propertyEffects || {};\n      let propEffects = effects[prop] = effects[prop] || [];\n      propEffects.push(effect);\n    }\n\n    /**\n     * Stamps the provided template and performs instance-time setup for\n     * Polymer template features, including data bindings, declarative event\n     * listeners, and the `this.$` map of `id`'s to nodes.  A document fragment\n     * is returned containing the stamped DOM, ready for insertion into the\n     * DOM.\n     *\n     * This method may be called more than once; however note that due to\n     * `shadycss` polyfill limitations, only styles from templates prepared\n     * using `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\n     * to the shadow root and support CSS custom properties), and note that\n     * `ShadyCSS.prepareTemplate` may only be called once per element. As such,\n     * any styles required by in runtime-stamped templates must be included\n     * in the main element template.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @return {!StampedTemplate} Cloned template content\n     * @override\n     * @protected\n     */\n    _stampTemplate(template) {\n      // Ensures that created dom is `_enqueueClient`'d to this element so\n      // that it can be flushed on next call to `_flushProperties`\n      hostStack.beginHosting(this);\n      let dom = super._stampTemplate(template);\n      hostStack.endHosting(this);\n      let templateInfo = /** @type {!TemplateInfo} */(this._bindTemplate(template, true));\n      // Add template-instance-specific data to instanced templateInfo\n      templateInfo.nodeList = dom.nodeList;\n      // Capture child nodes to allow unstamping of non-prototypical templates\n      if (!templateInfo.wasPreBound) {\n        let nodes = templateInfo.childNodes = [];\n        for (let n=dom.firstChild; n; n=n.nextSibling) {\n          nodes.push(n);\n        }\n      }\n      dom.templateInfo = templateInfo;\n      // Setup compound storage, 2-way listeners, and dataHost for bindings\n      setupBindings(this, templateInfo);\n      // Flush properties into template nodes if already booted\n      if (this.__dataReady) {\n        runEffects(this, templateInfo.propertyEffects, this.__data, null,\n          false, templateInfo.nodeList);\n      }\n      return dom;\n    }\n\n    /**\n     * Removes and unbinds the nodes previously contained in the provided\n     * DocumentFragment returned from `_stampTemplate`.\n     *\n     * @param {!StampedTemplate} dom DocumentFragment previously returned\n     *   from `_stampTemplate` associated with the nodes to be removed\n     * @return {void}\n     * @protected\n     */\n    _removeBoundDom(dom) {\n      // Unlink template info\n      let templateInfo = dom.templateInfo;\n      if (templateInfo.previousTemplateInfo) {\n        templateInfo.previousTemplateInfo.nextTemplateInfo =\n          templateInfo.nextTemplateInfo;\n      }\n      if (templateInfo.nextTemplateInfo) {\n        templateInfo.nextTemplateInfo.previousTemplateInfo =\n          templateInfo.previousTemplateInfo;\n      }\n      if (this.__templateInfoLast == templateInfo) {\n        this.__templateInfoLast = templateInfo.previousTemplateInfo;\n      }\n      templateInfo.previousTemplateInfo = templateInfo.nextTemplateInfo = null;\n      // Remove stamped nodes\n      let nodes = templateInfo.childNodes;\n      for (let i=0; i<nodes.length; i++) {\n        let node = nodes[i];\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from `TextNode`'s' `textContent`.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @override\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      let noted = super._parseTemplateNode(node, templateInfo, nodeInfo);\n      if (node.nodeType === Node.TEXT_NODE) {\n        let parts = this._parseBindings(node.textContent, templateInfo);\n        if (parts) {\n          // Initialize the textContent with any literal parts\n          // NOTE: default to a space here so the textNode remains; some browsers\n          // (IE) omit an empty textNode following cloneNode/importNode.\n          node.textContent = literalFromParts(parts) || ' ';\n          addBinding(this, templateInfo, nodeInfo, 'text', 'textContent', parts);\n          noted = true;\n        }\n      }\n      return noted;\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from attributes.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @override\n     * @param {Element} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @param {string} name Attribute name\n     * @param {string} value Attribute value\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      let parts = this._parseBindings(value, templateInfo);\n      if (parts) {\n        // Attribute or property\n        let origName = name;\n        let kind = 'property';\n        // The only way we see a capital letter here is if the attr has\n        // a capital letter in it per spec. In this case, to make sure\n        // this binding works, we go ahead and make the binding to the attribute.\n        if (capitalAttributeRegex.test(name)) {\n          kind = 'attribute';\n        } else if (name[name.length-1] == '$') {\n          name = name.slice(0, -1);\n          kind = 'attribute';\n        }\n        // Initialize attribute bindings with any literal parts\n        let literal = literalFromParts(parts);\n        if (literal && kind == 'attribute') {\n          node.setAttribute(name, literal);\n        }\n        // Clear attribute before removing, since IE won't allow removing\n        // `value` attribute if it previously had a value (can't\n        // unconditionally set '' before removing since attributes with `$`\n        // can't be set using setAttribute)\n        if (node.localName === 'input' && origName === 'value') {\n          node.setAttribute(origName, '');\n        }\n        // Remove annotation\n        node.removeAttribute(origName);\n        // Case hackery: attributes are lower-case, but bind targets\n        // (properties) are case sensitive. Gambit is to map dash-case to\n        // camel-case: `foo-bar` becomes `fooBar`.\n        // Attribute bindings are excepted.\n        if (kind === 'property') {\n          name = Object(_utils_case_map_js__WEBPACK_IMPORTED_MODULE_3__[\"dashToCamelCase\"])(name);\n        }\n        addBinding(this, templateInfo, nodeInfo, kind, name, parts, literal);\n        return true;\n      } else {\n        return super._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * binding the properties that a nested template depends on to the template\n     * as `_host_<property>`.\n     *\n     * @override\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateNestedTemplate(node, templateInfo, nodeInfo) {\n      let noted = super._parseTemplateNestedTemplate(node, templateInfo, nodeInfo);\n      // Merge host props into outer template and add bindings\n      let hostProps = nodeInfo.templateInfo.hostProps;\n      let mode = '{';\n      for (let source in hostProps) {\n        let parts = [{ mode, source, dependencies: [source] }];\n        addBinding(this, templateInfo, nodeInfo, 'property', '_host_' + source, parts);\n      }\n      return noted;\n    }\n\n    /**\n     * Called to parse text in a template (either attribute values or\n     * textContent) into binding metadata.\n     *\n     * Any overrides of this method should return an array of binding part\n     * metadata  representing one or more bindings found in the provided text\n     * and any \"literal\" text in between.  Any non-literal parts will be passed\n     * to `_evaluateBinding` when any dependencies change.  The only required\n     * fields of each \"part\" in the returned array are as follows:\n     *\n     * - `dependencies` - Array containing trigger metadata for each property\n     *   that should trigger the binding to update\n     * - `literal` - String containing text if the part represents a literal;\n     *   in this case no `dependencies` are needed\n     *\n     * Additional metadata for use by `_evaluateBinding` may be provided in\n     * each part object as needed.\n     *\n     * The default implementation handles the following types of bindings\n     * (one or more may be intermixed with literal strings):\n     * - Property binding: `[[prop]]`\n     * - Path binding: `[[object.prop]]`\n     * - Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`\n     * - Two-way property or path bindings (supports negation):\n     *   `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`\n     * - Inline computed method (supports negation):\n     *   `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`\n     *\n     * The default implementation uses a regular expression for best\n     * performance. However, the regular expression uses a white-list of\n     * allowed characters in a data-binding, which causes problems for\n     * data-bindings that do use characters not in this white-list.\n     *\n     * Instead of updating the white-list with all allowed characters,\n     * there is a StrictBindingParser (see lib/mixins/strict-binding-parser)\n     * that uses a state machine instead. This state machine is able to handle\n     * all characters. However, it is slightly less performant, therefore we\n     * extracted it into a separate optional mixin.\n     *\n     * @param {string} text Text to parse from attribute or textContent\n     * @param {Object} templateInfo Current template metadata\n     * @return {Array<!BindingPart>} Array of binding part metadata\n     * @protected\n     */\n    static _parseBindings(text, templateInfo) {\n      let parts = [];\n      let lastIndex = 0;\n      let m;\n      // Example: \"literal1{{prop}}literal2[[!compute(foo,bar)]]final\"\n      // Regex matches:\n      //        Iteration 1:  Iteration 2:\n      // m[1]: '{{'          '[['\n      // m[2]: ''            '!'\n      // m[3]: 'prop'        'compute(foo,bar)'\n      while ((m = bindingRegex.exec(text)) !== null) {\n        // Add literal part\n        if (m.index > lastIndex) {\n          parts.push({literal: text.slice(lastIndex, m.index)});\n        }\n        // Add binding part\n        let mode = m[1][0];\n        let negate = Boolean(m[2]);\n        let source = m[3].trim();\n        let customEvent = false, notifyEvent = '', colon = -1;\n        if (mode == '{' && (colon = source.indexOf('::')) > 0) {\n          notifyEvent = source.substring(colon + 2);\n          source = source.substring(0, colon);\n          customEvent = true;\n        }\n        let signature = parseMethod(source);\n        let dependencies = [];\n        if (signature) {\n          // Inline computed function\n          let {args, methodName} = signature;\n          for (let i=0; i<args.length; i++) {\n            let arg = args[i];\n            if (!arg.literal) {\n              dependencies.push(arg);\n            }\n          }\n          let dynamicFns = templateInfo.dynamicFns;\n          if (dynamicFns && dynamicFns[methodName] || signature.static) {\n            dependencies.push(methodName);\n            signature.dynamicFn = true;\n          }\n        } else {\n          // Property or path\n          dependencies.push(source);\n        }\n        parts.push({\n          source, mode, negate, customEvent, signature, dependencies,\n          event: notifyEvent\n        });\n        lastIndex = bindingRegex.lastIndex;\n      }\n      // Add a final literal part\n      if (lastIndex && lastIndex < text.length) {\n        let literal = text.substring(lastIndex);\n        if (literal) {\n          parts.push({\n            literal: literal\n          });\n        }\n      }\n      if (parts.length) {\n        return parts;\n      } else {\n        return null;\n      }\n    }\n\n    /**\n     * Called to evaluate a previously parsed binding part based on a set of\n     * one or more changed dependencies.\n     *\n     * @param {this} inst Element that should be used as scope for\n     *   binding dependencies\n     * @param {BindingPart} part Binding part metadata\n     * @param {string} path Property/path that triggered this effect\n     * @param {Object} props Bag of current property changes\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @return {*} Value the binding part evaluated to\n     * @protected\n     */\n    static _evaluateBinding(inst, part, path, props, oldProps, hasPaths) {\n      let value;\n      if (part.signature) {\n        value = runMethodEffect(inst, path, props, oldProps, part.signature);\n      } else if (path != part.source) {\n        value = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(inst, part.source);\n      } else {\n        if (hasPaths && Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"isPath\"])(path)) {\n          value = Object(_utils_path_js__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(inst, path);\n        } else {\n          value = inst.__data[path];\n        }\n      }\n      if (part.negate) {\n        value = !value;\n      }\n      return value;\n    }\n\n  }\n\n  // make a typing for closure :P\n  PropertyEffectsType = PropertyEffects;\n\n  return PropertyEffects;\n});\n\n/**\n * Helper api for enqueuing client dom created by a host element.\n *\n * By default elements are flushed via `_flushProperties` when\n * `connectedCallback` is called. Elements attach their client dom to\n * themselves at `ready` time which results from this first flush.\n * This provides an ordering guarantee that the client dom an element\n * creates is flushed before the element itself (i.e. client `ready`\n * fires before host `ready`).\n *\n * However, if `_flushProperties` is called *before* an element is connected,\n * as for example `Templatize` does, this ordering guarantee cannot be\n * satisfied because no elements are connected. (Note: Bound elements that\n * receive data do become enqueued clients and are properly ordered but\n * unbound elements are not.)\n *\n * To maintain the desired \"client before host\" ordering guarantee for this\n * case we rely on the \"host stack. Client nodes registers themselves with\n * the creating host element when created. This ensures that all client dom\n * is readied in the proper order, maintaining the desired guarantee.\n *\n * @private\n */\nlet hostStack = {\n\n  stack: [],\n\n  /**\n   * @param {*} inst Instance to add to hostStack\n   * @return {void}\n   * @this {hostStack}\n   */\n  registerHost(inst) {\n    if (this.stack.length) {\n      let host = this.stack[this.stack.length-1];\n      host._enqueueClient(inst);\n    }\n  },\n\n  /**\n   * @param {*} inst Instance to begin hosting\n   * @return {void}\n   * @this {hostStack}\n   */\n  beginHosting(inst) {\n    this.stack.push(inst);\n  },\n\n  /**\n   * @param {*} inst Instance to end hosting\n   * @return {void}\n   * @this {hostStack}\n   */\n  endHosting(inst) {\n    let stackLen = this.stack.length;\n    if (stackLen && this.stack[stackLen-1] == inst) {\n      this.stack.pop();\n    }\n  }\n\n};\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/mixins/property-effects.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/mixins/template-stamp.js":
/*!********************************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/mixins/template-stamp.js ***!
  \********************************************************************/
/*! exports provided: TemplateStamp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TemplateStamp\", function() { return TemplateStamp; });\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _utils_boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_utils_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n// 1.x backwards-compatible auto-wrapper for template type extensions\n// This is a clear layering violation and gives favored-nation status to\n// dom-if and dom-repeat templates.  This is a conceit we're choosing to keep\n// a.) to ease 1.x backwards-compatibility due to loss of `is`, and\n// b.) to maintain if/repeat capability in parser-constrained elements\n//     (e.g. table, select) in lieu of native CE type extensions without\n//     massive new invention in this space (e.g. directive system)\nconst templateExtensions = {\n  'dom-if': true,\n  'dom-repeat': true\n};\nfunction wrapTemplateExtension(node) {\n  let is = node.getAttribute('is');\n  if (is && templateExtensions[is]) {\n    let t = node;\n    t.removeAttribute('is');\n    node = t.ownerDocument.createElement(is);\n    t.parentNode.replaceChild(node, t);\n    node.appendChild(t);\n    while(t.attributes.length) {\n      node.setAttribute(t.attributes[0].name, t.attributes[0].value);\n      t.removeAttribute(t.attributes[0].name);\n    }\n  }\n  return node;\n}\n\nfunction findTemplateNode(root, nodeInfo) {\n  // recursively ascend tree until we hit root\n  let parent = nodeInfo.parentInfo && findTemplateNode(root, nodeInfo.parentInfo);\n  // unwind the stack, returning the indexed node at each level\n  if (parent) {\n    // note: marginally faster than indexing via childNodes\n    // (http://jsperf.com/childnodes-lookup)\n    for (let n=parent.firstChild, i=0; n; n=n.nextSibling) {\n      if (nodeInfo.parentIndex === i++) {\n        return n;\n      }\n    }\n  } else {\n    return root;\n  }\n}\n\n// construct `$` map (from id annotations)\nfunction applyIdToMap(inst, map, node, nodeInfo) {\n  if (nodeInfo.id) {\n    map[nodeInfo.id] = node;\n  }\n}\n\n// install event listeners (from event annotations)\nfunction applyEventListener(inst, node, nodeInfo) {\n  if (nodeInfo.events && nodeInfo.events.length) {\n    for (let j=0, e$=nodeInfo.events, e; (j<e$.length) && (e=e$[j]); j++) {\n      inst._addMethodEventListenerToNode(node, e.name, e.value, inst);\n    }\n  }\n}\n\n// push configuration references at configure time\nfunction applyTemplateContent(inst, node, nodeInfo) {\n  if (nodeInfo.templateInfo) {\n    node._templateInfo = nodeInfo.templateInfo;\n  }\n}\n\nfunction createNodeEventHandler(context, eventName, methodName) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  context = context._methodHost || context;\n  let handler = function(e) {\n    if (context[methodName]) {\n      context[methodName](e, e.detail);\n    } else {\n      console.warn('listener method `' + methodName + '` not defined');\n    }\n  };\n  return handler;\n}\n\n/**\n * Element mixin that provides basic template parsing and stamping, including\n * the following template-related features for stamped templates:\n *\n * - Declarative event listeners (`on-eventname=\"listener\"`)\n * - Map of node id's to stamped node instances (`this.$.id`)\n * - Nested template content caching/removal and re-installation (performance\n *   optimization)\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin that provides basic template parsing and stamping\n */\nconst TemplateStamp = Object(_utils_mixin_js__WEBPACK_IMPORTED_MODULE_1__[\"dedupingMixin\"])(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_TemplateStamp}\n   */\n  class TemplateStamp extends superClass {\n\n    /**\n     * Scans a template to produce template metadata.\n     *\n     * Template-specific metadata are stored in the object returned, and node-\n     * specific metadata are stored in objects in its flattened `nodeInfoList`\n     * array.  Only nodes in the template that were parsed as nodes of\n     * interest contain an object in `nodeInfoList`.  Each `nodeInfo` object\n     * contains an `index` (`childNodes` index in parent) and optionally\n     * `parent`, which points to node info of its parent (including its index).\n     *\n     * The template metadata object returned from this method has the following\n     * structure (many fields optional):\n     *\n     * ```js\n     *   {\n     *     // Flattened list of node metadata (for nodes that generated metadata)\n     *     nodeInfoList: [\n     *       {\n     *         // `id` attribute for any nodes with id's for generating `$` map\n     *         id: {string},\n     *         // `on-event=\"handler\"` metadata\n     *         events: [\n     *           {\n     *             name: {string},   // event name\n     *             value: {string},  // handler method name\n     *           }, ...\n     *         ],\n     *         // Notes when the template contained a `<slot>` for shady DOM\n     *         // optimization purposes\n     *         hasInsertionPoint: {boolean},\n     *         // For nested `<template>`` nodes, nested template metadata\n     *         templateInfo: {object}, // nested template metadata\n     *         // Metadata to allow efficient retrieval of instanced node\n     *         // corresponding to this metadata\n     *         parentInfo: {number},   // reference to parent nodeInfo>\n     *         parentIndex: {number},  // index in parent's `childNodes` collection\n     *         infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`\n     *       },\n     *       ...\n     *     ],\n     *     // When true, the template had the `strip-whitespace` attribute\n     *     // or was nested in a template with that setting\n     *     stripWhitespace: {boolean},\n     *     // For nested templates, nested template content is moved into\n     *     // a document fragment stored here; this is an optimization to\n     *     // avoid the cost of nested template cloning\n     *     content: {DocumentFragment}\n     *   }\n     * ```\n     *\n     * This method kicks off a recursive treewalk as follows:\n     *\n     * ```\n     *    _parseTemplate <---------------------+\n     *      _parseTemplateContent              |\n     *        _parseTemplateNode  <------------|--+\n     *          _parseTemplateNestedTemplate --+  |\n     *          _parseTemplateChildNodes ---------+\n     *          _parseTemplateNodeAttributes\n     *            _parseTemplateNodeAttribute\n     *\n     * ```\n     *\n     * These methods may be overridden to add custom metadata about templates\n     * to either `templateInfo` or `nodeInfo`.\n     *\n     * Note that this method may be destructive to the template, in that\n     * e.g. event annotations may be removed after being noted in the\n     * template metadata.\n     *\n     * @param {!HTMLTemplateElement} template Template to parse\n     * @param {TemplateInfo=} outerTemplateInfo Template metadata from the outer\n     *   template, for parsing nested templates\n     * @return {!TemplateInfo} Parsed template metadata\n     */\n    static _parseTemplate(template, outerTemplateInfo) {\n      // since a template may be re-used, memo-ize metadata\n      if (!template._templateInfo) {\n        let templateInfo = template._templateInfo = {};\n        templateInfo.nodeInfoList = [];\n        templateInfo.stripWhiteSpace =\n          (outerTemplateInfo && outerTemplateInfo.stripWhiteSpace) ||\n          template.hasAttribute('strip-whitespace');\n        this._parseTemplateContent(template, templateInfo, {parent: null});\n      }\n      return template._templateInfo;\n    }\n\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      return this._parseTemplateNode(template.content, templateInfo, nodeInfo);\n    }\n\n    /**\n     * Parses template node and adds template and node metadata based on\n     * the current node, and its `childNodes` and `attributes`.\n     *\n     * This method may be overridden to add custom node or template specific\n     * metadata based on this node.\n     *\n     * @param {Node} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      let noted;\n      let element = /** @type {Element} */(node);\n      if (element.localName == 'template' && !element.hasAttribute('preserve-content')) {\n        noted = this._parseTemplateNestedTemplate(element, templateInfo, nodeInfo) || noted;\n      } else if (element.localName === 'slot') {\n        // For ShadyDom optimization, indicating there is an insertion point\n        templateInfo.hasInsertionPoint = true;\n      }\n      if (element.firstChild) {\n        noted = this._parseTemplateChildNodes(element, templateInfo, nodeInfo) || noted;\n      }\n      if (element.hasAttributes && element.hasAttributes()) {\n        noted = this._parseTemplateNodeAttributes(element, templateInfo, nodeInfo) || noted;\n      }\n      return noted;\n    }\n\n    /**\n     * Parses template child nodes for the given root node.\n     *\n     * This method also wraps whitelisted legacy template extensions\n     * (`is=\"dom-if\"` and `is=\"dom-repeat\"`) with their equivalent element\n     * wrappers, collapses text nodes, and strips whitespace from the template\n     * if the `templateInfo.stripWhitespace` setting was provided.\n     *\n     * @param {Node} root Root node whose `childNodes` will be parsed\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {void}\n     */\n    static _parseTemplateChildNodes(root, templateInfo, nodeInfo) {\n      if (root.localName === 'script' || root.localName === 'style') {\n        return;\n      }\n      for (let node=root.firstChild, parentIndex=0, next; node; node=next) {\n        // Wrap templates\n        if (node.localName == 'template') {\n          node = wrapTemplateExtension(node);\n        }\n        // collapse adjacent textNodes: fixes an IE issue that can cause\n        // text nodes to be inexplicably split =(\n        // note that root.normalize() should work but does not so we do this\n        // manually.\n        next = node.nextSibling;\n        if (node.nodeType === Node.TEXT_NODE) {\n          let /** Node */ n = next;\n          while (n && (n.nodeType === Node.TEXT_NODE)) {\n            node.textContent += n.textContent;\n            next = n.nextSibling;\n            root.removeChild(n);\n            n = next;\n          }\n          // optionally strip whitespace\n          if (templateInfo.stripWhiteSpace && !node.textContent.trim()) {\n            root.removeChild(node);\n            continue;\n          }\n        }\n        let childInfo = { parentIndex, parentInfo: nodeInfo };\n        if (this._parseTemplateNode(node, templateInfo, childInfo)) {\n          childInfo.infoIndex = templateInfo.nodeInfoList.push(/** @type {!NodeInfo} */(childInfo)) - 1;\n        }\n        // Increment if not removed\n        if (node.parentNode) {\n          parentIndex++;\n        }\n      }\n    }\n\n    /**\n     * Parses template content for the given nested `<template>`.\n     *\n     * Nested template info is stored as `templateInfo` in the current node's\n     * `nodeInfo`. `template.content` is removed and stored in `templateInfo`.\n     * It will then be the responsibility of the host to set it back to the\n     * template and for users stamping nested templates to use the\n     * `_contentForTemplate` method to retrieve the content for this template\n     * (an optimization to avoid the cost of cloning nested template content).\n     *\n     * @param {HTMLTemplateElement} node Node to parse (a <template>)\n     * @param {TemplateInfo} outerTemplateInfo Template metadata for current template\n     *   that includes the template `node`\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNestedTemplate(node, outerTemplateInfo, nodeInfo) {\n      let templateInfo = this._parseTemplate(node, outerTemplateInfo);\n      let content = templateInfo.content =\n        node.content.ownerDocument.createDocumentFragment();\n      content.appendChild(node.content);\n      nodeInfo.templateInfo = templateInfo;\n      return true;\n    }\n\n    /**\n     * Parses template node attributes and adds node metadata to `nodeInfo`\n     * for nodes of interest.\n     *\n     * @param {Element} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNodeAttributes(node, templateInfo, nodeInfo) {\n      // Make copy of original attribute list, since the order may change\n      // as attributes are added and removed\n      let noted = false;\n      let attrs = Array.from(node.attributes);\n      for (let i=attrs.length-1, a; (a=attrs[i]); i--) {\n        noted = this._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, a.name, a.value) || noted;\n      }\n      return noted;\n    }\n\n    /**\n     * Parses a single template node attribute and adds node metadata to\n     * `nodeInfo` for attributes of interest.\n     *\n     * This implementation adds metadata for `on-event=\"handler\"` attributes\n     * and `id` attributes.\n     *\n     * @param {Element} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @param {string} name Attribute name\n     * @param {string} value Attribute value\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      // events (on-*)\n      if (name.slice(0, 3) === 'on-') {\n        node.removeAttribute(name);\n        nodeInfo.events = nodeInfo.events || [];\n        nodeInfo.events.push({\n          name: name.slice(3),\n          value\n        });\n        return true;\n      }\n      // static id\n      else if (name === 'id') {\n        nodeInfo.id = value;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Returns the `content` document fragment for a given template.\n     *\n     * For nested templates, Polymer performs an optimization to cache nested\n     * template content to avoid the cost of cloning deeply nested templates.\n     * This method retrieves the cached content for a given template.\n     *\n     * @param {HTMLTemplateElement} template Template to retrieve `content` for\n     * @return {DocumentFragment} Content fragment\n     */\n    static _contentForTemplate(template) {\n      let templateInfo = /** @type {HTMLTemplateElementWithInfo} */ (template)._templateInfo;\n      return (templateInfo && templateInfo.content) || template.content;\n    }\n\n    /**\n     * Clones the provided template content and returns a document fragment\n     * containing the cloned dom.\n     *\n     * The template is parsed (once and memoized) using this library's\n     * template parsing features, and provides the following value-added\n     * features:\n     * * Adds declarative event listeners for `on-event=\"handler\"` attributes\n     * * Generates an \"id map\" for all nodes with id's under `$` on returned\n     *   document fragment\n     * * Passes template info including `content` back to templates as\n     *   `_templateInfo` (a performance optimization to avoid deep template\n     *   cloning)\n     *\n     * Note that the memoized template parsing process is destructive to the\n     * template: attributes for bindings and declarative event listeners are\n     * removed after being noted in notes, and any nested `<template>.content`\n     * is removed and stored in notes as well.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @return {!StampedTemplate} Cloned template content\n     */\n    _stampTemplate(template) {\n      // Polyfill support: bootstrap the template if it has not already been\n      if (template && !template.content &&\n          window.HTMLTemplateElement && HTMLTemplateElement.decorate) {\n        HTMLTemplateElement.decorate(template);\n      }\n      let templateInfo = this.constructor._parseTemplate(template);\n      let nodeInfo = templateInfo.nodeInfoList;\n      let content = templateInfo.content || template.content;\n      let dom = /** @type {DocumentFragment} */ (document.importNode(content, true));\n      // NOTE: ShadyDom optimization indicating there is an insertion point\n      dom.__noInsertionPoint = !templateInfo.hasInsertionPoint;\n      let nodes = dom.nodeList = new Array(nodeInfo.length);\n      dom.$ = {};\n      for (let i=0, l=nodeInfo.length, info; (i<l) && (info=nodeInfo[i]); i++) {\n        let node = nodes[i] = findTemplateNode(dom, info);\n        applyIdToMap(this, dom.$, node, info);\n        applyTemplateContent(this, node, info);\n        applyEventListener(this, node, info);\n      }\n      dom = /** @type {!StampedTemplate} */(dom); // eslint-disable-line no-self-assign\n      return dom;\n    }\n\n    /**\n     * Adds an event listener by method name for the event provided.\n     *\n     * This method generates a handler function that looks up the method\n     * name at handling time.\n     *\n     * @param {!Node} node Node to add listener on\n     * @param {string} eventName Name of event\n     * @param {string} methodName Name of method\n     * @param {*=} context Context the method will be called on (defaults\n     *   to `node`)\n     * @return {Function} Generated handler function\n     */\n    _addMethodEventListenerToNode(node, eventName, methodName, context) {\n      context = context || node;\n      let handler = createNodeEventHandler(context, eventName, methodName);\n      this._addEventListenerToNode(node, eventName, handler);\n      return handler;\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {!Node} node Node to add event listener to\n     * @param {string} eventName Name of event\n     * @param {function(!Event):void} handler Listener function to add\n     * @return {void}\n     */\n    _addEventListenerToNode(node, eventName, handler) {\n      node.addEventListener(eventName, handler);\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {Node} node Node to remove event listener from\n     * @param {string} eventName Name of event\n     * @param {function(!Event):void} handler Listener function to remove\n     * @return {void}\n     */\n    _removeEventListenerFromNode(node, eventName, handler) {\n      node.removeEventListener(eventName, handler);\n    }\n\n  }\n\n  return TemplateStamp;\n\n});\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/mixins/template-stamp.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/utils/async.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/utils/async.js ***!
  \**********************************************************/
/*! exports provided: timeOut, animationFrame, idlePeriod, microTask */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"timeOut\", function() { return timeOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"animationFrame\", function() { return animationFrame; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"idlePeriod\", function() { return idlePeriod; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"microTask\", function() { return microTask; });\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @fileoverview\n *\n * This module provides a number of strategies for enqueuing asynchronous\n * tasks. Each sub-module provides a standard `run(fn)` interface that returns a\n * handle, and a `cancel(handle)` interface for canceling async tasks before\n * they run.\n *\n * @summary Module that provides a number of strategies for enqueuing\n * asynchronous tasks.\n */\n\n\n\n// Microtask implemented using Mutation Observer\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nlet microtaskCallbacks = [];\nlet microtaskNodeContent = 0;\nlet microtaskNode = document.createTextNode('');\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, {characterData: true});\n\nfunction microtaskFlush() {\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    let cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => { throw e; });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\n/**\n * Async interface wrapper around `setTimeout`.\n *\n * @namespace\n * @summary Async interface wrapper around `setTimeout`.\n */\nconst timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof timeOut\n   * @param {number=} delay Time to wait before calling callbacks in ms\n   * @return {!AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return {\n      run(fn) { return window.setTimeout(fn, delay); },\n      cancel(handle) {\n        window.clearTimeout(handle);\n      }\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof timeOut\n   * @param {!Function} fn Callback to run\n   * @param {number=} delay Delay in milliseconds\n   * @return {number} Handle used for canceling task\n   */\n  run(fn, delay) {\n    return window.setTimeout(fn, delay);\n  },\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.clearTimeout(handle);\n  }\n};\n\n\n/**\n * Async interface wrapper around `requestAnimationFrame`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestAnimationFrame`.\n */\nconst animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof animationFrame\n   * @param {function(number):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestAnimationFrame(fn);\n  },\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof animationFrame\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelAnimationFrame(handle);\n  }\n};\n\n\n/**\n * Async interface wrapper around `requestIdleCallback`.  Falls back to\n * `setTimeout` on browsers that do not support `requestIdleCallback`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestIdleCallback`.\n */\nconst idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof idlePeriod\n   * @param {function(!IdleDeadline):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ?\n      window.requestIdleCallback(fn) :\n      window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelIdleCallback ?\n      window.cancelIdleCallback(handle) :\n      window.clearTimeout(handle);\n  }\n};\n\n\n/**\n * Async interface for enqueuing callbacks that run at microtask timing.\n *\n * Note that microtask timing is achieved via a single `MutationObserver`,\n * and thus callbacks enqueued with this API will all run in a single\n * batch, and not interleaved with other microtasks such as promises.\n * Promises are avoided as an implementation choice for the time being\n * due to Safari bugs that cause Promises to lack microtask guarantees.\n *\n * @namespace\n * @summary Async interface for enqueuing callbacks that run at microtask\n *   timing.\n */\nconst microTask = {\n\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof microTask\n   * @param {!Function=} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    microtaskNode.textContent = microtaskNodeContent++;\n    microtaskCallbacks.push(callback);\n    return microtaskCurrHandle++;\n  },\n\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error('invalid async handle: ' + handle);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n\n};\n\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/utils/async.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/utils/boot.js":
/*!*********************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/utils/boot.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nwindow.JSCompiler_renameProperty = function(prop) { return prop; };\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/utils/boot.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/utils/case-map.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/utils/case-map.js ***!
  \*************************************************************/
/*! exports provided: dashToCamelCase, camelToDashCase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dashToCamelCase\", function() { return dashToCamelCase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"camelToDashCase\", function() { return camelToDashCase; });\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\nconst caseMap = {};\nconst DASH_TO_CAMEL = /-[a-z]/g;\nconst CAMEL_TO_DASH = /([A-Z])/g;\n\n/**\n * Module with utilities for converting between \"dash-case\" and \"camelCase\"\n * identifiers.\n *\n * @summary Module that provides utilities for converting between \"dash-case\"\n *   and \"camelCase\".\n */\n`TODO(modulizer): A namespace named Polymer.CaseMap was\ndeclared here. The surrounding comments should be reviewed,\nand this string can then be deleted`;\n\n/**\n * Converts \"dash-case\" identifier (e.g. `foo-bar-baz`) to \"camelCase\"\n * (e.g. `fooBarBaz`).\n *\n * @param {string} dash Dash-case identifier\n * @return {string} Camel-case representation of the identifier\n */\nfunction dashToCamelCase(dash) {\n  return caseMap[dash] || (\n    caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(DASH_TO_CAMEL,\n      (m) => m[1].toUpperCase()\n    )\n  );\n}\n\n/**\n * Converts \"camelCase\" identifier (e.g. `fooBarBaz`) to \"dash-case\"\n * (e.g. `foo-bar-baz`).\n *\n * @param {string} camel Camel-case identifier\n * @return {string} Dash-case representation of the identifier\n */\nfunction camelToDashCase(camel) {\n  return caseMap[camel] || (\n    caseMap[camel] = camel.replace(CAMEL_TO_DASH, '-$1').toLowerCase()\n  );\n}\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/utils/case-map.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/utils/html-tag.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/utils/html-tag.js ***!
  \*************************************************************/
/*! exports provided: html, htmlLiteral */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"html\", function() { return html; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"htmlLiteral\", function() { return htmlLiteral; });\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n/**\n * Class representing a static string value which can be used to filter\n * strings by asseting that they have been created via this class. The\n * `value` property returns the string passed to the constructor.\n */\nclass LiteralString {\n  constructor(string) {\n    /** @type {string} */\n    this.value = string.toString();\n  }\n  /**\n   * @return {string} LiteralString string value\n   */\n  toString() {\n    return this.value;\n  }\n}\n\n/**\n * @param {*} value Object to stringify into HTML\n * @return {string} HTML stringified form of `obj`\n */\nfunction literalValue(value) {\n  if (value instanceof LiteralString) {\n    return /** @type {!LiteralString} */(value).value;\n  } else {\n    throw new Error(\n        `non-literal value passed to Polymer's htmlLiteral function: ${value}`\n    );\n  }\n}\n\n/**\n * @param {*} value Object to stringify into HTML\n * @return {string} HTML stringified form of `obj`\n */\nfunction htmlValue(value) {\n  if (value instanceof HTMLTemplateElement) {\n    return /** @type {!HTMLTemplateElement } */(value).innerHTML;\n  } else if (value instanceof LiteralString) {\n    return literalValue(value);\n  } else {\n    throw new Error(\n        `non-template value passed to Polymer's html function: ${value}`);\n  }\n}\n\n/**\n * A template literal tag that creates an HTML <template> element from the\n * contents of the string.\n *\n * This allows you to write a Polymer Template in JavaScript.\n *\n * Templates can be composed by interpolating `HTMLTemplateElement`s in\n * expressions in the JavaScript template literal. The nested template's\n * `innerHTML` is included in the containing template.  The only other\n * values allowed in expressions are those returned from `htmlLiteral`\n * which ensures only literal values from JS source ever reach the HTML, to\n * guard against XSS risks.\n *\n * All other values are disallowed in expressions to help prevent XSS\n * attacks; however, `htmlLiteral` can be used to compose static\n * string values into templates. This is useful to compose strings into\n * places that do not accept html, like the css text of a `style`\n * element.\n *\n * Example:\n *\n *     static get template() {\n *       return html`\n *         <style>:host{ content:\"...\" }</style>\n *         <div class=\"shadowed\">${this.partialTemplate}</div>\n *         ${super.template}\n *       `;\n *     }\n *     static get partialTemplate() { return html`<span>Partial!</span>`; }\n *\n * @param {!ITemplateArray} strings Constant parts of tagged template literal\n * @param {...*} values Variable parts of tagged template literal\n * @return {!HTMLTemplateElement} Constructed HTMLTemplateElement\n */\nconst html = function html(strings, ...values) {\n  const template = /** @type {!HTMLTemplateElement} */(document.createElement('template'));\n  template.innerHTML = values.reduce((acc, v, idx) =>\n      acc + htmlValue(v) + strings[idx + 1], strings[0]);\n  return template;\n};\n\n/**\n * An html literal tag that can be used with `html` to compose.\n * a literal string.\n *\n * Example:\n *\n *     static get template() {\n *       return html`\n *         <style>\n *           :host { display: block; }\n *           ${this.styleTemplate()}\n *         </style>\n *         <div class=\"shadowed\">${staticValue}</div>\n *         ${super.template}\n *       `;\n *     }\n *     static get styleTemplate() {\n *        return htmlLiteral`.shadowed { background: gray; }`;\n *     }\n *\n * @param {!ITemplateArray} strings Constant parts of tagged template literal\n * @param {...*} values Variable parts of tagged template literal\n * @return {!LiteralString} Constructed literal string\n */\nconst htmlLiteral = function(strings, ...values) {\n  return new LiteralString(values.reduce((acc, v, idx) =>\n      acc + literalValue(v) + strings[idx + 1], strings[0]));\n};\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/utils/html-tag.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/utils/mixin.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/utils/mixin.js ***!
  \**********************************************************/
/*! exports provided: dedupingMixin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dedupingMixin\", function() { return dedupingMixin; });\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n// unique global id for deduping mixins.\nlet dedupeId = 0;\n\n/**\n * @constructor\n * @extends {Function}\n */\nfunction MixinFunction(){}\n/** @type {(WeakMap | undefined)} */\nMixinFunction.prototype.__mixinApplications;\n/** @type {(Object | undefined)} */\nMixinFunction.prototype.__mixinSet;\n\n/* eslint-disable valid-jsdoc */\n/**\n * Wraps an ES6 class expression mixin such that the mixin is only applied\n * if it has not already been applied its base argument. Also memoizes mixin\n * applications.\n *\n * @template T\n * @param {T} mixin ES6 class expression mixin to wrap\n * @return {T}\n * @suppress {invalidCasts}\n */\nconst dedupingMixin = function(mixin) {\n  let mixinApplications = /** @type {!MixinFunction} */(mixin).__mixinApplications;\n  if (!mixinApplications) {\n    mixinApplications = new WeakMap();\n    /** @type {!MixinFunction} */(mixin).__mixinApplications = mixinApplications;\n  }\n  // maintain a unique id for each mixin\n  let mixinDedupeId = dedupeId++;\n  function dedupingMixin(base) {\n    let baseSet = /** @type {!MixinFunction} */(base).__mixinSet;\n    if (baseSet && baseSet[mixinDedupeId]) {\n      return base;\n    }\n    let map = mixinApplications;\n    let extended = map.get(base);\n    if (!extended) {\n      extended = /** @type {!Function} */(mixin)(base);\n      map.set(base, extended);\n    }\n    // copy inherited mixin set from the extended class, or the base class\n    // NOTE: we avoid use of Set here because some browser (IE11)\n    // cannot extend a base Set via the constructor.\n    let mixinSet = Object.create(/** @type {!MixinFunction} */(extended).__mixinSet || baseSet || null);\n    mixinSet[mixinDedupeId] = true;\n    /** @type {!MixinFunction} */(extended).__mixinSet = mixinSet;\n    return extended;\n  }\n\n  return /** @type {T} */ (dedupingMixin);\n};\n/* eslint-enable valid-jsdoc */\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/utils/mixin.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/utils/path.js":
/*!*********************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/utils/path.js ***!
  \*********************************************************/
/*! exports provided: isPath, root, isAncestor, isDescendant, translate, matches, normalize, split, get, set, isDeep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPath\", function() { return isPath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"root\", function() { return root; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAncestor\", function() { return isAncestor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDescendant\", function() { return isDescendant; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"translate\", function() { return translate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"matches\", function() { return matches; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalize\", function() { return normalize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"split\", function() { return split; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDeep\", function() { return isDeep; });\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n/**\n * Module with utilities for manipulating structured data path strings.\n *\n * @summary Module with utilities for manipulating structured data path strings.\n */\n`TODO(modulizer): A namespace named Polymer.Path was\ndeclared here. The surrounding comments should be reviewed,\nand this string can then be deleted`;\n\n/**\n * Returns true if the given string is a structured data path (has dots).\n *\n * Example:\n *\n * ```\n * isPath('foo.bar.baz') // true\n * isPath('foo')         // false\n * ```\n *\n * @param {string} path Path string\n * @return {boolean} True if the string contained one or more dots\n */\nfunction isPath(path) {\n  return path.indexOf('.') >= 0;\n}\n\n/**\n * Returns the root property name for the given path.\n *\n * Example:\n *\n * ```\n * root('foo.bar.baz') // 'foo'\n * root('foo')         // 'foo'\n * ```\n *\n * @param {string} path Path string\n * @return {string} Root property name\n */\nfunction root(path) {\n  let dotIndex = path.indexOf('.');\n  if (dotIndex === -1) {\n    return path;\n  }\n  return path.slice(0, dotIndex);\n}\n\n/**\n * Given `base` is `foo.bar`, `foo` is an ancestor, `foo.bar` is not\n * Returns true if the given path is an ancestor of the base path.\n *\n * Example:\n *\n * ```\n * isAncestor('foo.bar', 'foo')         // true\n * isAncestor('foo.bar', 'foo.bar')     // false\n * isAncestor('foo.bar', 'foo.bar.baz') // false\n * ```\n *\n * @param {string} base Path string to test against.\n * @param {string} path Path string to test.\n * @return {boolean} True if `path` is an ancestor of `base`.\n */\nfunction isAncestor(base, path) {\n  //     base.startsWith(path + '.');\n  return base.indexOf(path + '.') === 0;\n}\n\n/**\n * Given `base` is `foo.bar`, `foo.bar.baz` is an descendant\n *\n * Example:\n *\n * ```\n * isDescendant('foo.bar', 'foo.bar.baz') // true\n * isDescendant('foo.bar', 'foo.bar')     // false\n * isDescendant('foo.bar', 'foo')         // false\n * ```\n *\n * @param {string} base Path string to test against.\n * @param {string} path Path string to test.\n * @return {boolean} True if `path` is a descendant of `base`.\n */\nfunction isDescendant(base, path) {\n  //     path.startsWith(base + '.');\n  return path.indexOf(base + '.') === 0;\n}\n\n/**\n * Replaces a previous base path with a new base path, preserving the\n * remainder of the path.\n *\n * User must ensure `path` has a prefix of `base`.\n *\n * Example:\n *\n * ```\n * translate('foo.bar', 'zot', 'foo.bar.baz') // 'zot.baz'\n * ```\n *\n * @param {string} base Current base string to remove\n * @param {string} newBase New base string to replace with\n * @param {string} path Path to translate\n * @return {string} Translated string\n */\nfunction translate(base, newBase, path) {\n  return newBase + path.slice(base.length);\n}\n\n/**\n * @param {string} base Path string to test against\n * @param {string} path Path string to test\n * @return {boolean} True if `path` is equal to `base`\n * @this {Path}\n */\nfunction matches(base, path) {\n  return (base === path) ||\n         isAncestor(base, path) ||\n         isDescendant(base, path);\n}\n\n/**\n * Converts array-based paths to flattened path.  String-based paths\n * are returned as-is.\n *\n * Example:\n *\n * ```\n * normalize(['foo.bar', 0, 'baz'])  // 'foo.bar.0.baz'\n * normalize('foo.bar.0.baz')        // 'foo.bar.0.baz'\n * ```\n *\n * @param {string | !Array<string|number>} path Input path\n * @return {string} Flattened path\n */\nfunction normalize(path) {\n  if (Array.isArray(path)) {\n    let parts = [];\n    for (let i=0; i<path.length; i++) {\n      let args = path[i].toString().split('.');\n      for (let j=0; j<args.length; j++) {\n        parts.push(args[j]);\n      }\n    }\n    return parts.join('.');\n  } else {\n    return path;\n  }\n}\n\n/**\n * Splits a path into an array of property names. Accepts either arrays\n * of path parts or strings.\n *\n * Example:\n *\n * ```\n * split(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\n * split('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n * ```\n *\n * @param {string | !Array<string|number>} path Input path\n * @return {!Array<string>} Array of path parts\n * @this {Path}\n * @suppress {checkTypes}\n */\nfunction split(path) {\n  if (Array.isArray(path)) {\n    return normalize(path).split('.');\n  }\n  return path.toString().split('.');\n}\n\n/**\n * Reads a value from a path.  If any sub-property in the path is `undefined`,\n * this method returns `undefined` (will never throw.\n *\n * @param {Object} root Object from which to dereference path from\n * @param {string | !Array<string|number>} path Path to read\n * @param {Object=} info If an object is provided to `info`, the normalized\n *  (flattened) path will be set to `info.path`.\n * @return {*} Value at path, or `undefined` if the path could not be\n *  fully dereferenced.\n * @this {Path}\n */\nfunction get(root, path, info) {\n  let prop = root;\n  let parts = split(path);\n  // Loop over path parts[0..n-1] and dereference\n  for (let i=0; i<parts.length; i++) {\n    if (!prop) {\n      return;\n    }\n    let part = parts[i];\n    prop = prop[part];\n  }\n  if (info) {\n    info.path = parts.join('.');\n  }\n  return prop;\n}\n\n/**\n * Sets a value to a path.  If any sub-property in the path is `undefined`,\n * this method will no-op.\n *\n * @param {Object} root Object from which to dereference path from\n * @param {string | !Array<string|number>} path Path to set\n * @param {*} value Value to set to path\n * @return {string | undefined} The normalized version of the input path\n * @this {Path}\n */\nfunction set(root, path, value) {\n  let prop = root;\n  let parts = split(path);\n  let last = parts[parts.length-1];\n  if (parts.length > 1) {\n    // Loop over path parts[0..n-2] and dereference\n    for (let i=0; i<parts.length-1; i++) {\n      let part = parts[i];\n      prop = prop[part];\n      if (!prop) {\n        return;\n      }\n    }\n    // Set value to object at end of path\n    prop[last] = value;\n  } else {\n    // Simple property set\n    prop[path] = value;\n  }\n  return parts.join('.');\n}\n\n/**\n * Returns true if the given string is a structured data path (has dots).\n *\n * This function is deprecated.  Use `isPath` instead.\n *\n * Example:\n *\n * ```\n * isDeep('foo.bar.baz') // true\n * isDeep('foo')         // false\n * ```\n *\n * @deprecated\n * @param {string} path Path string\n * @return {boolean} True if the string contained one or more dots\n */\nconst isDeep = isPath;\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/utils/path.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/utils/resolve-url.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/utils/resolve-url.js ***!
  \****************************************************************/
/*! exports provided: resolveUrl, resolveCss, pathFromUrl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resolveUrl\", function() { return resolveUrl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resolveCss\", function() { return resolveCss; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pathFromUrl\", function() { return pathFromUrl; });\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\nlet CSS_URL_RX = /(url\\()([^)]*)(\\))/g;\nlet ABS_URL = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\nlet workingURL;\nlet resolveDoc;\n/**\n * Resolves the given URL against the provided `baseUri'.\n *\n * Note that this function performs no resolution for URLs that start\n * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n * URL resolution, use `window.URL`.\n *\n * @param {string} url Input URL to resolve\n * @param {?string=} baseURI Base URI to resolve the URL against\n * @return {string} resolved URL\n */\nfunction resolveUrl(url, baseURI) {\n  if (url && ABS_URL.test(url)) {\n    return url;\n  }\n  // Lazy feature detection.\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      const u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = (u.href === 'http://a/c%20d');\n    } catch (e) {\n      // silently fail\n    }\n  }\n  if (!baseURI) {\n    baseURI = document.baseURI || window.location.href;\n  }\n  if (workingURL) {\n    return (new URL(url, baseURI)).href;\n  }\n  // Fallback to creating an anchor into a disconnected document.\n  if (!resolveDoc) {\n    resolveDoc = document.implementation.createHTMLDocument('temp');\n    resolveDoc.base = resolveDoc.createElement('base');\n    resolveDoc.head.appendChild(resolveDoc.base);\n    resolveDoc.anchor = resolveDoc.createElement('a');\n    resolveDoc.body.appendChild(resolveDoc.anchor);\n  }\n  resolveDoc.base.href = baseURI;\n  resolveDoc.anchor.href = url;\n  return resolveDoc.anchor.href || url;\n\n}\n\n/**\n * Resolves any relative URL's in the given CSS text against the provided\n * `ownerDocument`'s `baseURI`.\n *\n * @param {string} cssText CSS text to process\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Processed CSS text with resolved URL's\n */\nfunction resolveCss(cssText, baseURI) {\n  return cssText.replace(CSS_URL_RX, function(m, pre, url, post) {\n    return pre + '\\'' +\n      resolveUrl(url.replace(/[\"']/g, ''), baseURI) +\n      '\\'' + post;\n  });\n}\n\n/**\n * Returns a path from a given `url`. The path includes the trailing\n * `/` from the url.\n *\n * @param {string} url Input URL to transform\n * @return {string} resolved path\n */\nfunction pathFromUrl(url) {\n  return url.substring(0, url.lastIndexOf('/') + 1);\n}\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/utils/resolve-url.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/utils/settings.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/utils/settings.js ***!
  \*************************************************************/
/*! exports provided: useShadow, useNativeCSSProperties, useNativeCustomElements, rootPath, setRootPath, sanitizeDOMValue, setSanitizeDOMValue, passiveTouchGestures, setPassiveTouchGestures */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useShadow\", function() { return useShadow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useNativeCSSProperties\", function() { return useNativeCSSProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useNativeCustomElements\", function() { return useNativeCustomElements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rootPath\", function() { return rootPath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setRootPath\", function() { return setRootPath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sanitizeDOMValue\", function() { return sanitizeDOMValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSanitizeDOMValue\", function() { return setSanitizeDOMValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"passiveTouchGestures\", function() { return passiveTouchGestures; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setPassiveTouchGestures\", function() { return setPassiveTouchGestures; });\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boot.js */ \"./node_modules/@polymer/polymer/lib/utils/boot.js\");\n/* harmony import */ var _boot_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_boot_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _resolve_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resolve-url.js */ \"./node_modules/@polymer/polymer/lib/utils/resolve-url.js\");\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\nconst useShadow = !(window.ShadyDOM);\nconst useNativeCSSProperties = Boolean(!window.ShadyCSS || window.ShadyCSS.nativeCss);\nconst useNativeCustomElements = !(window.customElements.polyfillWrapFlushCallback);\n\n\n/**\n * Globally settable property that is automatically assigned to\n * `ElementMixin` instances, useful for binding in templates to\n * make URL's relative to an application's root.  Defaults to the main\n * document URL, but can be overridden by users.  It may be useful to set\n * `rootPath` to provide a stable application mount path when\n * using client side routing.\n */\nlet rootPath = undefined ||\n  Object(_resolve_url_js__WEBPACK_IMPORTED_MODULE_1__[\"pathFromUrl\"])(document.baseURI || window.location.href);\n\n/**\n * Sets the global rootPath property used by `ElementMixin` and\n * available via `rootPath`.\n *\n * @param {string} path The new root path\n * @return {void}\n */\nconst setRootPath = function(path) {\n  rootPath = path;\n};\n\n/**\n * A global callback used to sanitize any value before inserting it into the DOM. The callback signature is:\n *\n *     Polymer = {\n *       sanitizeDOMValue: function(value, name, type, node) { ... }\n *     }\n *\n * Where:\n *\n * `value` is the value to sanitize.\n * `name` is the name of an attribute or property (for example, href).\n * `type` indicates where the value is being inserted: one of property, attribute, or text.\n * `node` is the node where the value is being inserted.\n *\n * @type {(function(*,string,string,Node):*)|undefined}\n */\nlet sanitizeDOMValue = undefined;\n\n/**\n * Sets the global sanitizeDOMValue available via this module's exported\n * `sanitizeDOMValue` variable.\n *\n * @param {(function(*,string,string,Node):*)|undefined} newSanitizeDOMValue the global sanitizeDOMValue callback\n * @return {void}\n */\nconst setSanitizeDOMValue = function(newSanitizeDOMValue) {\n  sanitizeDOMValue = newSanitizeDOMValue;\n};\n\n/**\n * Globally settable property to make Polymer Gestures use passive TouchEvent listeners when recognizing gestures.\n * When set to `true`, gestures made from touch will not be able to prevent scrolling, allowing for smoother\n * scrolling performance.\n * Defaults to `false` for backwards compatibility.\n */\nlet passiveTouchGestures = false;\n\n/**\n * Sets `passiveTouchGestures` globally for all elements using Polymer Gestures.\n *\n * @param {boolean} usePassive enable or disable passive touch gestures globally\n * @return {void}\n */\nconst setPassiveTouchGestures = function(usePassive) {\n  passiveTouchGestures = usePassive;\n};\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/utils/settings.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/lib/utils/style-gather.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@polymer/polymer/lib/utils/style-gather.js ***!
  \*****************************************************************/
/*! exports provided: stylesFromModules, stylesFromModule, stylesFromTemplate, stylesFromModuleImports, cssFromModules, cssFromModule, cssFromTemplate, cssFromModuleImports */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stylesFromModules\", function() { return stylesFromModules; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stylesFromModule\", function() { return stylesFromModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stylesFromTemplate\", function() { return stylesFromTemplate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stylesFromModuleImports\", function() { return stylesFromModuleImports; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cssFromModules\", function() { return cssFromModules; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cssFromModule\", function() { return cssFromModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cssFromTemplate\", function() { return cssFromTemplate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cssFromModuleImports\", function() { return cssFromModuleImports; });\n/* harmony import */ var _resolve_url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./resolve-url.js */ \"./node_modules/@polymer/polymer/lib/utils/resolve-url.js\");\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\nconst MODULE_STYLE_LINK_SELECTOR = 'link[rel=import][type~=css]';\nconst INCLUDE_ATTR = 'include';\nconst SHADY_UNSCOPED_ATTR = 'shady-unscoped';\n\nfunction importModule(moduleId) {\n  const /** DomModule */ PolymerDomModule = customElements.get('dom-module');\n  if (!PolymerDomModule) {\n    return null;\n  }\n  return PolymerDomModule.import(moduleId);\n}\n\nfunction styleForImport(importDoc) {\n  // NOTE: polyfill affordance.\n  // under the HTMLImports polyfill, there will be no 'body',\n  // but the import pseudo-doc can be used directly.\n  let container = importDoc.body ? importDoc.body : importDoc;\n  const importCss = Object(_resolve_url_js__WEBPACK_IMPORTED_MODULE_0__[\"resolveCss\"])(container.textContent,\n    importDoc.baseURI);\n  const style = document.createElement('style');\n  style.textContent = importCss;\n  return style;\n}\n\n/** @typedef {{assetpath: string}} */\nlet templateWithAssetPath; // eslint-disable-line no-unused-vars\n\n/**\n * Module with utilities for collection CSS text from `<templates>`, external\n * stylesheets, and `dom-module`s.\n *\n * @summary Module with utilities for collection CSS text from various sources.\n */\n`TODO(modulizer): A namespace named Polymer.StyleGather was\ndeclared here. The surrounding comments should be reviewed,\nand this string can then be deleted`;\n\n/**\n * Returns a list of <style> elements in a space-separated list of `dom-module`s.\n *\n * @function\n * @param {string} moduleIds List of dom-module id's within which to\n * search for css.\n * @return {!Array<!HTMLStyleElement>} Array of contained <style> elements\n * @this {StyleGather}\n */\nfunction stylesFromModules(moduleIds) {\n const modules = moduleIds.trim().split(/\\s+/);\n const styles = [];\n for (let i=0; i < modules.length; i++) {\n   styles.push(...stylesFromModule(modules[i]));\n }\n return styles;\n}\n\n/**\n * Returns a list of <style> elements in a given `dom-module`.\n * Styles in a `dom-module` can come either from `<style>`s within the\n * first `<template>`, or else from one or more\n * `<link rel=\"import\" type=\"css\">` links outside the template.\n *\n * @param {string} moduleId dom-module id to gather styles from\n * @return {!Array<!HTMLStyleElement>} Array of contained styles.\n * @this {StyleGather}\n */\nfunction stylesFromModule(moduleId) {\n  const m = importModule(moduleId);\n\n  if (!m) {\n    console.warn('Could not find style data in module named', moduleId);\n    return [];\n  }\n\n  if (m._styles === undefined) {\n    const styles = [];\n    // module imports: <link rel=\"import\" type=\"css\">\n    styles.push(..._stylesFromModuleImports(m));\n    // include css from the first template in the module\n    const template = m.querySelector('template');\n    if (template) {\n      styles.push(...stylesFromTemplate(template,\n        /** @type {templateWithAssetPath} */(m).assetpath));\n    }\n\n    m._styles = styles;\n  }\n\n  return m._styles;\n}\n\n/**\n * Returns the `<style>` elements within a given template.\n *\n * @param {!HTMLTemplateElement} template Template to gather styles from\n * @param {string} baseURI baseURI for style content\n * @return {!Array<!HTMLStyleElement>} Array of styles\n * @this {StyleGather}\n */\nfunction stylesFromTemplate(template, baseURI) {\n  if (!template._styles) {\n    const styles = [];\n    // if element is a template, get content from its .content\n    const e$ = template.content.querySelectorAll('style');\n    for (let i=0; i < e$.length; i++) {\n      let e = e$[i];\n      // support style sharing by allowing styles to \"include\"\n      // other dom-modules that contain styling\n      let include = e.getAttribute(INCLUDE_ATTR);\n      if (include) {\n        styles.push(...stylesFromModules(include).filter(function(item, index, self) {\n          return self.indexOf(item) === index;\n        }));\n      }\n      if (baseURI) {\n        e.textContent = Object(_resolve_url_js__WEBPACK_IMPORTED_MODULE_0__[\"resolveCss\"])(e.textContent, baseURI);\n      }\n      styles.push(e);\n    }\n    template._styles = styles;\n  }\n  return template._styles;\n}\n\n/**\n * Returns a list of <style> elements  from stylesheets loaded via `<link rel=\"import\" type=\"css\">` links within the specified `dom-module`.\n *\n * @param {string} moduleId Id of `dom-module` to gather CSS from\n * @return {!Array<!HTMLStyleElement>} Array of contained styles.\n * @this {StyleGather}\n */\nfunction stylesFromModuleImports(moduleId) {\n let m = importModule(moduleId);\n return m ? _stylesFromModuleImports(m) : [];\n}\n\n/**\n * @this {StyleGather}\n * @param {!HTMLElement} module dom-module element that could contain `<link rel=\"import\" type=\"css\">` styles\n * @return {!Array<!HTMLStyleElement>} Array of contained styles\n */\nfunction _stylesFromModuleImports(module) {\n  const styles = [];\n  const p$ = module.querySelectorAll(MODULE_STYLE_LINK_SELECTOR);\n  for (let i=0; i < p$.length; i++) {\n    let p = p$[i];\n    if (p.import) {\n      const importDoc = p.import;\n      const unscoped = p.hasAttribute(SHADY_UNSCOPED_ATTR);\n      if (unscoped && !importDoc._unscopedStyle) {\n        const style = styleForImport(importDoc);\n        style.setAttribute(SHADY_UNSCOPED_ATTR, '');\n        importDoc._unscopedStyle = style;\n      } else if (!importDoc._style) {\n        importDoc._style = styleForImport(importDoc);\n      }\n      styles.push(unscoped ? importDoc._unscopedStyle : importDoc._style);\n    }\n  }\n  return styles;\n}\n\n/**\n *\n * Returns CSS text of styles in a space-separated list of `dom-module`s.\n * Note: This method is deprecated, use `stylesFromModules` instead.\n *\n * @deprecated\n * @param {string} moduleIds List of dom-module id's within which to\n * search for css.\n * @return {string} Concatenated CSS content from specified `dom-module`s\n * @this {StyleGather}\n */\nfunction cssFromModules(moduleIds) {\n let modules = moduleIds.trim().split(/\\s+/);\n let cssText = '';\n for (let i=0; i < modules.length; i++) {\n   cssText += cssFromModule(modules[i]);\n }\n return cssText;\n}\n\n/**\n * Returns CSS text of styles in a given `dom-module`.  CSS in a `dom-module`\n * can come either from `<style>`s within the first `<template>`, or else\n * from one or more `<link rel=\"import\" type=\"css\">` links outside the\n * template.\n *\n * Any `<styles>` processed are removed from their original location.\n * Note: This method is deprecated, use `styleFromModule` instead.\n *\n * @deprecated\n * @param {string} moduleId dom-module id to gather styles from\n * @return {string} Concatenated CSS content from specified `dom-module`\n * @this {StyleGather}\n */\nfunction cssFromModule(moduleId) {\n  let m = importModule(moduleId);\n  if (m && m._cssText === undefined) {\n    // module imports: <link rel=\"import\" type=\"css\">\n    let cssText = _cssFromModuleImports(m);\n    // include css from the first template in the module\n    let t = m.querySelector('template');\n    if (t) {\n      cssText += cssFromTemplate(t,\n        /** @type {templateWithAssetPath} */(m).assetpath);\n    }\n    m._cssText = cssText || null;\n  }\n  if (!m) {\n    console.warn('Could not find style data in module named', moduleId);\n  }\n  return m && m._cssText || '';\n}\n\n/**\n * Returns CSS text of `<styles>` within a given template.\n *\n * Any `<styles>` processed are removed from their original location.\n * Note: This method is deprecated, use `styleFromTemplate` instead.\n *\n * @deprecated\n * @param {!HTMLTemplateElement} template Template to gather styles from\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Concatenated CSS content from specified template\n * @this {StyleGather}\n */\nfunction cssFromTemplate(template, baseURI) {\n  let cssText = '';\n  const e$ = stylesFromTemplate(template, baseURI);\n  // if element is a template, get content from its .content\n  for (let i=0; i < e$.length; i++) {\n    let e = e$[i];\n    if (e.parentNode) {\n      e.parentNode.removeChild(e);\n    }\n    cssText += e.textContent;\n  }\n  return cssText;\n}\n\n/**\n * Returns CSS text from stylesheets loaded via `<link rel=\"import\" type=\"css\">`\n * links within the specified `dom-module`.\n *\n * Note: This method is deprecated, use `stylesFromModuleImports` instead.\n *\n * @deprecated\n *\n * @param {string} moduleId Id of `dom-module` to gather CSS from\n * @return {string} Concatenated CSS content from links in specified `dom-module`\n * @this {StyleGather}\n */\nfunction cssFromModuleImports(moduleId) {\n  let m = importModule(moduleId);\n  return m ? _cssFromModuleImports(m) : '';\n}\n\n/**\n * @deprecated\n * @this {StyleGather}\n * @param {!HTMLElement} module dom-module element that could contain `<link rel=\"import\" type=\"css\">` styles\n * @return {string} Concatenated CSS content from links in the dom-module\n */\nfunction _cssFromModuleImports(module) {\n let cssText = '';\n let styles = _stylesFromModuleImports(module);\n for (let i=0; i < styles.length; i++) {\n   cssText += styles[i].textContent;\n }\n return cssText;\n}\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/lib/utils/style-gather.js?");

/***/ }),

/***/ "./node_modules/@polymer/polymer/polymer-element.js":
/*!**********************************************************!*\
  !*** ./node_modules/@polymer/polymer/polymer-element.js ***!
  \**********************************************************/
/*! exports provided: html, PolymerElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PolymerElement\", function() { return PolymerElement; });\n/* harmony import */ var _lib_mixins_element_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/mixins/element-mixin.js */ \"./node_modules/@polymer/polymer/lib/mixins/element-mixin.js\");\n/* harmony import */ var _lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"html\", function() { return _lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_1__[\"html\"]; });\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n/**\n * Base class that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * @customElement\n * @polymer\n * @constructor\n * @implements {Polymer_ElementMixin}\n * @extends HTMLElement\n * @appliesMixin ElementMixin\n * @summary Custom element base class that provides the core API for Polymer's\n *   key meta-programming features including template stamping, data-binding,\n *   attribute deserialization, and property change observation\n */\nconst PolymerElement = Object(_lib_mixins_element_mixin_js__WEBPACK_IMPORTED_MODULE_0__[\"ElementMixin\"])(HTMLElement);\n\n\n\n//# sourceURL=webpack:///./node_modules/@polymer/polymer/polymer-element.js?");

/***/ }),

/***/ "./node_modules/debug/src/browser.js":
/*!*******************************************!*\
  !*** ./node_modules/debug/src/browser.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(/*! ./debug */ \"./node_modules/debug/src/debug.js\");\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/debug/src/browser.js?");

/***/ }),

/***/ "./node_modules/debug/src/debug.js":
/*!*****************************************!*\
  !*** ./node_modules/debug/src/debug.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(/*! ms */ \"./node_modules/ms/index.js\");\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n//# sourceURL=webpack:///./node_modules/debug/src/debug.js?");

/***/ }),

/***/ "./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n//# sourceURL=webpack:///./node_modules/ms/index.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/y-webrtc/dist/y-webrtc.js":
/*!************************************************!*\
  !*** ./node_modules/y-webrtc/dist/y-webrtc.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var require;var require;/**\n * yjs - A framework for real-time p2p shared editing on any data\n * @version v12.1.4\n * @link http://y-js.org\n * @license MIT\n */\n!function(e){if(true)module.exports=e();else { var t; }}(function(){var define,module,exports;return function e(t,n,r){function i(a,s){if(!n[a]){if(!t[a]){var c=\"function\"==typeof require&&require;if(!s&&c)return require(a,!0);if(o)return o(a,!0);var d=new Error(\"Cannot find module '\"+a+\"'\");throw d.code=\"MODULE_NOT_FOUND\",d}var u=n[a]={exports:{}};t[a][0].call(u.exports,function(e){var n=t[a][1][e];return i(n?n:e)},u,u.exports,e,t,n,r)}return n[a].exports}for(var o=\"function\"==typeof require&&require,a=0;a<r.length;a++)i(r[a]);return i}({1:[function(e,t,n){t.exports=function(e,t,n){var r,i=window.URL,o={autoplay:!0,mirror:!1,muted:!1},a=t||document.createElement(\"video\");if(n)for(r in n)o[r]=n[r];if(o.autoplay&&(a.autoplay=\"autoplay\"),o.muted&&(a.muted=!0),o.mirror&&[\"\",\"moz\",\"webkit\",\"o\",\"ms\"].forEach(function(e){var t=e?e+\"Transform\":\"transform\";a.style[t]=\"scaleX(-1)\"}),i&&i.createObjectURL)a.src=i.createObjectURL(e);else if(a.srcObject)a.srcObject=e;else{if(!a.mozSrcObject)return!1;a.mozSrcObject=e}return a}},{}],2:[function(e,t,n){function r(e){o.call(this);var t=e||{};this.config={chunksize:16384,pacing:0};var n;for(n in t)this.config[n]=t[n];this.file=null,this.channel=null}function i(){o.call(this),this.receiveBuffer=[],this.received=0,this.metadata={},this.channel=null}var o=e(\"wildemitter\"),a=e(\"util\");a.inherits(r,o),r.prototype.send=function(e,t){var n=this;this.file=e,this.channel=t;var r=function(t){var i=new window.FileReader;i.onload=function(){return function(i){n.channel.send(i.target.result),n.emit(\"progress\",t,e.size,i.target.result),e.size>t+i.target.result.byteLength?window.setTimeout(r,n.config.pacing,t+n.config.chunksize):(n.emit(\"progress\",e.size,e.size,null),n.emit(\"sentFile\"))}}(e);var o=e.slice(t,t+n.config.chunksize);i.readAsArrayBuffer(o)};window.setTimeout(r,0,0)},a.inherits(i,o),i.prototype.receive=function(e,t){var n=this;e&&(this.metadata=e),this.channel=t,t.binaryType=\"arraybuffer\",this.channel.onmessage=function(e){var t=e.data.byteLength;n.received+=t,n.receiveBuffer.push(e.data),n.emit(\"progress\",n.received,n.metadata.size,e.data),n.received===n.metadata.size?(n.emit(\"receivedFile\",new window.Blob(n.receiveBuffer),n.metadata),n.receiveBuffer=[]):n.received>n.metadata.size&&(console.error(\"received more than expected, discarding...\"),n.receiveBuffer=[])}},t.exports={},t.exports.support=\"undefined\"!=typeof window&&window&&window.File&&window.FileReader&&window.Blob,t.exports.Sender=r,t.exports.Receiver=i},{util:57,wildemitter:52}],3:[function(e,t,n){var r=e(\"getusermedia\"),i={};t.exports=function(e,t){var n,o=2===arguments.length,a=o?t:e;if(\"undefined\"==typeof window||\"http:\"===window.location.protocol)return n=new Error(\"NavigatorUserMediaError\"),n.name=\"HTTPS_REQUIRED\",a(n);if(window.navigator.userAgent.match(\"Chrome\")){var s=parseInt(window.navigator.userAgent.match(/Chrome\\/(.*) /)[1],10),c=33,d=!window.chrome.webstore;if(window.navigator.userAgent.match(\"Linux\")&&(c=35),sessionStorage.getScreenMediaJSExtensionId)chrome.runtime.sendMessage(sessionStorage.getScreenMediaJSExtensionId,{type:\"getScreen\",id:1},null,function(t){if(t&&\"\"!==t.sourceId)e=o&&e||{audio:!1,video:{mandatory:{chromeMediaSource:\"desktop\",maxWidth:window.screen.width,maxHeight:window.screen.height,maxFrameRate:3}}},e.video.mandatory.chromeMediaSourceId=t.sourceId,r(e,a);else{var n=new Error(\"NavigatorUserMediaError\");n.name=\"PERMISSION_DENIED\",a(n)}});else if(window.cefGetScreenMedia)window.cefGetScreenMedia(function(t){if(t)e=o&&e||{audio:!1,video:{mandatory:{chromeMediaSource:\"desktop\",maxWidth:window.screen.width,maxHeight:window.screen.height,maxFrameRate:3},optional:[{googLeakyBucket:!0},{googTemporalLayeredScreencast:!0}]}},e.video.mandatory.chromeMediaSourceId=t,r(e,a);else{var n=new Error(\"cefGetScreenMediaError\");n.name=\"CEF_GETSCREENMEDIA_CANCELED\",a(n)}});else if(d||s>=26&&s<=c)e=o&&e||{video:{mandatory:{googLeakyBucket:!0,maxWidth:window.screen.width,maxHeight:window.screen.height,maxFrameRate:3,chromeMediaSource:\"screen\"}}},r(e,a);else{var u=window.setTimeout(function(){return n=new Error(\"NavigatorUserMediaError\"),n.name=\"EXTENSION_UNAVAILABLE\",a(n)},1e3);i[u]=[a,o?e:null],window.postMessage({type:\"getScreen\",id:u},\"*\")}}else if(window.navigator.userAgent.match(\"Firefox\")){var p=parseInt(window.navigator.userAgent.match(/Firefox\\/(.*)/)[1],10);p>=33?(e=o&&e||{video:{mozMediaSource:\"window\",mediaSource:\"window\"}},r(e,function(e,t){if(a(e,t),!e)var n=t.currentTime,r=window.setInterval(function(){t||window.clearInterval(r),t.currentTime==n&&(window.clearInterval(r),t.onended&&t.onended()),n=t.currentTime},500)})):(n=new Error(\"NavigatorUserMediaError\"),n.name=\"EXTENSION_UNAVAILABLE\")}},window.addEventListener(\"message\",function(e){if(e.origin==window.location.origin)if(\"gotScreen\"==e.data.type&&i[e.data.id]){var t=i[e.data.id],n=t[1],o=t[0];if(delete i[e.data.id],\"\"===e.data.sourceId){var a=new Error(\"NavigatorUserMediaError\");a.name=\"PERMISSION_DENIED\",o(a)}else n=n||{audio:!1,video:{mandatory:{chromeMediaSource:\"desktop\",maxWidth:window.screen.width,maxHeight:window.screen.height,maxFrameRate:3},optional:[{googLeakyBucket:!0},{googTemporalLayeredScreencast:!0}]}},n.video.mandatory.chromeMediaSourceId=e.data.sourceId,r(n,o)}else\"getScreenPending\"==e.data.type&&window.clearTimeout(e.data.id)})},{getusermedia:4}],4:[function(e,t,n){e(\"webrtc-adapter\");t.exports=function(e,t){var n,r=2===arguments.length,i={video:!0,audio:!0},o=\"PermissionDeniedError\",a=\"PERMISSION_DENIED\",s=\"ConstraintNotSatisfiedError\";return r||(t=e,e=i),\"undefined\"!=typeof navigator&&navigator.getUserMedia?e.audio||e.video?void navigator.mediaDevices.getUserMedia(e).then(function(e){t(null,e)}).catch(function(e){var n;\"string\"==typeof e?(n=new Error(\"MediaStreamError\"),e===o||e===a?n.name=o:n.name=s):(n=e,n.name||(n[o]?e.name=o:e.name=s)),t(n)}):(n=new Error(\"MediaStreamError\"),n.name=\"NoMediaRequestedError\",setTimeout(function(){t(n)},0)):(n=new Error(\"MediaStreamError\"),n.name=\"NotSupportedError\",setTimeout(function(){t(n)},0))}},{\"webrtc-adapter\":42}],5:[function(e,t,n){e(\"webrtc-adapter\");t.exports=function(e,t){var n,r=2===arguments.length,i={video:!0,audio:!0},o=\"PermissionDeniedError\",a=\"PERMISSION_DENIED\",s=\"ConstraintNotSatisfiedError\";return r||(t=e,e=i),\"undefined\"!=typeof navigator&&navigator.getUserMedia?e.audio||e.video?(localStorage&&\"true\"===localStorage.useFirefoxFakeDevice&&(e.fake=!0),void navigator.mediaDevices.getUserMedia(e).then(function(e){t(null,e)}).catch(function(e){var n;\"string\"==typeof e?(n=new Error(\"MediaStreamError\"),e===o||e===a?n.name=o:n.name=s):(n=e,n.name||(n[o]?e.name=o:e.name=s)),t(n)})):(n=new Error(\"MediaStreamError\"),n.name=\"NoMediaRequestedError\",setTimeout(function(){t(n)},0)):(n=new Error(\"MediaStreamError\"),n.name=\"NotSupportedError\",setTimeout(function(){t(n)},0))}},{\"webrtc-adapter\":42}],6:[function(e,t,n){function r(e,t){var n=-(1/0);e.getFloatFrequencyData(t);for(var r=4,i=t.length;r<i;r++)t[r]>n&&t[r]<0&&(n=t[r]);return n}var i=e(\"wildemitter\"),o=window.AudioContext||window.webkitAudioContext,a=null;t.exports=function(e,t){var n=new i;if(!o)return n;var t=t||{},s=t.smoothing||.1,c=t.interval||50,d=t.threshold,u=t.play,p=t.history||10,l=!0;a||(a=new o);var f,h,m;m=a.createAnalyser(),m.fftSize=512,m.smoothingTimeConstant=s,h=new Float32Array(m.fftSize),e.jquery&&(e=e[0]),e instanceof HTMLAudioElement||e instanceof HTMLVideoElement?(f=a.createMediaElementSource(e),\"undefined\"==typeof u&&(u=!0),d=d||-50):(f=a.createMediaStreamSource(e),d=d||-50),f.connect(m),u&&m.connect(a.destination),n.speaking=!1,n.setThreshold=function(e){d=e},n.setInterval=function(e){c=e},n.stop=function(){l=!1,n.emit(\"volume_change\",-100,d),n.speaking&&(n.speaking=!1,n.emit(\"stopped_speaking\"))},n.speakingHistory=[];for(var v=0;v<p;v++)n.speakingHistory.push(0);var g=function(){setTimeout(function(){if(l){var e=r(m,h);n.emit(\"volume_change\",e,d);var t=0;if(e>d&&!n.speaking){for(var i=n.speakingHistory.length-3;i<n.speakingHistory.length;i++)t+=n.speakingHistory[i];t>=2&&(n.speaking=!0,n.emit(\"speaking\"))}else if(e<d&&n.speaking){for(var i=0;i<n.speakingHistory.length;i++)t+=n.speakingHistory[i];0==t&&(n.speaking=!1,n.emit(\"stopped_speaking\"))}n.speakingHistory.shift(),n.speakingHistory.push(0+(e>d)),g()}},c)};return g(),n}},{wildemitter:52}],7:[function(e,t,n){function r(e){d.call(this);var t,n=this.config={autoAdjustMic:!1,detectSpeakingEvents:!1,audioFallback:!1,media:{audio:!0,video:!0},logger:p};for(t in e)this.config[t]=e[t];this.logger=n.logger,this._log=this.logger.log.bind(this.logger,\"LocalMedia:\"),this._logerror=this.logger.error.bind(this.logger,\"LocalMedia:\"),this.screenSharingSupport=a.screenSharing,this.localStreams=[],this.localScreens=[],a.supportGetUserMedia||this._logerror(\"Your browser does not support local media capture.\")}var i=e(\"util\"),o=e(\"hark\"),a=e(\"webrtcsupport\"),s=e(\"getusermedia\"),c=e(\"getscreenmedia\"),d=e(\"wildemitter\"),u=e(\"mediastream-gain\"),p=e(\"mockconsole\");i.inherits(r,d),r.prototype.start=function(e,t){var n=this,r=e||this.config.media;s(r,function(e,i){if(e){if(n.config.audioFallback&&\"DevicesNotFoundError\"===e.name&&r.video!==!1)return r.video=!1,void n.start(r,t)}else r.audio&&n.config.detectSpeakingEvents&&n.setupAudioMonitor(i,n.config.harkOptions),n.localStreams.push(i),n.config.autoAdjustMic&&(n.gainController=new u(i),n.setMicIfEnabled(.5)),i.onended=function(){},n.emit(\"localStream\",i);if(t)return t(e,i)})},r.prototype.stop=function(e){var t=this;if(e){e.getTracks().forEach(function(e){e.stop()});var n=t.localStreams.indexOf(e);n>-1?(t.emit(\"localStreamStopped\",e),t.localStreams=t.localStreams.splice(n,1)):(n=t.localScreens.indexOf(e),n>-1&&(t.emit(\"localScreenStopped\",e),t.localScreens=t.localScreens.splice(n,1)))}else this.stopStreams(),this.stopScreenShare()},r.prototype.stopStreams=function(){var e=this;this.audioMonitor&&(this.audioMonitor.stop(),delete this.audioMonitor),this.localStreams.forEach(function(t){t.getTracks().forEach(function(e){e.stop()}),e.emit(\"localStreamStopped\",t)}),this.localStreams=[]},r.prototype.startScreenShare=function(e){var t=this;c(function(n,r){if(n||(t.localScreens.push(r),r.onended=function(){var e=t.localScreens.indexOf(r);e>-1&&t.localScreens.splice(e,1),t.emit(\"localScreenStopped\",r)},t.emit(\"localScreen\",r)),e)return e(n,r)})},r.prototype.stopScreenShare=function(e){var t=this;e?(e.getTracks().forEach(function(e){e.stop()}),this.emit(\"localScreenStopped\",e)):(this.localScreens.forEach(function(e){e.getTracks().forEach(function(e){e.stop()}),t.emit(\"localScreenStopped\",e)}),this.localScreens=[])},r.prototype.mute=function(){this._audioEnabled(!1),this.hardMuted=!0,this.emit(\"audioOff\")},r.prototype.unmute=function(){this._audioEnabled(!0),this.hardMuted=!1,this.emit(\"audioOn\")},r.prototype.setupAudioMonitor=function(e,t){this._log(\"Setup audio\");var n,r=this.audioMonitor=o(e,t),i=this;r.on(\"speaking\",function(){i.emit(\"speaking\"),i.hardMuted||i.setMicIfEnabled(1)}),r.on(\"stopped_speaking\",function(){n&&clearTimeout(n),n=setTimeout(function(){i.emit(\"stoppedSpeaking\"),i.hardMuted||i.setMicIfEnabled(.5)},1e3)}),r.on(\"volume_change\",function(e,t){i.emit(\"volumeChange\",e,t)})},r.prototype.setMicIfEnabled=function(e){this.config.autoAdjustMic&&this.gainController.setGain(e)},r.prototype.pauseVideo=function(){this._videoEnabled(!1),this.emit(\"videoOff\")},r.prototype.resumeVideo=function(){this._videoEnabled(!0),this.emit(\"videoOn\")},r.prototype.pause=function(){this.mute(),this.pauseVideo()},r.prototype.resume=function(){this.unmute(),this.resumeVideo()},r.prototype._audioEnabled=function(e){this.setMicIfEnabled(e?1:0),this.localStreams.forEach(function(t){t.getAudioTracks().forEach(function(t){t.enabled=!!e})})},r.prototype._videoEnabled=function(e){this.localStreams.forEach(function(t){t.getVideoTracks().forEach(function(t){t.enabled=!!e})})},r.prototype.isAudioEnabled=function(){var e=!0;return this.localStreams.forEach(function(t){t.getAudioTracks().forEach(function(t){e=e&&t.enabled})}),e},r.prototype.isVideoEnabled=function(){var e=!0;return this.localStreams.forEach(function(t){t.getVideoTracks().forEach(function(t){e=e&&t.enabled})}),e},r.prototype.startLocalMedia=r.prototype.start,r.prototype.stopLocalMedia=r.prototype.stop,Object.defineProperty(r.prototype,\"localStream\",{get:function(){return this.localStreams.length>0?this.localStreams[0]:null}}),Object.defineProperty(r.prototype,\"localScreen\",{get:function(){return this.localScreens.length>0?this.localScreens[0]:null}}),t.exports=r},{getscreenmedia:3,getusermedia:5,hark:6,\"mediastream-gain\":26,mockconsole:27,util:57,webrtcsupport:8,wildemitter:52}],8:[function(e,t,n){var r,i;window.mozRTCPeerConnection||navigator.mozGetUserMedia?(r=\"moz\",i=parseInt(navigator.userAgent.match(/Firefox\\/([0-9]+)\\./)[1],10)):(window.webkitRTCPeerConnection||navigator.webkitGetUserMedia)&&(r=\"webkit\",i=navigator.userAgent.match(/Chrom(e|ium)/)&&parseInt(navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./)[2],10));var o=window.RTCPeerConnection||window.mozRTCPeerConnection||window.webkitRTCPeerConnection,a=window.mozRTCIceCandidate||window.RTCIceCandidate,s=window.mozRTCSessionDescription||window.RTCSessionDescription,c=window.webkitMediaStream||window.MediaStream,d=\"https:\"===window.location.protocol&&(\"webkit\"===r&&i>=26||\"moz\"===r&&i>=33),u=window.AudioContext||window.webkitAudioContext,p=document.createElement(\"video\"),l=p&&p.canPlayType&&\"probably\"===p.canPlayType('video/webm; codecs=\"vp8\", vorbis'),f=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.msGetUserMedia||navigator.mozGetUserMedia;t.exports={prefix:r,browserVersion:i,support:!!o&&!!f,supportRTCPeerConnection:!!o,supportVp8:l,supportGetUserMedia:!!f,supportDataChannel:!!(o&&o.prototype&&o.prototype.createDataChannel),supportWebAudio:!(!u||!u.prototype.createMediaStreamSource),supportMediaStream:!(!c||!c.prototype.removeTrack),supportScreenSharing:!!d,AudioContext:u,PeerConnection:o,SessionDescription:s,IceCandidate:a,MediaStream:c,getUserMedia:f}},{}],9:[function(e,t,n){function r(e,t){for(var n=-1,r=e.length;++n<r&&t(e[n],n,e)!==!1;);return e}t.exports=r},{}],10:[function(e,t,n){function r(e,t){for(var n=-1,r=e.length,i=Array(r);++n<r;)i[n]=t(e[n],n,e);return i}t.exports=r},{}],11:[function(e,t,n){function r(e){return null==e?\"\":e+\"\"}function i(e,t,n){var r=typeof e;return\"function\"==r?void 0===t?e:C(e,t,n):null==e?w:\"object\"==r?s(e):void 0===t?b(e):c(e,t)}function o(e,t,n){if(null!=e){void 0!==n&&n in m(e)&&(t=[n]);for(var r=0,i=t.length;null!=e&&r<i;)e=e[t[r++]];return r&&r==i?e:void 0}}function a(e,t,n){var r=t.length,i=r,o=!n;if(null==e)return!i;for(e=m(e);r--;){var a=t[r];if(o&&a[2]?a[1]!==e[a[0]]:!(a[0]in e))return!1}for(;++r<i;){a=t[r];var s=a[0],c=e[s],d=a[1];if(o&&a[2]){if(void 0===c&&!(s in e))return!1}else{var u=n?n(c,d,s):void 0;if(!(void 0===u?S(d,c,n,!0):u))return!1}}return!0}function s(e){var t=l(e);if(1==t.length&&t[0][2]){var n=t[0][0],r=t[0][1];return function(e){return null!=e&&(e[n]===r&&(void 0!==r||n in m(e)))}}return function(e){return a(e,t)}}function c(e,t){var n=k(e),r=f(e)&&h(t),i=e+\"\";return e=v(e),function(a){if(null==a)return!1;var s=i;if(a=m(a),(n||!r)&&!(s in a)){if(a=1==e.length?a:o(a,p(e,0,-1)),null==a)return!1;s=g(e),a=m(a)}return a[s]===t?void 0!==t||s in a:S(t,a[s],void 0,!0)}}function d(e){return function(t){return null==t?void 0:t[e]}}function u(e){var t=e+\"\";return e=v(e),function(n){return o(n,e,t)}}function p(e,t,n){var r=-1,i=e.length;t=null==t?0:+t||0,t<0&&(t=-t>i?0:i+t),n=void 0===n||n>i?i:+n||0,n<0&&(n+=i),i=t>n?0:n-t>>>0,t>>>=0;for(var o=Array(i);++r<i;)o[r]=e[r+t];return o}function l(e){for(var t=T(e),n=t.length;n--;)t[n][2]=h(t[n][1]);return t}function f(e,t){var n=typeof e;if(\"string\"==n&&O.test(e)||\"number\"==n)return!0;if(k(e))return!1;var r=!E.test(e);return r||null!=t&&e in m(t)}function h(e){return e===e&&!y(e)}function m(e){return y(e)?e:Object(e)}function v(e){if(k(e))return e;var t=[];return r(e).replace(R,function(e,n,r,i){t.push(r?i.replace(P,\"$1\"):n||e)}),t}function g(e){var t=e?e.length:0;return t?e[t-1]:void 0}function y(e){var t=typeof e;return!!e&&(\"object\"==t||\"function\"==t)}function w(e){return e}function b(e){return f(e)?d(e):u(e)}var S=e(\"lodash._baseisequal\"),C=e(\"lodash._bindcallback\"),k=e(\"lodash.isarray\"),T=e(\"lodash.pairs\"),E=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,O=/^\\w*$/,R=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g,P=/\\\\(\\\\)?/g;t.exports=i},{\"lodash._baseisequal\":14,\"lodash._bindcallback\":15,\"lodash.isarray\":20,\"lodash.pairs\":24}],12:[function(e,t,n){function r(e,t){return f(e,t,u)}function i(e){return function(t){return null==t?void 0:t[e]}}function o(e,t){return function(n,r){var i=n?h(n):0;if(!s(i))return e(n,r);for(var o=t?i:-1,a=c(n);(t?o--:++o<i)&&r(a[o],o,a)!==!1;);return n}}function a(e){return function(t,n,r){for(var i=c(t),o=r(t),a=o.length,s=e?a:-1;e?s--:++s<a;){var d=o[s];if(n(i[d],d,i)===!1)break}return t}}function s(e){return\"number\"==typeof e&&e>-1&&e%1==0&&e<=p}function c(e){return d(e)?e:Object(e)}function d(e){var t=typeof e;return!!e&&(\"object\"==t||\"function\"==t)}var u=e(\"lodash.keys\"),p=9007199254740991,l=o(r),f=a(),h=i(\"length\");t.exports=l},{\"lodash.keys\":22}],13:[function(e,t,n){function r(e,t,n){if(null!=e){void 0!==n&&n in i(e)&&(t=[n]);for(var r=0,o=t.length;null!=e&&r<o;)e=e[t[r++]];return r&&r==o?e:void 0}}function i(e){return o(e)?e:Object(e)}function o(e){var t=typeof e;return!!e&&(\"object\"==t||\"function\"==t)}t.exports=r},{}],14:[function(e,t,n){function r(e){return!!e&&\"object\"==typeof e}function i(e,t){for(var n=-1,r=e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}function o(e,t,n,i,s,c){return e===t||(null==e||null==t||!u(e)&&!r(t)?e!==e&&t!==t:a(e,t,o,n,i,s,c))}function a(e,t,n,r,i,o,a){var u=p(e),f=p(t),v=m,g=m;u||(v=E.call(e),v==h?v=b:v!=b&&(u=l(e))),f||(g=E.call(t),g==h?g=b:g!=b&&(f=l(t)));var y=v==b,w=g==b,S=v==g;if(S&&!u&&!y)return c(e,t,v);if(!i){var C=y&&T.call(e,\"__wrapped__\"),k=w&&T.call(t,\"__wrapped__\");if(C||k)return n(C?e.value():e,k?t.value():t,r,i,o,a)}if(!S)return!1;o||(o=[]),a||(a=[]);for(var O=o.length;O--;)if(o[O]==e)return a[O]==t;o.push(e),a.push(t);var R=(u?s:d)(e,t,n,r,i,o,a);return o.pop(),a.pop(),R}function s(e,t,n,r,o,a,s){var c=-1,d=e.length,u=t.length;if(d!=u&&!(o&&u>d))return!1;for(;++c<d;){var p=e[c],l=t[c],f=r?r(o?l:p,o?p:l,c):void 0;if(void 0!==f){if(f)continue;return!1}if(o){if(!i(t,function(e){return p===e||n(p,e,r,o,a,s)}))return!1}else if(p!==l&&!n(p,l,r,o,a,s))return!1}return!0}function c(e,t,n){switch(n){case v:case g:return+e==+t;case y:return e.name==t.name&&e.message==t.message;case w:return e!=+e?t!=+t:e==+t;case S:case C:return e==t+\"\"}return!1}function d(e,t,n,r,i,o,a){var s=f(e),c=s.length,d=f(t),u=d.length;if(c!=u&&!i)return!1;for(var p=c;p--;){var l=s[p];if(!(i?l in t:T.call(t,l)))return!1}for(var h=i;++p<c;){l=s[p];var m=e[l],v=t[l],g=r?r(i?v:m,i?m:v,l):void 0;if(!(void 0===g?n(m,v,r,i,o,a):g))return!1;h||(h=\"constructor\"==l)}if(!h){var y=e.constructor,w=t.constructor;if(y!=w&&\"constructor\"in e&&\"constructor\"in t&&!(\"function\"==typeof y&&y instanceof y&&\"function\"==typeof w&&w instanceof w))return!1}return!0}function u(e){var t=typeof e;return!!e&&(\"object\"==t||\"function\"==t)}var p=e(\"lodash.isarray\"),l=e(\"lodash.istypedarray\"),f=e(\"lodash.keys\"),h=\"[object Arguments]\",m=\"[object Array]\",v=\"[object Boolean]\",g=\"[object Date]\",y=\"[object Error]\",w=\"[object Number]\",b=\"[object Object]\",S=\"[object RegExp]\",C=\"[object String]\",k=Object.prototype,T=k.hasOwnProperty,E=k.toString;t.exports=o},{\"lodash.isarray\":20,\"lodash.istypedarray\":21,\"lodash.keys\":22}],15:[function(e,t,n){function r(e,t,n){if(\"function\"!=typeof e)return i;if(void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 3:return function(n,r,i){return e.call(t,n,r,i)};case 4:return function(n,r,i,o){return e.call(t,n,r,i,o)};case 5:return function(n,r,i,o,a){return e.call(t,n,r,i,o,a)}}return function(){return e.apply(t,arguments)}}function i(e){return e}t.exports=r},{}],16:[function(e,t,n){function r(e){return!!e&&\"object\"==typeof e}function i(e,t){var n=null==e?void 0:e[t];return s(n)?n:void 0}function o(e){return a(e)&&f.call(e)==c}function a(e){var t=typeof e;return!!e&&(\"object\"==t||\"function\"==t)}function s(e){return null!=e&&(o(e)?h.test(p.call(e)):r(e)&&d.test(e))}var c=\"[object Function]\",d=/^\\[object .+?Constructor\\]$/,u=Object.prototype,p=Function.prototype.toString,l=u.hasOwnProperty,f=u.toString,h=RegExp(\"^\"+p.call(l).replace(/[\\\\^$.*+?()[\\]{}|]/g,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\");t.exports=i},{}],17:[function(e,t,n){function r(e){return null==e?\"\":e+\"\"}function i(e){if(o(e))return e;var t=[];return r(e).replace(a,function(e,n,r,i){t.push(r?i.replace(s,\"$1\"):n||e)}),t}var o=e(\"lodash.isarray\"),a=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g,s=/\\\\(\\\\)?/g;t.exports=i},{\"lodash.isarray\":20}],18:[function(e,t,n){function r(e,t){return function(n,r,i){return\"function\"==typeof r&&void 0===i&&s(n)?e(n,r):t(n,a(r,i,3))}}var i=e(\"lodash._arrayeach\"),o=e(\"lodash._baseeach\"),a=e(\"lodash._bindcallback\"),s=e(\"lodash.isarray\"),c=r(i,o);t.exports=c},{\"lodash._arrayeach\":9,\"lodash._baseeach\":12,\"lodash._bindcallback\":15,\"lodash.isarray\":20}],19:[function(e,t,n){function r(e){return o(e)&&m.call(e,\"callee\")&&(!g.call(e,\"callee\")||v.call(e)==p)}function i(e){return null!=e&&s(e.length)&&!a(e)}function o(e){return d(e)&&i(e)}function a(e){var t=c(e)?v.call(e):\"\";return t==l||t==f}function s(e){return\"number\"==typeof e&&e>-1&&e%1==0&&e<=u}function c(e){var t=typeof e;return!!e&&(\"object\"==t||\"function\"==t)}function d(e){return!!e&&\"object\"==typeof e}var u=9007199254740991,p=\"[object Arguments]\",l=\"[object Function]\",f=\"[object GeneratorFunction]\",h=Object.prototype,m=h.hasOwnProperty,v=h.toString,g=h.propertyIsEnumerable;t.exports=r},{}],20:[function(e,t,n){function r(e){return!!e&&\"object\"==typeof e}function i(e,t){var n=null==e?void 0:e[t];return c(n)?n:void 0}function o(e){return\"number\"==typeof e&&e>-1&&e%1==0&&e<=y}function a(e){return s(e)&&m.call(e)==u}function s(e){var t=typeof e;return!!e&&(\"object\"==t||\"function\"==t)}function c(e){return null!=e&&(a(e)?v.test(f.call(e)):r(e)&&p.test(e))}var d=\"[object Array]\",u=\"[object Function]\",p=/^\\[object .+?Constructor\\]$/,l=Object.prototype,f=Function.prototype.toString,h=l.hasOwnProperty,m=l.toString,v=RegExp(\"^\"+f.call(h).replace(/[\\\\^$.*+?()[\\]{}|]/g,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),g=i(Array,\"isArray\"),y=9007199254740991,w=g||function(e){return r(e)&&o(e.length)&&m.call(e)==d};t.exports=w},{}],21:[function(e,t,n){function r(e){return\"number\"==typeof e&&e>-1&&e%1==0&&e<=a}function i(e){return!!e&&\"object\"==typeof e}function o(e){return i(e)&&r(e.length)&&!!_[M.call(e)]}var a=9007199254740991,s=\"[object Arguments]\",c=\"[object Array]\",d=\"[object Boolean]\",u=\"[object Date]\",p=\"[object Error]\",l=\"[object Function]\",f=\"[object Map]\",h=\"[object Number]\",m=\"[object Object]\",v=\"[object RegExp]\",g=\"[object Set]\",y=\"[object String]\",w=\"[object WeakMap]\",b=\"[object ArrayBuffer]\",S=\"[object DataView]\",C=\"[object Float32Array]\",k=\"[object Float64Array]\",T=\"[object Int8Array]\",E=\"[object Int16Array]\",O=\"[object Int32Array]\",R=\"[object Uint8Array]\",P=\"[object Uint8ClampedArray]\",x=\"[object Uint16Array]\",D=\"[object Uint32Array]\",_={};_[C]=_[k]=_[T]=_[E]=_[O]=_[R]=_[P]=_[x]=_[D]=!0,_[s]=_[c]=_[b]=_[d]=_[S]=_[u]=_[p]=_[l]=_[f]=_[h]=_[m]=_[v]=_[g]=_[y]=_[w]=!1;var j=Object.prototype,M=j.toString;t.exports=o},{}],22:[function(e,t,n){function r(e){return function(t){return null==t?void 0:t[e]}}function i(e){return null!=e&&a(y(e))}function o(e,t){return e=\"number\"==typeof e||f.test(e)?+e:-1,t=null==t?g:t,e>-1&&e%1==0&&e<t}function a(e){return\"number\"==typeof e&&e>-1&&e%1==0&&e<=g}function s(e){for(var t=d(e),n=t.length,r=n&&e.length,i=!!r&&a(r)&&(l(e)||p(e)),s=-1,c=[];++s<n;){var u=t[s];(i&&o(u,r)||m.call(e,u))&&c.push(u)}return c}function c(e){var t=typeof e;return!!e&&(\"object\"==t||\"function\"==t)}function d(e){if(null==e)return[];c(e)||(e=Object(e));var t=e.length;t=t&&a(t)&&(l(e)||p(e))&&t||0;for(var n=e.constructor,r=-1,i=\"function\"==typeof n&&n.prototype===e,s=Array(t),d=t>0;++r<t;)s[r]=r+\"\";for(var u in e)d&&o(u,t)||\"constructor\"==u&&(i||!m.call(e,u))||s.push(u);return s}var u=e(\"lodash._getnative\"),p=e(\"lodash.isarguments\"),l=e(\"lodash.isarray\"),f=/^\\d+$/,h=Object.prototype,m=h.hasOwnProperty,v=u(Object,\"keys\"),g=9007199254740991,y=r(\"length\"),w=v?function(e){var t=null==e?void 0:e.constructor;return\"function\"==typeof t&&t.prototype===e||\"function\"!=typeof e&&i(e)?s(e):c(e)?v(e):[]}:s;t.exports=w},{\"lodash._getnative\":16,\"lodash.isarguments\":19,\"lodash.isarray\":20}],23:[function(e,t,n){function r(e,t){var n=-1,r=o(e)?Array(e.length):[];return u(e,function(e,i,o){r[++n]=t(e,i,o)}),r}function i(e){return function(t){return null==t?void 0:t[e]}}function o(e){return null!=e&&a(f(e))}function a(e){return\"number\"==typeof e&&e>-1&&e%1==0&&e<=l}function s(e,t,n){var i=p(e)?c:r;return t=d(t,n,3),i(e,t)}var c=e(\"lodash._arraymap\"),d=e(\"lodash._basecallback\"),u=e(\"lodash._baseeach\"),p=e(\"lodash.isarray\"),l=9007199254740991,f=i(\"length\");t.exports=s},{\"lodash._arraymap\":10,\"lodash._basecallback\":11,\"lodash._baseeach\":12,\"lodash.isarray\":20}],24:[function(e,t,n){function r(e){return i(e)?e:Object(e)}function i(e){var t=typeof e;return!!e&&(\"object\"==t||\"function\"==t)}function o(e){e=r(e);for(var t=-1,n=a(e),i=n.length,o=Array(i);++t<i;){var s=n[t];o[t]=[s,e[s]]}return o}var a=e(\"lodash.keys\");t.exports=o},{\"lodash.keys\":22}],25:[function(e,t,n){function r(e){return function(t){return null==t?void 0:t[e]}}function i(e){var t=e+\"\";return e=p(e),function(n){return u(n,e,t)}}function o(e,t){var n=typeof e;if(\"string\"==n&&m.test(e)||\"number\"==n)return!0;if(l(e))return!1;var r=!h.test(e);return r||null!=t&&e in a(t)}function a(e){return c(e)?e:Object(e)}function s(e,t){return f(e,d(t))}function c(e){var t=typeof e;return!!e&&(\"object\"==t||\"function\"==t)}function d(e){return o(e)?r(e):i(e)}var u=e(\"lodash._baseget\"),p=e(\"lodash._topath\"),l=e(\"lodash.isarray\"),f=e(\"lodash.map\"),h=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,m=/^\\w*$/;t.exports=s},{\"lodash._baseget\":13,\"lodash._topath\":17,\"lodash.isarray\":20,\"lodash.map\":23}],26:[function(e,t,n){function r(e){if(this.support=i.webAudio&&i.mediaStream,this.gain=1,this.support){var t=this.context=new i.AudioContext;this.microphone=t.createMediaStreamSource(e),this.gainFilter=t.createGain(),this.destination=t.createMediaStreamDestination(),this.outputStream=this.destination.stream,this.microphone.connect(this.gainFilter),this.gainFilter.connect(this.destination),e.addTrack(this.outputStream.getAudioTracks()[0]),e.removeTrack(e.getAudioTracks()[0])}this.stream=e}var i=e(\"webrtcsupport\");r.prototype.setGain=function(e){this.support&&(this.gainFilter.gain.value=e,this.gain=e)},r.prototype.getGain=function(){return this.gain},r.prototype.off=function(){return this.setGain(0)},r.prototype.on=function(){this.setGain(1)},t.exports=r},{webrtcsupport:51}],27:[function(e,t,n){for(var r=\"assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,time,timeEnd,trace,warn\".split(\",\"),i=r.length,o=function(){},a={};i--;)a[r[i]]=o;t.exports=a},{}],28:[function(e,t,n){function r(e,t){var n,r=this;c.call(this),e=e||{},e.iceServers=e.iceServers||[],this.enableChromeNativeSimulcast=!1,t&&t.optional&&\"chrome\"===u.webrtcDetectedBrowser&&null===navigator.appVersion.match(/Chromium\\//)&&t.optional.forEach(function(e){e.enableChromeNativeSimulcast&&(r.enableChromeNativeSimulcast=!0)}),this.enableMultiStreamHacks=!1,t&&t.optional&&\"chrome\"===u.webrtcDetectedBrowser&&t.optional.forEach(function(e){e.enableMultiStreamHacks&&(r.enableMultiStreamHacks=!0)}),this.restrictBandwidth=0,t&&t.optional&&t.optional.forEach(function(e){e.andyetRestrictBandwidth&&(r.restrictBandwidth=e.andyetRestrictBandwidth)}),this.batchIceCandidates=0,t&&t.optional&&t.optional.forEach(function(e){e.andyetBatchIce&&(r.batchIceCandidates=e.andyetBatchIce)}),this.batchedIceCandidates=[],t&&t.optional&&\"chrome\"===u.webrtcDetectedBrowser&&t.optional.forEach(function(e){e.andyetFasterICE&&(r.eliminateDuplicateCandidates=e.andyetFasterICE)}),t&&t.optional&&t.optional.forEach(function(e){e.andyetDontSignalCandidates&&(r.dontSignalCandidates=e.andyetDontSignalCandidates)}),this.assumeSetLocalSuccess=!1,t&&t.optional&&t.optional.forEach(function(e){e.andyetAssumeSetLocalSuccess&&(r.assumeSetLocalSuccess=e.andyetAssumeSetLocalSuccess)}),\"firefox\"===u.webrtcDetectedBrowser&&t&&t.optional&&(this.wtFirefox=0,t.optional.forEach(function(e){e.andyetFirefoxMakesMeSad&&(r.wtFirefox=e.andyetFirefoxMakesMeSad,r.wtFirefox>0&&(r.firefoxcandidatebuffer=[]))})),this.pc=new d(e,t),this.getLocalStreams=this.pc.getLocalStreams.bind(this.pc),this.getRemoteStreams=this.pc.getRemoteStreams.bind(this.pc),this.addStream=this.pc.addStream.bind(this.pc),this.removeStream=this.pc.removeStream.bind(this.pc),this.pc.on(\"*\",function(){r.emit.apply(r,arguments)}),this.pc.onremovestream=this.emit.bind(this,\"removeStream\"),this.pc.onaddstream=this.emit.bind(this,\"addStream\"),this.pc.onnegotiationneeded=this.emit.bind(this,\"negotiationNeeded\"),this.pc.oniceconnectionstatechange=this.emit.bind(this,\"iceConnectionStateChange\"),this.pc.onsignalingstatechange=this.emit.bind(this,\"signalingStateChange\"),this.pc.onicecandidate=this._onIce.bind(this),this.pc.ondatachannel=this._onDataChannel.bind(this),this.localDescription={contents:[]},this.remoteDescription={contents:[]},this.config={debug:!1,ice:{},sid:\"\",isInitiator:!0,sdpSessionID:Date.now(),useJingle:!1};for(n in e)this.config[n]=e[n];this.config.debug&&this.on(\"*\",function(){var t=e.logger||console;t.log(\"PeerConnection event:\",arguments)}),this.hadLocalStunCandidate=!1,this.hadRemoteStunCandidate=!1,this.hadLocalRelayCandidate=!1,this.hadRemoteRelayCandidate=!1,this.hadLocalIPv6Candidate=!1,this.hadRemoteIPv6Candidate=!1,this._remoteDataChannels=[],this._localDataChannels=[],this._candidateBuffer=[]}var i=e(\"util\"),o=e(\"lodash.foreach\"),a=e(\"lodash.pluck\"),s=e(\"sdp-jingle-json\"),c=e(\"wildemitter\"),d=e(\"traceablepeerconnection\"),u=e(\"webrtc-adapter-test\");i.inherits(r,c),Object.defineProperty(r.prototype,\"signalingState\",{get:function(){return this.pc.signalingState}}),Object.defineProperty(r.prototype,\"iceConnectionState\",{get:function(){return this.pc.iceConnectionState}}),r.prototype._role=function(){return this.isInitiator?\"initiator\":\"responder\"},r.prototype.addStream=function(e){this.localStream=e,this.pc.addStream(e)},r.prototype._checkLocalCandidate=function(e){var t=s.toCandidateJSON(e);\"srflx\"==t.type?this.hadLocalStunCandidate=!0:\"relay\"==t.type&&(this.hadLocalRelayCandidate=!0),t.ip.indexOf(\":\")!=-1&&(this.hadLocalIPv6Candidate=!0)},r.prototype._checkRemoteCandidate=function(e){var t=s.toCandidateJSON(e);\"srflx\"==t.type?this.hadRemoteStunCandidate=!0:\"relay\"==t.type&&(this.hadRemoteRelayCandidate=!0),t.ip.indexOf(\":\")!=-1&&(this.hadRemoteIPv6Candidate=!0)},r.prototype.processIce=function(e,t){t=t||function(){};var n=this;if(\"closed\"===this.pc.signalingState)return t();if(e.contents||e.jingle&&e.jingle.contents){var r=a(this.remoteDescription.contents,\"name\"),i=e.contents||e.jingle.contents;i.forEach(function(e){var t=e.transport||{},i=t.candidates||[],o=r.indexOf(e.name),a=e.name;i.forEach(function(e){var t=s.toCandidateSDP(e)+\"\\r\\n\";n.pc.addIceCandidate(new RTCIceCandidate({candidate:t,sdpMLineIndex:o,sdpMid:a}),function(){},function(e){n.emit(\"error\",e)}),n._checkRemoteCandidate(t)})})}else{if(e.candidate&&0!==e.candidate.candidate.indexOf(\"a=\")&&(e.candidate.candidate=\"a=\"+e.candidate.candidate),\nthis.wtFirefox&&null!==this.firefoxcandidatebuffer&&this.pc.localDescription&&\"offer\"===this.pc.localDescription.type)return this.firefoxcandidatebuffer.push(e.candidate),t();n.pc.addIceCandidate(new RTCIceCandidate(e.candidate),function(){},function(e){n.emit(\"error\",e)}),n._checkRemoteCandidate(e.candidate.candidate)}t()},r.prototype.offer=function(e,t){var n=this,r=2===arguments.length,i=r&&e?e:{mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}};return t=r?t:e,t=t||function(){},\"closed\"===this.pc.signalingState?t(\"Already closed\"):void this.pc.createOffer(function(e){var r={type:\"offer\",sdp:e.sdp};n.assumeSetLocalSuccess&&(n.emit(\"offer\",r),t(null,r)),n._candidateBuffer=[],n.pc.setLocalDescription(e,function(){var i;n.config.useJingle&&(i=s.toSessionJSON(e.sdp,{role:n._role(),direction:\"outgoing\"}),i.sid=n.config.sid,n.localDescription=i,o(i.contents,function(e){var t=e.transport||{};t.ufrag&&(n.config.ice[e.name]={ufrag:t.ufrag,pwd:t.pwd})}),r.jingle=i),r.sdp.split(\"\\r\\n\").forEach(function(e){0===e.indexOf(\"a=candidate:\")&&n._checkLocalCandidate(e)}),n.assumeSetLocalSuccess||(n.emit(\"offer\",r),t(null,r))},function(e){n.emit(\"error\",e),t(e)})},function(e){n.emit(\"error\",e),t(e)},i)},r.prototype.handleOffer=function(e,t){t=t||function(){};var n=this;if(e.type=\"offer\",e.jingle){if(this.enableChromeNativeSimulcast&&e.jingle.contents.forEach(function(e){\"video\"===e.name&&(e.description.googConferenceFlag=!0)}),this.enableMultiStreamHacks&&e.jingle.contents.forEach(function(e){if(\"video\"===e.name){var t=e.description.sources||[];0!==t.length&&\"3735928559\"===t[0].ssrc||(t.unshift({ssrc:\"3735928559\",parameters:[{key:\"cname\",value:\"deadbeef\"},{key:\"msid\",value:\"mixyourfecintothis please\"}]}),e.description.sources=t)}}),n.restrictBandwidth>0&&e.jingle.contents.length>=2&&\"video\"===e.jingle.contents[1].name){var r=e.jingle.contents[1],i=r.description&&r.description.bandwidth;i||(e.jingle.contents[1].description.bandwidth={type:\"AS\",bandwidth:n.restrictBandwidth.toString()},e.sdp=s.toSessionSDP(e.jingle,{sid:n.config.sdpSessionID,role:n._role(),direction:\"outgoing\"}))}e.sdp=s.toSessionSDP(e.jingle,{sid:n.config.sdpSessionID,role:n._role(),direction:\"incoming\"}),n.remoteDescription=e.jingle}e.sdp.split(\"\\r\\n\").forEach(function(e){0===e.indexOf(\"a=candidate:\")&&n._checkRemoteCandidate(e)}),n.pc.setRemoteDescription(new RTCSessionDescription(e),function(){t()},t)},r.prototype.answerAudioOnly=function(e){var t={mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!1}};this._answer(t,e)},r.prototype.answerBroadcastOnly=function(e){var t={mandatory:{OfferToReceiveAudio:!1,OfferToReceiveVideo:!1}};this._answer(t,e)},r.prototype.answer=function(e,t){var n=2===arguments.length,r=n?t:e,i=n&&e?e:{mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}};this._answer(i,r)},r.prototype.handleAnswer=function(e,t){t=t||function(){};var n=this;e.jingle&&(e.sdp=s.toSessionSDP(e.jingle,{sid:n.config.sdpSessionID,role:n._role(),direction:\"incoming\"}),n.remoteDescription=e.jingle),e.sdp.split(\"\\r\\n\").forEach(function(e){0===e.indexOf(\"a=candidate:\")&&n._checkRemoteCandidate(e)}),n.pc.setRemoteDescription(new RTCSessionDescription(e),function(){n.wtFirefox&&window.setTimeout(function(){n.firefoxcandidatebuffer.forEach(function(e){n.pc.addIceCandidate(new RTCIceCandidate(e),function(){},function(e){n.emit(\"error\",e)}),n._checkRemoteCandidate(e.candidate)}),n.firefoxcandidatebuffer=null},n.wtFirefox),t(null)},t)},r.prototype.close=function(){this.pc.close(),this._localDataChannels=[],this._remoteDataChannels=[],this.emit(\"close\")},r.prototype._answer=function(e,t){t=t||function(){};var n=this;if(!this.pc.remoteDescription)throw new Error(\"remoteDescription not set\");return\"closed\"===this.pc.signalingState?t(\"Already closed\"):void n.pc.createAnswer(function(e){var r=[];if(n.enableChromeNativeSimulcast&&(e.jingle=s.toSessionJSON(e.sdp,{role:n._role(),direction:\"outgoing\"}),e.jingle.contents.length>=2&&\"video\"===e.jingle.contents[1].name)){var i=e.jingle.contents[1].description.sourceGroups||[],o=!1;if(i.forEach(function(e){\"SIM\"==e.semantics&&(o=!0)}),!o&&e.jingle.contents[1].description.sources.length){var a=JSON.parse(JSON.stringify(e.jingle.contents[1].description.sources[0]));a.ssrc=\"\"+Math.floor(4294967295*Math.random()),e.jingle.contents[1].description.sources.push(a),r.push(e.jingle.contents[1].description.sources[0].ssrc),r.push(a.ssrc),i.push({semantics:\"SIM\",sources:r});var c=JSON.parse(JSON.stringify(a));c.ssrc=\"\"+Math.floor(4294967295*Math.random()),e.jingle.contents[1].description.sources.push(c),i.push({semantics:\"FID\",sources:[a.ssrc,c.ssrc]}),e.jingle.contents[1].description.sourceGroups=i,e.sdp=s.toSessionSDP(e.jingle,{sid:n.config.sdpSessionID,role:n._role(),direction:\"outgoing\"})}}var d={type:\"answer\",sdp:e.sdp};n.assumeSetLocalSuccess&&(n.emit(\"answer\",d),t(null,d)),n._candidateBuffer=[],n.pc.setLocalDescription(e,function(){if(n.config.useJingle){var r=s.toSessionJSON(e.sdp,{role:n._role(),direction:\"outgoing\"});r.sid=n.config.sid,n.localDescription=r,d.jingle=r}n.enableChromeNativeSimulcast&&(d.jingle||(d.jingle=s.toSessionJSON(e.sdp,{role:n._role(),direction:\"outgoing\"})),d.jingle.contents[1].description.sources.forEach(function(e,t){e.parameters=e.parameters.map(function(e){return\"msid\"===e.key&&(e.value+=\"-\"+Math.floor(t/2)),e})}),d.sdp=s.toSessionSDP(d.jingle,{sid:n.sdpSessionID,role:n._role(),direction:\"outgoing\"})),d.sdp.split(\"\\r\\n\").forEach(function(e){0===e.indexOf(\"a=candidate:\")&&n._checkLocalCandidate(e)}),n.assumeSetLocalSuccess||(n.emit(\"answer\",d),t(null,d))},function(e){n.emit(\"error\",e),t(e)})},function(e){n.emit(\"error\",e),t(e)},e)},r.prototype._onIce=function(e){var t=this;if(e.candidate){if(this.dontSignalCandidates)return;var n=e.candidate,r={candidate:{candidate:n.candidate,sdpMid:n.sdpMid,sdpMLineIndex:n.sdpMLineIndex}};this._checkLocalCandidate(n.candidate);var i,a,c=s.toCandidateJSON(n.candidate);if(this.eliminateDuplicateCandidates&&\"relay\"===c.type&&(i=this._candidateBuffer.filter(function(e){return\"relay\"===e.type}).map(function(e){return e.foundation+\":\"+e.component}),a=i.indexOf(c.foundation+\":\"+c.component),a>-1&&c.priority>>24>=i[a].priority>>24))return;if(\"max-bundle\"===this.config.bundlePolicy&&(i=this._candidateBuffer.filter(function(e){return c.type===e.type}).map(function(e){return e.address+\":\"+e.port}),a=i.indexOf(c.address+\":\"+c.port),a>-1))return;if(\"require\"===this.config.rtcpMuxPolicy&&\"2\"===c.component)return;if(this._candidateBuffer.push(c),t.config.useJingle){if(n.sdpMid||(t.pc.remoteDescription&&\"offer\"===t.pc.remoteDescription.type?n.sdpMid=t.remoteDescription.contents[n.sdpMLineIndex].name:n.sdpMid=t.localDescription.contents[n.sdpMLineIndex].name),!t.config.ice[n.sdpMid]){var d=s.toSessionJSON(t.pc.localDescription.sdp,{role:t._role(),direction:\"outgoing\"});o(d.contents,function(e){var n=e.transport||{};n.ufrag&&(t.config.ice[e.name]={ufrag:n.ufrag,pwd:n.pwd})})}if(r.jingle={contents:[{name:n.sdpMid,creator:t._role(),transport:{transType:\"iceUdp\",ufrag:t.config.ice[n.sdpMid].ufrag,pwd:t.config.ice[n.sdpMid].pwd,candidates:[c]}}]},t.batchIceCandidates>0)return 0===t.batchedIceCandidates.length&&window.setTimeout(function(){var e={};t.batchedIceCandidates.forEach(function(t){t=t.contents[0],e[t.name]||(e[t.name]=t),e[t.name].transport.candidates.push(t.transport.candidates[0])});var n={jingle:{contents:[]}};Object.keys(e).forEach(function(t){n.jingle.contents.push(e[t])}),t.batchedIceCandidates=[],t.emit(\"ice\",n)},t.batchIceCandidates),void t.batchedIceCandidates.push(r.jingle)}this.emit(\"ice\",r)}else this.emit(\"endOfCandidates\")},r.prototype._onDataChannel=function(e){var t=e.channel;this._remoteDataChannels.push(t),this.emit(\"addChannel\",t)},r.prototype.createDataChannel=function(e,t){var n=this.pc.createDataChannel(e,t);return this._localDataChannels.push(n),n},r.prototype.getStats=function(e){\"firefox\"===u.webrtcDetectedBrowser?this.pc.getStats(function(t){var n=[];for(var r in t)\"object\"==typeof t[r]&&n.push(t[r]);e(null,n)},e):this.pc.getStats(function(t){var n=[];t.result().forEach(function(e){var t={};e.names().forEach(function(n){t[n]=e.stat(n)}),t.id=e.id,t.type=e.type,t.timestamp=e.timestamp,n.push(t)}),e(null,n)})},t.exports=r},{\"lodash.foreach\":18,\"lodash.pluck\":25,\"sdp-jingle-json\":29,traceablepeerconnection:40,util:57,\"webrtc-adapter-test\":41,wildemitter:52}],29:[function(e,t,n){var r=e(\"./lib/tosdp\"),i=e(\"./lib/tojson\");n.toIncomingSDPOffer=function(e){return r.toSessionSDP(e,{role:\"responder\",direction:\"incoming\"})},n.toOutgoingSDPOffer=function(e){return r.toSessionSDP(e,{role:\"initiator\",direction:\"outgoing\"})},n.toIncomingSDPAnswer=function(e){return r.toSessionSDP(e,{role:\"initiator\",direction:\"incoming\"})},n.toOutgoingSDPAnswer=function(e){return r.toSessionSDP(e,{role:\"responder\",direction:\"outgoing\"})},n.toIncomingMediaSDPOffer=function(e){return r.toMediaSDP(e,{role:\"responder\",direction:\"incoming\"})},n.toOutgoingMediaSDPOffer=function(e){return r.toMediaSDP(e,{role:\"initiator\",direction:\"outgoing\"})},n.toIncomingMediaSDPAnswer=function(e){return r.toMediaSDP(e,{role:\"initiator\",direction:\"incoming\"})},n.toOutgoingMediaSDPAnswer=function(e){return r.toMediaSDP(e,{role:\"responder\",direction:\"outgoing\"})},n.toCandidateSDP=r.toCandidateSDP,n.toMediaSDP=r.toMediaSDP,n.toSessionSDP=r.toSessionSDP,n.toIncomingJSONOffer=function(e,t){return i.toSessionJSON(e,{role:\"responder\",direction:\"incoming\",creators:t})},n.toOutgoingJSONOffer=function(e,t){return i.toSessionJSON(e,{role:\"initiator\",direction:\"outgoing\",creators:t})},n.toIncomingJSONAnswer=function(e,t){return i.toSessionJSON(e,{role:\"initiator\",direction:\"incoming\",creators:t})},n.toOutgoingJSONAnswer=function(e,t){return i.toSessionJSON(e,{role:\"responder\",direction:\"outgoing\",creators:t})},n.toIncomingMediaJSONOffer=function(e,t){return i.toMediaJSON(e,{role:\"responder\",direction:\"incoming\",creator:t})},n.toOutgoingMediaJSONOffer=function(e,t){return i.toMediaJSON(e,{role:\"initiator\",direction:\"outgoing\",creator:t})},n.toIncomingMediaJSONAnswer=function(e,t){return i.toMediaJSON(e,{role:\"initiator\",direction:\"incoming\",creator:t})},n.toOutgoingMediaJSONAnswer=function(e,t){return i.toMediaJSON(e,{role:\"responder\",direction:\"outgoing\",creator:t})},n.toCandidateJSON=i.toCandidateJSON,n.toMediaJSON=i.toMediaJSON,n.toSessionJSON=i.toSessionJSON},{\"./lib/tojson\":32,\"./lib/tosdp\":33}],30:[function(e,t,n){n.lines=function(e){return e.split(\"\\r\\n\").filter(function(e){return e.length>0})},n.findLine=function(e,t,n){for(var r=e.length,i=0;i<t.length;i++)if(t[i].substr(0,r)===e)return t[i];if(!n)return!1;for(var o=0;o<n.length;o++)if(n[o].substr(0,r)===e)return n[o];return!1},n.findLines=function(e,t,n){for(var r=[],i=e.length,o=0;o<t.length;o++)t[o].substr(0,i)===e&&r.push(t[o]);if(r.length||!n)return r;for(var a=0;a<n.length;a++)n[a].substr(0,i)===e&&r.push(n[a]);return r},n.mline=function(e){for(var t=e.substr(2).split(\" \"),n={media:t[0],port:t[1],proto:t[2],formats:[]},r=3;r<t.length;r++)t[r]&&n.formats.push(t[r]);return n},n.rtpmap=function(e){var t=e.substr(9).split(\" \"),n={id:t.shift()};return t=t[0].split(\"/\"),n.name=t[0],n.clockrate=t[1],n.channels=3==t.length?t[2]:\"1\",n},n.sctpmap=function(e){var t=e.substr(10).split(\" \"),n={number:t.shift(),protocol:t.shift(),streams:t.shift()};return n},n.fmtp=function(e){for(var t,n,r,i=e.substr(e.indexOf(\" \")+1).split(\";\"),o=[],a=0;a<i.length;a++)t=i[a].split(\"=\"),n=t[0].trim(),r=t[1],n&&r?o.push({key:n,value:r}):n&&o.push({key:\"\",value:n});return o},n.crypto=function(e){var t=e.substr(9).split(\" \"),n={tag:t[0],cipherSuite:t[1],keyParams:t[2],sessionParams:t.slice(3).join(\" \")};return n},n.fingerprint=function(e){var t=e.substr(14).split(\" \");return{hash:t[0],value:t[1]}},n.extmap=function(e){var t=e.substr(9).split(\" \"),n={},r=t.shift(),i=r.indexOf(\"/\");return i>=0?(n.id=r.substr(0,i),n.senders=r.substr(i+1)):(n.id=r,n.senders=\"sendrecv\"),n.uri=t.shift()||\"\",n},n.rtcpfb=function(e){var t=e.substr(10).split(\" \"),n={};return n.id=t.shift(),n.type=t.shift(),\"trr-int\"===n.type?n.value=t.shift():n.subtype=t.shift()||\"\",n.parameters=t,n},n.candidate=function(e){var t;t=0===e.indexOf(\"a=candidate:\")?e.substring(12).split(\" \"):e.substring(10).split(\" \");for(var n={foundation:t[0],component:t[1],protocol:t[2].toLowerCase(),priority:t[3],ip:t[4],port:t[5],type:t[7],generation:\"0\"},r=8;r<t.length;r+=2)\"raddr\"===t[r]?n.relAddr=t[r+1]:\"rport\"===t[r]?n.relPort=t[r+1]:\"generation\"===t[r]?n.generation=t[r+1]:\"tcptype\"===t[r]&&(n.tcpType=t[r+1]);return n.network=\"1\",n},n.sourceGroups=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n].substr(13).split(\" \");t.push({semantics:r.shift(),sources:r})}return t},n.sources=function(e){for(var t=[],n={},r=0;r<e.length;r++){var i=e[r].substr(7).split(\" \"),o=i.shift();if(!n[o]){var a={ssrc:o,parameters:[]};t.push(a),n[o]=a}i=i.join(\" \").split(\":\");var s=i.shift(),c=i.join(\":\")||null;n[o].parameters.push({key:s,value:c})}return t},n.groups=function(e){for(var t,n=[],r=0;r<e.length;r++)t=e[r].substr(8).split(\" \"),n.push({semantics:t.shift(),contents:t});return n},n.bandwidth=function(e){var t=e.substr(2).split(\":\"),n={};return n.type=t.shift(),n.bandwidth=t.shift(),n},n.msid=function(e){var t=e.substr(7),n=t.split(\" \");return{msid:t,mslabel:n[0],label:n[1]}}},{}],31:[function(e,t,n){t.exports={initiator:{incoming:{initiator:\"recvonly\",responder:\"sendonly\",both:\"sendrecv\",none:\"inactive\",recvonly:\"initiator\",sendonly:\"responder\",sendrecv:\"both\",inactive:\"none\"},outgoing:{initiator:\"sendonly\",responder:\"recvonly\",both:\"sendrecv\",none:\"inactive\",recvonly:\"responder\",sendonly:\"initiator\",sendrecv:\"both\",inactive:\"none\"}},responder:{incoming:{initiator:\"sendonly\",responder:\"recvonly\",both:\"sendrecv\",none:\"inactive\",recvonly:\"responder\",sendonly:\"initiator\",sendrecv:\"both\",inactive:\"none\"},outgoing:{initiator:\"recvonly\",responder:\"sendonly\",both:\"sendrecv\",none:\"inactive\",recvonly:\"initiator\",sendonly:\"responder\",sendrecv:\"both\",inactive:\"none\"}}}},{}],32:[function(e,t,n){var r=e(\"./senders\"),i=e(\"./parsers\"),o=Math.random();n._setIdCounter=function(e){o=e},n.toSessionJSON=function(e,t){var r,o=t.creators||[],a=t.role||\"initiator\",s=t.direction||\"outgoing\",c=e.split(\"\\r\\nm=\");for(r=1;r<c.length;r++)c[r]=\"m=\"+c[r],r!==c.length-1&&(c[r]+=\"\\r\\n\");var d=c.shift()+\"\\r\\n\",u=i.lines(d),p={},l=[];for(r=0;r<c.length;r++)l.push(n.toMediaJSON(c[r],d,{role:a,direction:s,creator:o[r]||\"initiator\"}));p.contents=l;var f=i.findLines(\"a=group:\",u);return f.length&&(p.groups=i.groups(f)),p},n.toMediaJSON=function(e,t,o){var a=o.creator||\"initiator\",s=o.role||\"initiator\",c=o.direction||\"outgoing\",d=i.lines(e),u=i.lines(t),p=i.mline(d[0]),l={creator:a,name:p.media,description:{descType:\"rtp\",media:p.media,payloads:[],encryption:[],feedback:[],headerExtensions:[]},transport:{transType:\"iceUdp\",candidates:[],fingerprints:[]}};\"application\"==p.media&&(l.description={descType:\"datachannel\"},l.transport.sctp=[]);var f=l.description,h=l.transport,m=i.findLine(\"a=mid:\",d);if(m&&(l.name=m.substr(6)),i.findLine(\"a=sendrecv\",d,u)?l.senders=\"both\":i.findLine(\"a=sendonly\",d,u)?l.senders=r[s][c].sendonly:i.findLine(\"a=recvonly\",d,u)?l.senders=r[s][c].recvonly:i.findLine(\"a=inactive\",d,u)&&(l.senders=\"none\"),\"rtp\"==f.descType){var v=i.findLine(\"b=\",d);v&&(f.bandwidth=i.bandwidth(v));var g=i.findLine(\"a=ssrc:\",d);g&&(f.ssrc=g.substr(7).split(\" \")[0]);var y=i.findLines(\"a=rtpmap:\",d);y.forEach(function(e){var t=i.rtpmap(e);t.parameters=[],t.feedback=[];var n=i.findLines(\"a=fmtp:\"+t.id,d);n.forEach(function(e){t.parameters=i.fmtp(e)});var r=i.findLines(\"a=rtcp-fb:\"+t.id,d);r.forEach(function(e){t.feedback.push(i.rtcpfb(e))}),f.payloads.push(t)});var w=i.findLines(\"a=crypto:\",d,u);w.forEach(function(e){f.encryption.push(i.crypto(e))}),i.findLine(\"a=rtcp-mux\",d)&&(f.mux=!0);var b=i.findLines(\"a=rtcp-fb:*\",d);b.forEach(function(e){f.feedback.push(i.rtcpfb(e))});var S=i.findLines(\"a=extmap:\",d);S.forEach(function(e){var t=i.extmap(e);t.senders=r[s][c][t.senders],f.headerExtensions.push(t)});var C=i.findLines(\"a=ssrc-group:\",d);f.sourceGroups=i.sourceGroups(C||[]);var k=i.findLines(\"a=ssrc:\",d),T=f.sources=i.sources(k||[]),E=i.findLine(\"a=msid:\",d);if(E){var O=i.msid(E);[\"msid\",\"mslabel\",\"label\"].forEach(function(e){for(var t=0;t<T.length;t++){for(var n=!1,r=0;r<T[t].parameters.length;r++)T[t].parameters[r].key===e&&(n=!0);n||T[t].parameters.push({key:e,value:O[e]})}})}i.findLine(\"a=x-google-flag:conference\",d,u)&&(f.googConferenceFlag=!0)}var R=i.findLines(\"a=fingerprint:\",d,u),P=i.findLine(\"a=setup:\",d,u);R.forEach(function(e){var t=i.fingerprint(e);P&&(t.setup=P.substr(8)),h.fingerprints.push(t)});var x=i.findLine(\"a=ice-ufrag:\",d,u),D=i.findLine(\"a=ice-pwd:\",d,u);if(x&&D){h.ufrag=x.substr(12),h.pwd=D.substr(10),h.candidates=[];var _=i.findLines(\"a=candidate:\",d,u);_.forEach(function(e){h.candidates.push(n.toCandidateJSON(e))})}if(\"datachannel\"==f.descType){var j=i.findLines(\"a=sctpmap:\",d);j.forEach(function(e){var t=i.sctpmap(e);h.sctp.push(t)})}return l},n.toCandidateJSON=function(e){var t=i.candidate(e.split(\"\\r\\n\")[0]);return t.id=(o++).toString(36).substr(0,12),t}},{\"./parsers\":30,\"./senders\":31}],33:[function(e,t,n){var r=e(\"./senders\");n.toSessionSDP=function(e,t){var r=(t.role||\"initiator\",t.direction||\"outgoing\",t.sid||e.sid||Date.now()),i=t.time||Date.now(),o=[\"v=0\",\"o=- \"+r+\" \"+i+\" IN IP4 0.0.0.0\",\"s=-\",\"t=0 0\"],a=e.contents||[],s=!1;a.forEach(function(e){e.description.sources&&e.description.sources.length&&(s=!0)}),s&&o.push(\"a=msid-semantic: WMS *\");var c=e.groups||[];return c.forEach(function(e){o.push(\"a=group:\"+e.semantics+\" \"+e.contents.join(\" \"))}),a.forEach(function(e){o.push(n.toMediaSDP(e,t))}),o.join(\"\\r\\n\")+\"\\r\\n\"},n.toMediaSDP=function(e,t){var i=[],o=t.role||\"initiator\",a=t.direction||\"outgoing\",s=e.description,c=e.transport,d=s.payloads||[],u=c&&c.fingerprints||[],p=[];if(\"datachannel\"==s.descType?(p.push(\"application\"),p.push(\"1\"),p.push(\"DTLS/SCTP\"),c.sctp&&c.sctp.forEach(function(e){p.push(e.number)})):(p.push(s.media),p.push(\"1\"),u.length>0?p.push(\"UDP/TLS/RTP/SAVPF\"):s.encryption&&s.encryption.length>0?p.push(\"RTP/SAVPF\"):p.push(\"RTP/AVPF\"),d.forEach(function(e){p.push(e.id)})),i.push(\"m=\"+p.join(\" \")),i.push(\"c=IN IP4 0.0.0.0\"),s.bandwidth&&s.bandwidth.type&&s.bandwidth.bandwidth&&i.push(\"b=\"+s.bandwidth.type+\":\"+s.bandwidth.bandwidth),\"rtp\"==s.descType&&i.push(\"a=rtcp:1 IN IP4 0.0.0.0\"),c){c.ufrag&&i.push(\"a=ice-ufrag:\"+c.ufrag),c.pwd&&i.push(\"a=ice-pwd:\"+c.pwd);var l=!1;u.forEach(function(e){i.push(\"a=fingerprint:\"+e.hash+\" \"+e.value),e.setup&&!l&&i.push(\"a=setup:\"+e.setup)}),c.sctp&&c.sctp.forEach(function(e){i.push(\"a=sctpmap:\"+e.number+\" \"+e.protocol+\" \"+e.streams)})}\"rtp\"==s.descType&&i.push(\"a=\"+(r[o][a][e.senders]||\"sendrecv\")),i.push(\"a=mid:\"+e.name),s.sources&&s.sources.length&&(s.sources[0].parameters||[]).forEach(function(e){\"msid\"===e.key&&i.push(\"a=msid:\"+e.value)}),s.mux&&i.push(\"a=rtcp-mux\");var f=s.encryption||[];f.forEach(function(e){i.push(\"a=crypto:\"+e.tag+\" \"+e.cipherSuite+\" \"+e.keyParams+(e.sessionParams?\" \"+e.sessionParams:\"\"))}),s.googConferenceFlag&&i.push(\"a=x-google-flag:conference\"),d.forEach(function(e){var t=\"a=rtpmap:\"+e.id+\" \"+e.name+\"/\"+e.clockrate;if(e.channels&&\"1\"!=e.channels&&(t+=\"/\"+e.channels),i.push(t),e.parameters&&e.parameters.length){var n=[\"a=fmtp:\"+e.id],r=[];e.parameters.forEach(function(e){r.push((e.key?e.key+\"=\":\"\")+e.value)}),n.push(r.join(\";\")),i.push(n.join(\" \"))}e.feedback&&e.feedback.forEach(function(t){\"trr-int\"===t.type?i.push(\"a=rtcp-fb:\"+e.id+\" trr-int \"+(t.value?t.value:\"0\")):i.push(\"a=rtcp-fb:\"+e.id+\" \"+t.type+(t.subtype?\" \"+t.subtype:\"\"))})}),s.feedback&&s.feedback.forEach(function(e){\"trr-int\"===e.type?i.push(\"a=rtcp-fb:* trr-int \"+(e.value?e.value:\"0\")):i.push(\"a=rtcp-fb:* \"+e.type+(e.subtype?\" \"+e.subtype:\"\"))});var h=s.headerExtensions||[];h.forEach(function(e){i.push(\"a=extmap:\"+e.id+(e.senders?\"/\"+r[o][a][e.senders]:\"\")+\" \"+e.uri)});var m=s.sourceGroups||[];m.forEach(function(e){i.push(\"a=ssrc-group:\"+e.semantics+\" \"+e.sources.join(\" \"))});var v=s.sources||[];v.forEach(function(e){for(var t=0;t<e.parameters.length;t++){var n=e.parameters[t];i.push(\"a=ssrc:\"+(e.ssrc||s.ssrc)+\" \"+n.key+(n.value?\":\"+n.value:\"\"))}});var g=c.candidates||[];return g.forEach(function(e){i.push(n.toCandidateSDP(e))}),i.join(\"\\r\\n\")},n.toCandidateSDP=function(e){var t=[];t.push(e.foundation),t.push(e.component),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.ip),t.push(e.port);var n=e.type;return t.push(\"typ\"),t.push(n),\"srflx\"!==n&&\"prflx\"!==n&&\"relay\"!==n||e.relAddr&&e.relPort&&(t.push(\"raddr\"),t.push(e.relAddr),t.push(\"rport\"),t.push(e.relPort)),e.tcpType&&\"TCP\"==e.protocol.toUpperCase()&&(t.push(\"tcptype\"),t.push(e.tcpType)),t.push(\"generation\"),t.push(e.generation||\"0\"),\"a=candidate:\"+t.join(\" \")}},{\"./senders\":31}],34:[function(e,t,n){\"use strict\";var r={};r.generateIdentifier=function(){return Math.random().toString(36).substr(2,10)},r.localCName=r.generateIdentifier(),r.splitLines=function(e){return e.trim().split(\"\\n\").map(function(e){return e.trim()})},r.splitSections=function(e){var t=e.split(\"\\nm=\");return t.map(function(e,t){return(t>0?\"m=\"+e:e).trim()+\"\\r\\n\"})},r.matchPrefix=function(e,t){return r.splitLines(e).filter(function(e){return 0===e.indexOf(t)})},r.parseCandidate=function(e){var t;t=0===e.indexOf(\"a=candidate:\")?e.substring(12).split(\" \"):e.substring(10).split(\" \");for(var n={foundation:t[0],component:t[1],protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],port:parseInt(t[5],10),type:t[7]},r=8;r<t.length;r+=2)switch(t[r]){case\"raddr\":n.relatedAddress=t[r+1];break;case\"rport\":n.relatedPort=parseInt(t[r+1],10);break;case\"tcptype\":n.tcpType=t[r+1]}return n},r.writeCandidate=function(e){var t=[];t.push(e.foundation),t.push(e.component),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.ip),t.push(e.port);var n=e.type;return t.push(\"typ\"),t.push(n),\"host\"!==n&&e.relatedAddress&&e.relatedPort&&(t.push(\"raddr\"),t.push(e.relatedAddress),t.push(\"rport\"),t.push(e.relatedPort)),e.tcpType&&\"tcp\"===e.protocol.toLowerCase()&&(t.push(\"tcptype\"),t.push(e.tcpType)),\"candidate:\"+t.join(\" \")},r.parseRtpMap=function(e){var t=e.substr(9).split(\" \"),n={payloadType:parseInt(t.shift(),10)};return t=t[0].split(\"/\"),n.name=t[0],n.clockRate=parseInt(t[1],10),n.numChannels=3===t.length?parseInt(t[2],10):1,n},r.writeRtpMap=function(e){var t=e.payloadType;return void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType),\"a=rtpmap:\"+t+\" \"+e.name+\"/\"+e.clockRate+(1!==e.numChannels?\"/\"+e.numChannels:\"\")+\"\\r\\n\"},r.parseExtmap=function(e){var t=e.substr(9).split(\" \");return{id:parseInt(t[0],10),uri:t[1]}},r.writeExtmap=function(e){return\"a=extmap:\"+(e.id||e.preferredId)+\" \"+e.uri+\"\\r\\n\"},r.parseFmtp=function(e){for(var t,n={},r=e.substr(e.indexOf(\" \")+1).split(\";\"),i=0;i<r.length;i++)t=r[i].trim().split(\"=\"),n[t[0].trim()]=t[1];return n},r.writeFmtp=function(e){var t=\"\",n=e.payloadType;if(void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){var r=[];Object.keys(e.parameters).forEach(function(t){r.push(t+\"=\"+e.parameters[t])}),t+=\"a=fmtp:\"+n+\" \"+r.join(\";\")+\"\\r\\n\"}return t},r.parseRtcpFb=function(e){var t=e.substr(e.indexOf(\" \")+1).split(\" \");return{type:t.shift(),parameter:t.join(\" \")}},r.writeRtcpFb=function(e){var t=\"\",n=e.payloadType;return void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach(function(e){t+=\"a=rtcp-fb:\"+n+\" \"+e.type+(e.parameter&&e.parameter.length?\" \"+e.parameter:\"\")+\"\\r\\n\"}),t},r.parseSsrcMedia=function(e){var t=e.indexOf(\" \"),n={ssrc:parseInt(e.substr(7,t-7),10)},r=e.indexOf(\":\",t);return r>-1?(n.attribute=e.substr(t+1,r-t-1),n.value=e.substr(r+1)):n.attribute=e.substr(t+1),n},r.getDtlsParameters=function(e,t){var n=r.splitLines(e);n=n.concat(r.splitLines(t));var i=n.filter(function(e){return 0===e.indexOf(\"a=fingerprint:\")})[0].substr(14),o={role:\"auto\",fingerprints:[{algorithm:i.split(\" \")[0],value:i.split(\" \")[1]}]};return o},r.writeDtlsParameters=function(e,t){var n=\"a=setup:\"+t+\"\\r\\n\";return e.fingerprints.forEach(function(e){n+=\"a=fingerprint:\"+e.algorithm+\" \"+e.value+\"\\r\\n\"}),n},r.getIceParameters=function(e,t){var n=r.splitLines(e);n=n.concat(r.splitLines(t));var i={usernameFragment:n.filter(function(e){return 0===e.indexOf(\"a=ice-ufrag:\")})[0].substr(12),password:n.filter(function(e){return 0===e.indexOf(\"a=ice-pwd:\")})[0].substr(10)};return i},r.writeIceParameters=function(e){return\"a=ice-ufrag:\"+e.usernameFragment+\"\\r\\na=ice-pwd:\"+e.password+\"\\r\\n\"},r.parseRtpParameters=function(e){for(var t={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},n=r.splitLines(e),i=n[0].split(\" \"),o=3;o<i.length;o++){var a=i[o],s=r.matchPrefix(e,\"a=rtpmap:\"+a+\" \")[0];if(s){var c=r.parseRtpMap(s),d=r.matchPrefix(e,\"a=fmtp:\"+a+\" \");switch(c.parameters=d.length?r.parseFmtp(d[0]):{},c.rtcpFeedback=r.matchPrefix(e,\"a=rtcp-fb:\"+a+\" \").map(r.parseRtcpFb),t.codecs.push(c),c.name.toUpperCase()){case\"RED\":case\"ULPFEC\":t.fecMechanisms.push(c.name.toUpperCase())}}}return r.matchPrefix(e,\"a=extmap:\").forEach(function(e){t.headerExtensions.push(r.parseExtmap(e))}),t},r.writeRtpDescription=function(e,t){var n=\"\";return n+=\"m=\"+e+\" \",n+=t.codecs.length>0?\"9\":\"0\",n+=\" UDP/TLS/RTP/SAVPF \",n+=t.codecs.map(function(e){return void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType}).join(\" \")+\"\\r\\n\",n+=\"c=IN IP4 0.0.0.0\\r\\n\",n+=\"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\",t.codecs.forEach(function(e){n+=r.writeRtpMap(e),n+=r.writeFmtp(e),n+=r.writeRtcpFb(e)}),n+=\"a=rtcp-mux\\r\\n\"},r.parseRtpEncodingParameters=function(e){var t,n=[],i=r.parseRtpParameters(e),o=i.fecMechanisms.indexOf(\"RED\")!==-1,a=i.fecMechanisms.indexOf(\"ULPFEC\")!==-1,s=r.matchPrefix(e,\"a=ssrc:\").map(function(e){return r.parseSsrcMedia(e)}).filter(function(e){return\"cname\"===e.attribute}),c=s.length>0&&s[0].ssrc,d=r.matchPrefix(e,\"a=ssrc-group:FID\").map(function(e){var t=e.split(\" \");return t.shift(),t.map(function(e){return parseInt(e,10)})});d.length>0&&d[0].length>1&&d[0][0]===c&&(t=d[0][1]),i.codecs.forEach(function(e){if(\"RTX\"===e.name.toUpperCase()&&e.parameters.apt){var r={ssrc:c,codecPayloadType:parseInt(e.parameters.apt,10),rtx:{payloadType:e.payloadType,ssrc:t}};n.push(r),o&&(r=JSON.parse(JSON.stringify(r)),r.fec={ssrc:t,mechanism:a?\"red+ulpfec\":\"red\"},n.push(r))}}),0===n.length&&c&&n.push({ssrc:c});var u=r.matchPrefix(e,\"b=\");return u.length&&(0===u[0].indexOf(\"b=TIAS:\")?u=parseInt(u[0].substr(7),10):0===u[0].indexOf(\"b=AS:\")&&(u=parseInt(u[0].substr(5),10)),n.forEach(function(e){e.maxBitrate=u})),n},r.writeSessionBoilerplate=function(){return\"v=0\\r\\no=thisisadapterortc 8169639915646943137 2 IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\"},r.writeMediaSection=function(e,t,n,i){var o=r.writeRtpDescription(e.kind,t);if(o+=r.writeIceParameters(e.iceGatherer.getLocalParameters()),o+=r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),\"offer\"===n?\"actpass\":\"active\"),o+=\"a=mid:\"+e.mid+\"\\r\\n\",o+=e.rtpSender&&e.rtpReceiver?\"a=sendrecv\\r\\n\":e.rtpSender?\"a=sendonly\\r\\n\":e.rtpReceiver?\"a=recvonly\\r\\n\":\"a=inactive\\r\\n\",e.rtpSender){var a=\"msid:\"+i.id+\" \"+e.rtpSender.track.id+\"\\r\\n\";o+=\"a=\"+a,o+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" \"+a}return o+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" cname:\"+r.localCName+\"\\r\\n\"},r.getDirection=function(e,t){for(var n=r.splitLines(e),i=0;i<n.length;i++)switch(n[i]){case\"a=sendrecv\":case\"a=sendonly\":case\"a=recvonly\":case\"a=inactive\":return n[i].substr(2)}return t?r.getDirection(t):\"sendrecv\"},t.exports=r},{}],35:[function(e,t,n){function r(e){var t=this;s.call(this),this.id=e.id,this.parent=e.parent,this.type=e.type||\"video\",this.oneway=e.oneway||!1,this.sharemyscreen=e.sharemyscreen||!1,this.browserPrefix=e.prefix,this.stream=e.stream,this.enableDataChannels=void 0===e.enableDataChannels?this.parent.config.enableDataChannels:e.enableDataChannels,this.receiveMedia=e.receiveMedia||this.parent.config.receiveMedia,this.channels={},this.sid=e.sid||Date.now().toString(),this.pc=new a(this.parent.config.peerConnectionConfig,this.parent.config.peerConnectionConstraints),this.pc.on(\"ice\",this.onIceCandidate.bind(this)),this.pc.on(\"offer\",function(e){t.parent.config.nick&&(e.nick=t.parent.config.nick),t.send(\"offer\",e)}),this.pc.on(\"answer\",function(e){t.parent.config.nick&&(e.nick=t.parent.config.nick),t.send(\"answer\",e)}),this.pc.on(\"addStream\",this.handleRemoteStreamAdded.bind(this)),this.pc.on(\"addChannel\",this.handleDataChannelAdded.bind(this)),this.pc.on(\"removeStream\",this.handleStreamRemoved.bind(this)),this.pc.on(\"negotiationNeeded\",this.emit.bind(this,\"negotiationNeeded\")),this.pc.on(\"iceConnectionStateChange\",this.emit.bind(this,\"iceConnectionStateChange\")),this.pc.on(\"iceConnectionStateChange\",function(){switch(t.pc.iceConnectionState){case\"failed\":\"offer\"===t.pc.pc.peerconnection.localDescription.type&&(t.parent.emit(\"iceFailed\",t),t.send(\"connectivityError\"))}}),this.pc.on(\"signalingStateChange\",this.emit.bind(this,\"signalingStateChange\")),this.logger=this.parent.logger,\"screen\"===e.type?this.parent.localScreen&&this.sharemyscreen&&(this.logger.log(\"adding local screen stream to peer connection\"),this.pc.addStream(this.parent.localScreen),this.broadcaster=e.broadcaster):this.parent.localStreams.forEach(function(e){t.pc.addStream(e)}),this.on(\"channelOpen\",function(e){e.protocol===d&&(e.onmessage=function(n){var r=JSON.parse(n.data),i=new c.Receiver;i.receive(r,e),t.emit(\"fileTransfer\",r,i),i.on(\"receivedFile\",function(e,t){i.channel.close()})})}),this.on(\"*\",function(){t.parent.emit.apply(t.parent,arguments)})}var i=e(\"util\"),o=e(\"webrtcsupport\"),a=e(\"rtcpeerconnection\"),s=e(\"wildemitter\"),c=e(\"filetransfer\"),d=\"https://simplewebrtc.com/protocol/filetransfer#inband-v1\";i.inherits(r,s),r.prototype.handleMessage=function(e){var t=this;this.logger.log(\"getting\",e.type,e),e.prefix&&(this.browserPrefix=e.prefix),\"offer\"===e.type?(this.nick||(this.nick=e.payload.nick),delete e.payload.nick,e.payload.sdp=e.payload.sdp.replace(\"a=fmtp:0 profile-level-id=0x42e00c;packetization-mode=1\\r\\n\",\"\"),this.pc.handleOffer(e.payload,function(e){e||t.pc.answer(t.receiveMedia,function(e,t){})})):\"answer\"===e.type?(this.nick||(this.nick=e.payload.nick),delete e.payload.nick,this.pc.handleAnswer(e.payload)):\"candidate\"===e.type?this.pc.processIce(e.payload):\"connectivityError\"===e.type?this.parent.emit(\"connectivityError\",t):\"mute\"===e.type?this.parent.emit(\"mute\",{id:e.from,name:e.payload.name}):\"unmute\"===e.type&&this.parent.emit(\"unmute\",{id:e.from,name:e.payload.name})},r.prototype.send=function(e,t){var n={to:this.id,sid:this.sid,broadcaster:this.broadcaster,roomType:this.type,type:e,payload:t,prefix:o.prefix};this.logger.log(\"sending\",e,n),this.parent.emit(\"message\",n)},r.prototype.sendDirectly=function(e,t,n){var r={type:t,payload:n};this.logger.log(\"sending via datachannel\",e,t,r);var i=this.getDataChannel(e);return\"open\"==i.readyState&&(i.send(JSON.stringify(r)),!0)},r.prototype._observeDataChannel=function(e){var t=this;e.onclose=this.emit.bind(this,\"channelClose\",e),e.onerror=this.emit.bind(this,\"channelError\",e),e.onmessage=function(n){t.emit(\"channelMessage\",t,e.label,JSON.parse(n.data),e,n)},e.onopen=this.emit.bind(this,\"channelOpen\",e)},r.prototype.getDataChannel=function(e,t){if(!o.supportDataChannel)return this.emit(\"error\",new Error(\"createDataChannel not supported\"));var n=this.channels[e];return t||(t={}),n?n:(n=this.channels[e]=this.pc.createDataChannel(e,t),this._observeDataChannel(n),n)},r.prototype.onIceCandidate=function(e){if(!this.closed)if(e){var t=this.parent.config.peerConnectionConfig;\"moz\"===o.prefix&&t&&t.iceTransports&&e.candidate&&e.candidate.candidate&&e.candidate.candidate.indexOf(t.iceTransports)<0?this.logger.log(\"Ignoring ice candidate not matching pcConfig iceTransports type: \",t.iceTransports):this.send(\"candidate\",e)}else this.logger.log(\"End of candidates.\")},r.prototype.start=function(){this.enableDataChannels&&this.getDataChannel(\"simplewebrtc\"),\nthis.pc.offer(this.receiveMedia,function(e,t){})},r.prototype.icerestart=function(){var e=this.receiveMedia;e.mandatory.IceRestart=!0,this.pc.offer(e,function(e,t){})},r.prototype.end=function(){this.closed||(this.pc.close(),this.handleStreamRemoved())},r.prototype.handleRemoteStreamAdded=function(e){var t=this;this.stream?this.logger.warn(\"Already have a remote stream\"):(this.stream=e.stream,this.stream.onended=function(){t.end()},this.parent.emit(\"peerStreamAdded\",this))},r.prototype.handleStreamRemoved=function(){this.parent.peers.splice(this.parent.peers.indexOf(this),1),this.closed=!0,this.parent.emit(\"peerStreamRemoved\",this)},r.prototype.handleDataChannelAdded=function(e){this.channels[e.label]=e,this._observeDataChannel(e)},r.prototype.sendFile=function(e){var t=new c.Sender,n=this.getDataChannel(\"filetransfer\"+(new Date).getTime(),{protocol:d});return n.onopen=function(){n.send(JSON.stringify({size:e.size,name:e.name})),t.send(e,n)},n.onclose=function(){console.log(\"sender received transfer\"),t.emit(\"complete\")},t},t.exports=r},{filetransfer:2,rtcpeerconnection:28,util:57,webrtcsupport:51,wildemitter:52}],36:[function(e,t,n){function r(e){var t,n,r=this,u=e||{},p=this.config={url:\"https://signaling.simplewebrtc.com:443/\",socketio:{},connection:null,debug:!1,localVideoEl:\"\",remoteVideosEl:\"\",enableDataChannels:!0,autoRequestMedia:!1,autoRemoveVideos:!0,adjustPeerVolume:!0,peerVolumeWhenSpeaking:.25,media:{video:!0,audio:!0},receiveMedia:{mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}},localVideo:{autoplay:!0,mirror:!0,muted:!0}};this.logger=function(){return e.debug?e.logger||console:e.logger||c}();for(t in u)this.config[t]=u[t];this.capabilities=a,o.call(this),n=null===this.config.connection?this.connection=new d(this.config):this.connection=this.config.connection,n.on(\"connect\",function(){r.emit(\"connectionReady\",n.getSessionid()),r.sessionReady=!0,r.testReadiness()}),n.on(\"message\",function(e){var t,n=r.webrtc.getPeers(e.from,e.roomType);\"offer\"===e.type?(n.length&&n.forEach(function(n){n.sid==e.sid&&(t=n)}),t||(t=r.webrtc.createPeer({id:e.from,sid:e.sid,type:e.roomType,enableDataChannels:r.config.enableDataChannels&&\"screen\"!==e.roomType,sharemyscreen:\"screen\"===e.roomType&&!e.broadcaster,broadcaster:\"screen\"!==e.roomType||e.broadcaster?null:r.connection.getSessionid()}),r.emit(\"createdPeer\",t)),t.handleMessage(e)):n.length&&n.forEach(function(t){e.sid?t.sid===e.sid&&t.handleMessage(e):t.handleMessage(e)})}),n.on(\"remove\",function(e){e.id!==r.connection.getSessionid()&&r.webrtc.removePeers(e.id,e.type)}),e.logger=this.logger,e.debug=!1,this.webrtc=new i(e),[\"mute\",\"unmute\",\"pauseVideo\",\"resumeVideo\",\"pause\",\"resume\",\"sendToAll\",\"sendDirectlyToAll\",\"getPeers\"].forEach(function(e){r[e]=r.webrtc[e].bind(r.webrtc)}),this.webrtc.on(\"*\",function(){r.emit.apply(r,arguments)}),p.debug&&this.on(\"*\",this.logger.log.bind(this.logger,\"SimpleWebRTC event:\")),this.webrtc.on(\"localStream\",function(){r.testReadiness()}),this.webrtc.on(\"message\",function(e){r.connection.emit(\"message\",e)}),this.webrtc.on(\"peerStreamAdded\",this.handlePeerStreamAdded.bind(this)),this.webrtc.on(\"peerStreamRemoved\",this.handlePeerStreamRemoved.bind(this)),this.config.adjustPeerVolume&&(this.webrtc.on(\"speaking\",this.setVolumeForAll.bind(this,this.config.peerVolumeWhenSpeaking)),this.webrtc.on(\"stoppedSpeaking\",this.setVolumeForAll.bind(this,1))),n.on(\"stunservers\",function(e){r.webrtc.config.peerConnectionConfig.iceServers=e,r.emit(\"stunservers\",e)}),n.on(\"turnservers\",function(e){r.webrtc.config.peerConnectionConfig.iceServers=r.webrtc.config.peerConnectionConfig.iceServers.concat(e),r.emit(\"turnservers\",e)}),this.webrtc.on(\"iceFailed\",function(e){}),this.webrtc.on(\"connectivityError\",function(e){}),this.webrtc.on(\"audioOn\",function(){r.webrtc.sendToAll(\"unmute\",{name:\"audio\"})}),this.webrtc.on(\"audioOff\",function(){r.webrtc.sendToAll(\"mute\",{name:\"audio\"})}),this.webrtc.on(\"videoOn\",function(){r.webrtc.sendToAll(\"unmute\",{name:\"video\"})}),this.webrtc.on(\"videoOff\",function(){r.webrtc.sendToAll(\"mute\",{name:\"video\"})}),this.webrtc.on(\"localScreen\",function(e){var t=document.createElement(\"video\"),n=r.getRemoteVideoContainer();t.oncontextmenu=function(){return!1},t.id=\"localScreen\",s(e,t),n&&n.appendChild(t),r.emit(\"localScreenAdded\",t),r.connection.emit(\"shareScreen\"),r.webrtc.peers.forEach(function(e){var t;\"video\"===e.type&&(t=r.webrtc.createPeer({id:e.id,type:\"screen\",sharemyscreen:!0,enableDataChannels:!1,receiveMedia:{mandatory:{OfferToReceiveAudio:!1,OfferToReceiveVideo:!1}},broadcaster:r.connection.getSessionid()}),r.emit(\"createdPeer\",t),t.start())})}),this.webrtc.on(\"localScreenStopped\",function(e){r.stopScreenShare()}),this.webrtc.on(\"channelMessage\",function(e,t,n){\"volume\"==n.type&&r.emit(\"remoteVolumeChange\",e,n.volume)}),this.config.autoRequestMedia&&this.startLocalVideo()}var i=e(\"./webrtc\"),o=e(\"wildemitter\"),a=e(\"webrtcsupport\"),s=e(\"attachmediastream\"),c=e(\"mockconsole\"),d=e(\"./socketioconnection\");r.prototype=Object.create(o.prototype,{constructor:{value:r}}),r.prototype.leaveRoom=function(){this.roomName&&(this.connection.emit(\"leave\"),this.webrtc.peers.forEach(function(e){e.end()}),this.getLocalScreen()&&this.stopScreenShare(),this.emit(\"leftRoom\",this.roomName),this.roomName=void 0)},r.prototype.disconnect=function(){this.connection.disconnect(),delete this.connection},r.prototype.handlePeerStreamAdded=function(e){var t=this,n=this.getRemoteVideoContainer(),r=s(e.stream);e.videoEl=r,r.id=this.getDomId(e),n&&n.appendChild(r),this.emit(\"videoAdded\",r,e),window.setTimeout(function(){t.webrtc.isAudioEnabled()||e.send(\"mute\",{name:\"audio\"}),t.webrtc.isVideoEnabled()||e.send(\"mute\",{name:\"video\"})},250)},r.prototype.handlePeerStreamRemoved=function(e){var t=this.getRemoteVideoContainer(),n=e.videoEl;this.config.autoRemoveVideos&&t&&n&&t.removeChild(n),n&&this.emit(\"videoRemoved\",n,e)},r.prototype.getDomId=function(e){return[e.id,e.type,e.broadcaster?\"broadcasting\":\"incoming\"].join(\"_\")},r.prototype.setVolumeForAll=function(e){this.webrtc.peers.forEach(function(t){t.videoEl&&(t.videoEl.volume=e)})},r.prototype.joinRoom=function(e,t){var n=this;this.roomName=e,this.connection.emit(\"join\",e,function(r,i){if(r)n.emit(\"error\",r);else{var o,a,s,c;for(o in i.clients){a=i.clients[o];for(s in a)a[s]&&(c=n.webrtc.createPeer({id:o,type:s,enableDataChannels:n.config.enableDataChannels&&\"screen\"!==s,receiveMedia:{mandatory:{OfferToReceiveAudio:\"screen\"!==s&&n.config.receiveMedia.mandatory.OfferToReceiveAudio,OfferToReceiveVideo:n.config.receiveMedia.mandatory.OfferToReceiveVideo}}}),n.emit(\"createdPeer\",c),c.start())}}t&&t(r,i),n.emit(\"joinedRoom\",e)})},r.prototype.getEl=function(e){return\"string\"==typeof e?document.getElementById(e):e},r.prototype.startLocalVideo=function(){var e=this;this.webrtc.startLocalMedia(this.config.media,function(t,n){t?e.emit(\"localMediaError\",t):s(n,e.getLocalVideoContainer(),e.config.localVideo)})},r.prototype.stopLocalVideo=function(){this.webrtc.stopLocalMedia()},r.prototype.getLocalVideoContainer=function(){var e=this.getEl(this.config.localVideoEl);if(e&&\"VIDEO\"===e.tagName)return e.oncontextmenu=function(){return!1},e;if(e){var t=document.createElement(\"video\");return t.oncontextmenu=function(){return!1},e.appendChild(t),t}},r.prototype.getRemoteVideoContainer=function(){return this.getEl(this.config.remoteVideosEl)},r.prototype.shareScreen=function(e){this.webrtc.startScreenShare(e)},r.prototype.getLocalScreen=function(){return this.webrtc.localScreen},r.prototype.stopScreenShare=function(){this.connection.emit(\"unshareScreen\");var e=document.getElementById(\"localScreen\"),t=this.getRemoteVideoContainer(),n=this.getLocalScreen();this.config.autoRemoveVideos&&t&&e&&t.removeChild(e),e&&this.emit(\"videoRemoved\",e),n&&n.stop(),this.webrtc.peers.forEach(function(e){e.broadcaster&&e.end()})},r.prototype.testReadiness=function(){var e=this;this.webrtc.localStream&&this.sessionReady&&e.emit(\"readyToCall\",e.connection.getSessionid())},r.prototype.createRoom=function(e,t){2===arguments.length?this.connection.emit(\"create\",e,t):this.connection.emit(\"create\",e)},r.prototype.sendFile=function(){if(!a.dataChannel)return this.emit(\"error\",new Error(\"DataChannelNotSupported\"))},t.exports=r},{\"./socketioconnection\":37,\"./webrtc\":38,attachmediastream:1,mockconsole:27,webrtcsupport:51,wildemitter:52}],37:[function(e,t,n){function r(e){this.connection=i.connect(e.url,e.socketio)}var i=e(\"socket.io-client\");r.prototype.on=function(e,t){this.connection.on(e,t)},r.prototype.emit=function(){this.connection.emit.apply(this.connection,arguments)},r.prototype.getSessionid=function(){return this.connection.socket.sessionid},r.prototype.disconnect=function(){return this.connection.disconnect()},t.exports=r},{\"socket.io-client\":39}],38:[function(e,t,n){function r(e){var t,n=this,r=e||{};this.config={debug:!1,peerConnectionConfig:{iceServers:[{url:\"stun:stun.l.google.com:19302\"}]},peerConnectionConstraints:{optional:[{DtlsSrtpKeyAgreement:!0}]},receiveMedia:{mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}},enableDataChannels:!0};this.screenSharingSupport=o.screenSharing,this.logger=function(){return e.debug?e.logger||console:e.logger||a}();for(t in r)this.config[t]=r[t];o.support||this.logger.error(\"Your browser doesn't seem to support WebRTC\"),this.peers=[],s.call(this,this.config),this.on(\"speaking\",function(){n.hardMuted||n.peers.forEach(function(e){if(e.enableDataChannels){var t=e.getDataChannel(\"hark\");if(\"open\"!=t.readyState)return;t.send(JSON.stringify({type:\"speaking\"}))}})}),this.on(\"stoppedSpeaking\",function(){n.hardMuted||n.peers.forEach(function(e){if(e.enableDataChannels){var t=e.getDataChannel(\"hark\");if(\"open\"!=t.readyState)return;t.send(JSON.stringify({type:\"stoppedSpeaking\"}))}})}),this.on(\"volumeChange\",function(e,t){n.hardMuted||n.peers.forEach(function(t){if(t.enableDataChannels){var n=t.getDataChannel(\"hark\");if(\"open\"!=n.readyState)return;n.send(JSON.stringify({type:\"volume\",volume:e}))}})}),this.config.debug&&this.on(\"*\",function(e,t,r){var i;i=n.config.logger===a?console:n.logger,i.log(\"event:\",e,t,r)})}var i=e(\"util\"),o=e(\"webrtcsupport\"),a=(e(\"wildemitter\"),e(\"mockconsole\")),s=e(\"localmedia\"),c=e(\"./peer\");i.inherits(r,s),r.prototype.createPeer=function(e){var t;return e.parent=this,t=new c(e),this.peers.push(t),t},r.prototype.removePeers=function(e,t){this.getPeers(e,t).forEach(function(e){e.end()})},r.prototype.getPeers=function(e,t){return this.peers.filter(function(n){return!(e&&n.id!==e||t&&n.type!==t)})},r.prototype.sendToAll=function(e,t){this.peers.forEach(function(n){n.send(e,t)})},r.prototype.sendDirectlyToAll=function(e,t,n){this.peers.forEach(function(r){r.enableDataChannels&&r.sendDirectly(e,t,n)})},t.exports=r},{\"./peer\":35,localmedia:7,mockconsole:27,util:57,webrtcsupport:51,wildemitter:52}],39:[function(require,module,exports){var io=\"undefined\"==typeof module?{}:module.exports;!function(){if(function(e,t){var n=e;n.version=\"0.9.16\",n.protocol=1,n.transports=[],n.j=[],n.sockets={},n.connect=function(e,r){var i,o,a=n.util.parseUri(e);t&&t.location&&(a.protocol=a.protocol||t.location.protocol.slice(0,-1),a.host=a.host||(t.document?t.document.domain:t.location.hostname),a.port=a.port||t.location.port),i=n.util.uniqueUri(a);var s={host:a.host,secure:\"https\"==a.protocol,port:a.port||(\"https\"==a.protocol?443:80),query:a.query||\"\"};return n.util.merge(s,r),!s[\"force new connection\"]&&n.sockets[i]||(o=new n.Socket(s)),!s[\"force new connection\"]&&o&&(n.sockets[i]=o),o=o||n.sockets[i],o.of(a.path.length>1?a.path:\"\")}}(\"object\"==typeof module?module.exports:this.io={},this),function(e,t){var n=e.util={},r=/^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/,i=[\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"];n.parseUri=function(e){for(var t=r.exec(e||\"\"),n={},o=14;o--;)n[i[o]]=t[o]||\"\";return n},n.uniqueUri=function(e){var n=e.protocol,r=e.host,i=e.port;return\"document\"in t?(r=r||document.domain,i=i||(\"https\"==n&&\"https:\"!==document.location.protocol?443:document.location.port)):(r=r||\"localhost\",i||\"https\"!=n||(i=443)),(n||\"http\")+\"://\"+r+\":\"+(i||80)},n.query=function(e,t){var r=n.chunkQuery(e||\"\"),i=[];n.merge(r,n.chunkQuery(t||\"\"));for(var o in r)r.hasOwnProperty(o)&&i.push(o+\"=\"+r[o]);return i.length?\"?\"+i.join(\"&\"):\"\"},n.chunkQuery=function(e){for(var t,n={},r=e.split(\"&\"),i=0,o=r.length;i<o;++i)t=r[i].split(\"=\"),t[0]&&(n[t[0]]=t[1]);return n};var o=!1;n.load=function(e){return\"document\"in t&&\"complete\"===document.readyState||o?e():void n.on(t,\"load\",e,!1)},n.on=function(e,t,n,r){e.attachEvent?e.attachEvent(\"on\"+t,n):e.addEventListener&&e.addEventListener(t,n,r)},n.request=function(e){if(e&&\"undefined\"!=typeof XDomainRequest&&!n.ua.hasCORS)return new XDomainRequest;if(\"undefined\"!=typeof XMLHttpRequest&&(!e||n.ua.hasCORS))return new XMLHttpRequest;if(!e)try{return new(window[[\"Active\"].concat(\"Object\").join(\"X\")])(\"Microsoft.XMLHTTP\")}catch(e){}return null},\"undefined\"!=typeof window&&n.load(function(){o=!0}),n.defer=function(e){return n.ua.webkit&&\"undefined\"==typeof importScripts?void n.load(function(){setTimeout(e,100)}):e()},n.merge=function(e,t,r,i){var o,a=i||[],s=\"undefined\"==typeof r?2:r;for(o in t)t.hasOwnProperty(o)&&n.indexOf(a,o)<0&&(\"object\"==typeof e[o]&&s?n.merge(e[o],t[o],s-1,a):(e[o]=t[o],a.push(t[o])));return e},n.mixin=function(e,t){n.merge(e.prototype,t.prototype)},n.inherit=function(e,t){function n(){}n.prototype=t.prototype,e.prototype=new n},n.isArray=Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)},n.intersect=function(e,t){for(var r=[],i=e.length>t.length?e:t,o=e.length>t.length?t:e,a=0,s=o.length;a<s;a++)~n.indexOf(i,o[a])&&r.push(o[a]);return r},n.indexOf=function(e,t,n){for(var r=e.length,n=n<0?n+r<0?0:n+r:n||0;n<r&&e[n]!==t;n++);return r<=n?-1:n},n.toArray=function(e){for(var t=[],n=0,r=e.length;n<r;n++)t.push(e[n]);return t},n.ua={},n.ua.hasCORS=\"undefined\"!=typeof XMLHttpRequest&&function(){try{var e=new XMLHttpRequest}catch(e){return!1}return void 0!=e.withCredentials}(),n.ua.webkit=\"undefined\"!=typeof navigator&&/webkit/i.test(navigator.userAgent),n.ua.iDevice=\"undefined\"!=typeof navigator&&/iPad|iPhone|iPod/i.test(navigator.userAgent)}(\"undefined\"!=typeof io?io:module.exports,this),function(e,t){function n(){}e.EventEmitter=n,n.prototype.on=function(e,n){return this.$events||(this.$events={}),this.$events[e]?t.util.isArray(this.$events[e])?this.$events[e].push(n):this.$events[e]=[this.$events[e],n]:this.$events[e]=n,this},n.prototype.addListener=n.prototype.on,n.prototype.once=function(e,t){function n(){r.removeListener(e,n),t.apply(this,arguments)}var r=this;return n.listener=t,this.on(e,n),this},n.prototype.removeListener=function(e,n){if(this.$events&&this.$events[e]){var r=this.$events[e];if(t.util.isArray(r)){for(var i=-1,o=0,a=r.length;o<a;o++)if(r[o]===n||r[o].listener&&r[o].listener===n){i=o;break}if(i<0)return this;r.splice(i,1),r.length||delete this.$events[e]}else(r===n||r.listener&&r.listener===n)&&delete this.$events[e]}return this},n.prototype.removeAllListeners=function(e){return void 0===e?(this.$events={},this):(this.$events&&this.$events[e]&&(this.$events[e]=null),this)},n.prototype.listeners=function(e){return this.$events||(this.$events={}),this.$events[e]||(this.$events[e]=[]),t.util.isArray(this.$events[e])||(this.$events[e]=[this.$events[e]]),this.$events[e]},n.prototype.emit=function(e){if(!this.$events)return!1;var n=this.$events[e];if(!n)return!1;var r=Array.prototype.slice.call(arguments,1);if(\"function\"==typeof n)n.apply(this,r);else{if(!t.util.isArray(n))return!1;for(var i=n.slice(),o=0,a=i.length;o<a;o++)i[o].apply(this,r)}return!0}}(\"undefined\"!=typeof io?io:module.exports,\"undefined\"!=typeof io?io:module.parent.exports),function(exports,nativeJSON){\"use strict\";function f(e){return e<10?\"0\"+e:e}function date(e,t){return isFinite(e.valueOf())?e.getUTCFullYear()+\"-\"+f(e.getUTCMonth()+1)+\"-\"+f(e.getUTCDate())+\"T\"+f(e.getUTCHours())+\":\"+f(e.getUTCMinutes())+\":\"+f(e.getUTCSeconds())+\"Z\":null}function quote(e){return escapable.lastIndex=0,escapable.test(e)?'\"'+e.replace(escapable,function(e){var t=meta[e];return\"string\"==typeof t?t:\"\\\\u\"+(\"0000\"+e.charCodeAt(0).toString(16)).slice(-4)})+'\"':'\"'+e+'\"'}function str(e,t){var n,r,i,o,a,s=gap,c=t[e];switch(c instanceof Date&&(c=date(e)),\"function\"==typeof rep&&(c=rep.call(t,e,c)),typeof c){case\"string\":return quote(c);case\"number\":return isFinite(c)?String(c):\"null\";case\"boolean\":case\"null\":return String(c);case\"object\":if(!c)return\"null\";if(gap+=indent,a=[],\"[object Array]\"===Object.prototype.toString.apply(c)){for(o=c.length,n=0;n<o;n+=1)a[n]=str(n,c)||\"null\";return i=0===a.length?\"[]\":gap?\"[\\n\"+gap+a.join(\",\\n\"+gap)+\"\\n\"+s+\"]\":\"[\"+a.join(\",\")+\"]\",gap=s,i}if(rep&&\"object\"==typeof rep)for(o=rep.length,n=0;n<o;n+=1)\"string\"==typeof rep[n]&&(r=rep[n],i=str(r,c),i&&a.push(quote(r)+(gap?\": \":\":\")+i));else for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(i=str(r,c),i&&a.push(quote(r)+(gap?\": \":\":\")+i));return i=0===a.length?\"{}\":gap?\"{\\n\"+gap+a.join(\",\\n\"+gap)+\"\\n\"+s+\"}\":\"{\"+a.join(\",\")+\"}\",gap=s,i}}if(nativeJSON&&nativeJSON.parse)return exports.JSON={parse:nativeJSON.parse,stringify:nativeJSON.stringify};var JSON=exports.JSON={},cx=/[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,escapable=/[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,gap,indent,meta={\"\\b\":\"\\\\b\",\"\\t\":\"\\\\t\",\"\\n\":\"\\\\n\",\"\\f\":\"\\\\f\",\"\\r\":\"\\\\r\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\"},rep;JSON.stringify=function(e,t,n){var r;if(gap=\"\",indent=\"\",\"number\"==typeof n)for(r=0;r<n;r+=1)indent+=\" \";else\"string\"==typeof n&&(indent=n);if(rep=t,t&&\"function\"!=typeof t&&(\"object\"!=typeof t||\"number\"!=typeof t.length))throw new Error(\"JSON.stringify\");return str(\"\",{\"\":e})},JSON.parse=function(text,reviver){function walk(e,t){var n,r,i=e[t];if(i&&\"object\"==typeof i)for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(r=walk(i,n),void 0!==r?i[n]=r:delete i[n]);return reviver.call(e,t,i)}var j;if(text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(e){return\"\\\\u\"+(\"0000\"+e.charCodeAt(0).toString(16)).slice(-4)})),/^[\\],:{}\\s]*$/.test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\"@\").replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\"]\").replace(/(?:^|:|,)(?:\\s*\\[)+/g,\"\")))return j=eval(\"(\"+text+\")\"),\"function\"==typeof reviver?walk({\"\":j},\"\"):j;throw new SyntaxError(\"JSON.parse\")}}(\"undefined\"!=typeof io?io:module.exports,\"undefined\"!=typeof JSON?JSON:void 0),function(e,t){var n=e.parser={},r=n.packets=[\"disconnect\",\"connect\",\"heartbeat\",\"message\",\"json\",\"event\",\"ack\",\"error\",\"noop\"],i=n.reasons=[\"transport not supported\",\"client not handshaken\",\"unauthorized\"],o=n.advice=[\"reconnect\"],a=t.JSON,s=t.util.indexOf;n.encodePacket=function(e){var t=s(r,e.type),n=e.id||\"\",c=e.endpoint||\"\",d=e.ack,u=null;switch(e.type){case\"error\":var p=e.reason?s(i,e.reason):\"\",l=e.advice?s(o,e.advice):\"\";\"\"===p&&\"\"===l||(u=p+(\"\"!==l?\"+\"+l:\"\"));break;case\"message\":\"\"!==e.data&&(u=e.data);break;case\"event\":var f={name:e.name};e.args&&e.args.length&&(f.args=e.args),u=a.stringify(f);break;case\"json\":u=a.stringify(e.data);break;case\"connect\":e.qs&&(u=e.qs);break;case\"ack\":u=e.ackId+(e.args&&e.args.length?\"+\"+a.stringify(e.args):\"\")}var h=[t,n+(\"data\"==d?\"+\":\"\"),c];return null!==u&&void 0!==u&&h.push(u),h.join(\":\")},n.encodePayload=function(e){var t=\"\";if(1==e.length)return e[0];for(var n=0,r=e.length;n<r;n++){var i=e[n];t+=\"�\"+i.length+\"�\"+e[n]}return t};var c=/([^:]+):([0-9]+)?(\\+)?:([^:]+)?:?([\\s\\S]*)?/;n.decodePacket=function(e){var t=e.match(c);if(!t)return{};var n=t[2]||\"\",e=t[5]||\"\",s={type:r[t[1]],endpoint:t[4]||\"\"};switch(n&&(s.id=n,t[3]?s.ack=\"data\":s.ack=!0),s.type){case\"error\":var t=e.split(\"+\");s.reason=i[t[0]]||\"\",s.advice=o[t[1]]||\"\";break;case\"message\":s.data=e||\"\";break;case\"event\":try{var d=a.parse(e);s.name=d.name,s.args=d.args}catch(e){}s.args=s.args||[];break;case\"json\":try{s.data=a.parse(e)}catch(e){}break;case\"connect\":s.qs=e||\"\";break;case\"ack\":var t=e.match(/^([0-9]+)(\\+)?(.*)/);if(t&&(s.ackId=t[1],s.args=[],t[3]))try{s.args=t[3]?a.parse(t[3]):[]}catch(e){}break;case\"disconnect\":case\"heartbeat\":}return s},n.decodePayload=function(e){if(\"�\"==e.charAt(0)){for(var t=[],r=1,i=\"\";r<e.length;r++)\"�\"==e.charAt(r)?(t.push(n.decodePacket(e.substr(r+1).substr(0,i))),r+=Number(i)+1,i=\"\"):i+=e.charAt(r);return t}return[n.decodePacket(e)]}}(\"undefined\"!=typeof io?io:module.exports,\"undefined\"!=typeof io?io:module.parent.exports),function(e,t){function n(e,t){this.socket=e,this.sessid=t}e.Transport=n,t.util.mixin(n,t.EventEmitter),n.prototype.heartbeats=function(){return!0},n.prototype.onData=function(e){if(this.clearCloseTimeout(),(this.socket.connected||this.socket.connecting||this.socket.reconnecting)&&this.setCloseTimeout(),\"\"!==e){var n=t.parser.decodePayload(e);if(n&&n.length)for(var r=0,i=n.length;r<i;r++)this.onPacket(n[r])}return this},n.prototype.onPacket=function(e){return this.socket.setHeartbeatTimeout(),\"heartbeat\"==e.type?this.onHeartbeat():(\"connect\"==e.type&&\"\"==e.endpoint&&this.onConnect(),\"error\"==e.type&&\"reconnect\"==e.advice&&(this.isOpen=!1),this.socket.onPacket(e),this)},n.prototype.setCloseTimeout=function(){if(!this.closeTimeout){var e=this;this.closeTimeout=setTimeout(function(){e.onDisconnect()},this.socket.closeTimeout)}},n.prototype.onDisconnect=function(){return this.isOpen&&this.close(),this.clearTimeouts(),this.socket.onDisconnect(),this},n.prototype.onConnect=function(){return this.socket.onConnect(),this},n.prototype.clearCloseTimeout=function(){this.closeTimeout&&(clearTimeout(this.closeTimeout),this.closeTimeout=null)},n.prototype.clearTimeouts=function(){this.clearCloseTimeout(),this.reopenTimeout&&clearTimeout(this.reopenTimeout)},n.prototype.packet=function(e){this.send(t.parser.encodePacket(e))},n.prototype.onHeartbeat=function(e){this.packet({type:\"heartbeat\"})},n.prototype.onOpen=function(){this.isOpen=!0,this.clearCloseTimeout(),this.socket.onOpen()},n.prototype.onClose=function(){this.isOpen=!1,this.socket.onClose(),this.onDisconnect()},n.prototype.prepareUrl=function(){var e=this.socket.options;return this.scheme()+\"://\"+e.host+\":\"+e.port+\"/\"+e.resource+\"/\"+t.protocol+\"/\"+this.name+\"/\"+this.sessid},n.prototype.ready=function(e,t){t.call(this)}}(\"undefined\"!=typeof io?io:module.exports,\"undefined\"!=typeof io?io:module.parent.exports),function(e,t,n){function r(e){if(this.options={port:80,secure:!1,document:\"document\"in n&&document,resource:\"socket.io\",transports:t.transports,\"connect timeout\":1e4,\"try multiple transports\":!0,reconnect:!0,\"reconnection delay\":500,\"reconnection limit\":1/0,\"reopen delay\":3e3,\"max reconnection attempts\":10,\"sync disconnect on unload\":!1,\"auto connect\":!0,\"flash policy port\":10843,manualFlush:!1},t.util.merge(this.options,e),this.connected=!1,this.open=!1,this.connecting=!1,this.reconnecting=!1,this.namespaces={},this.buffer=[],this.doBuffer=!1,this.options[\"sync disconnect on unload\"]&&(!this.isXDomain()||t.util.ua.hasCORS)){var r=this;t.util.on(n,\"beforeunload\",function(){r.disconnectSync()},!1)}this.options[\"auto connect\"]&&this.connect()}function i(){}e.Socket=r,t.util.mixin(r,t.EventEmitter),r.prototype.of=function(e){return this.namespaces[e]||(this.namespaces[e]=new t.SocketNamespace(this,e),\"\"!==e&&this.namespaces[e].packet({type:\"connect\"})),this.namespaces[e]},r.prototype.publish=function(){this.emit.apply(this,arguments);var e;for(var t in this.namespaces)this.namespaces.hasOwnProperty(t)&&(e=this.of(t),e.$emit.apply(e,arguments))},r.prototype.handshake=function(e){function n(t){t instanceof Error?(r.connecting=!1,r.onError(t.message)):e.apply(null,t.split(\":\"))}var r=this,o=this.options,a=[\"http\"+(o.secure?\"s\":\"\")+\":/\",o.host+\":\"+o.port,o.resource,t.protocol,t.util.query(this.options.query,\"t=\"+ +new Date)].join(\"/\");if(this.isXDomain()&&!t.util.ua.hasCORS){var s=document.getElementsByTagName(\"script\")[0],c=document.createElement(\"script\");c.src=a+\"&jsonp=\"+t.j.length,s.parentNode.insertBefore(c,s),t.j.push(function(e){n(e),c.parentNode.removeChild(c)})}else{var d=t.util.request();d.open(\"GET\",a,!0),this.isXDomain()&&(d.withCredentials=!0),d.onreadystatechange=function(){4==d.readyState&&(d.onreadystatechange=i,200==d.status?n(d.responseText):403==d.status?r.onError(d.responseText):(r.connecting=!1,!r.reconnecting&&r.onError(d.responseText)))},d.send(null)}},r.prototype.getTransport=function(e){for(var n,r=e||this.transports,i=0;n=r[i];i++)if(t.Transport[n]&&t.Transport[n].check(this)&&(!this.isXDomain()||t.Transport[n].xdomainCheck(this)))return new t.Transport[n](this,this.sessionid);return null},r.prototype.connect=function(e){if(this.connecting)return this;var n=this;return n.connecting=!0,this.handshake(function(r,i,o,a){function s(e){return n.transport&&n.transport.clearTimeouts(),n.transport=n.getTransport(e),n.transport?void n.transport.ready(n,function(){n.connecting=!0,n.publish(\"connecting\",n.transport.name),n.transport.open(),n.options[\"connect timeout\"]&&(n.connectTimeoutTimer=setTimeout(function(){if(!n.connected&&(n.connecting=!1,n.options[\"try multiple transports\"])){for(var e=n.transports;e.length>0&&e.splice(0,1)[0]!=n.transport.name;);e.length?s(e):n.publish(\"connect_failed\")}},n.options[\"connect timeout\"]))}):n.publish(\"connect_failed\")}n.sessionid=r,n.closeTimeout=1e3*o,n.heartbeatTimeout=1e3*i,n.transports||(n.transports=n.origTransports=a?t.util.intersect(a.split(\",\"),n.options.transports):n.options.transports),n.setHeartbeatTimeout(),s(n.transports),n.once(\"connect\",function(){clearTimeout(n.connectTimeoutTimer),e&&\"function\"==typeof e&&e()})}),this},r.prototype.setHeartbeatTimeout=function(){if(clearTimeout(this.heartbeatTimeoutTimer),!this.transport||this.transport.heartbeats()){var e=this;this.heartbeatTimeoutTimer=setTimeout(function(){e.transport.onClose()},this.heartbeatTimeout)}},r.prototype.packet=function(e){return this.connected&&!this.doBuffer?this.transport.packet(e):this.buffer.push(e),this},r.prototype.setBuffer=function(e){this.doBuffer=e,!e&&this.connected&&this.buffer.length&&(this.options.manualFlush||this.flushBuffer())},r.prototype.flushBuffer=function(){this.transport.payload(this.buffer),this.buffer=[]},r.prototype.disconnect=function(){return(this.connected||this.connecting)&&(this.open&&this.of(\"\").packet({type:\"disconnect\"}),this.onDisconnect(\"booted\")),this},r.prototype.disconnectSync=function(){var e=t.util.request(),n=[\"http\"+(this.options.secure?\"s\":\"\")+\":/\",this.options.host+\":\"+this.options.port,this.options.resource,t.protocol,\"\",this.sessionid].join(\"/\")+\"/?disconnect=1\";e.open(\"GET\",n,!1),e.send(null),this.onDisconnect(\"booted\")},r.prototype.isXDomain=function(){var e=n.location.port||(\"https:\"==n.location.protocol?443:80);return this.options.host!==n.location.hostname||this.options.port!=e},r.prototype.onConnect=function(){this.connected||(this.connected=!0,this.connecting=!1,this.doBuffer||this.setBuffer(!1),this.emit(\"connect\"))},r.prototype.onOpen=function(){this.open=!0},r.prototype.onClose=function(){this.open=!1,clearTimeout(this.heartbeatTimeoutTimer)},r.prototype.onPacket=function(e){this.of(e.endpoint).onPacket(e)},r.prototype.onError=function(e){e&&e.advice&&\"reconnect\"===e.advice&&(this.connected||this.connecting)&&(this.disconnect(),this.options.reconnect&&this.reconnect()),this.publish(\"error\",e&&e.reason?e.reason:e)},r.prototype.onDisconnect=function(e){var t=this.connected,n=this.connecting;this.connected=!1,this.connecting=!1,this.open=!1,(t||n)&&(this.transport.close(),this.transport.clearTimeouts(),t&&(this.publish(\"disconnect\",e),\"booted\"!=e&&this.options.reconnect&&!this.reconnecting&&this.reconnect()))},r.prototype.reconnect=function(){function e(){if(n.connected){for(var e in n.namespaces)n.namespaces.hasOwnProperty(e)&&\"\"!==e&&n.namespaces[e].packet({type:\"connect\"});n.publish(\"reconnect\",n.transport.name,n.reconnectionAttempts)}clearTimeout(n.reconnectionTimer),n.removeListener(\"connect_failed\",t),n.removeListener(\"connect\",t),n.reconnecting=!1,delete n.reconnectionAttempts,delete n.reconnectionDelay,delete n.reconnectionTimer,delete n.redoTransports,n.options[\"try multiple transports\"]=i}function t(){if(n.reconnecting)return n.connected?e():n.connecting&&n.reconnecting?n.reconnectionTimer=setTimeout(t,1e3):void(n.reconnectionAttempts++>=r?n.redoTransports?(n.publish(\"reconnect_failed\"),e()):(n.on(\"connect_failed\",t),n.options[\"try multiple transports\"]=!0,n.transports=n.origTransports,n.transport=n.getTransport(),n.redoTransports=!0,n.connect()):(n.reconnectionDelay<o&&(n.reconnectionDelay*=2),n.connect(),n.publish(\"reconnecting\",n.reconnectionDelay,n.reconnectionAttempts),n.reconnectionTimer=setTimeout(t,n.reconnectionDelay)))}this.reconnecting=!0,this.reconnectionAttempts=0,this.reconnectionDelay=this.options[\"reconnection delay\"];var n=this,r=this.options[\"max reconnection attempts\"],i=this.options[\"try multiple transports\"],o=this.options[\"reconnection limit\"];this.options[\"try multiple transports\"]=!1,this.reconnectionTimer=setTimeout(t,this.reconnectionDelay),this.on(\"connect\",t)}}(\"undefined\"!=typeof io?io:module.exports,\"undefined\"!=typeof io?io:module.parent.exports,this),function(e,t){function n(e,t){this.socket=e,this.name=t||\"\",this.flags={},this.json=new r(this,\"json\"),this.ackPackets=0,this.acks={}}function r(e,t){this.namespace=e,this.name=t}e.SocketNamespace=n,t.util.mixin(n,t.EventEmitter),n.prototype.$emit=t.EventEmitter.prototype.emit,n.prototype.of=function(){return this.socket.of.apply(this.socket,arguments)},n.prototype.packet=function(e){return e.endpoint=this.name,this.socket.packet(e),this.flags={},this},n.prototype.send=function(e,t){var n={type:this.flags.json?\"json\":\"message\",data:e};return\"function\"==typeof t&&(n.id=++this.ackPackets,n.ack=!0,this.acks[n.id]=t),this.packet(n)},n.prototype.emit=function(e){var t=Array.prototype.slice.call(arguments,1),n=t[t.length-1],r={type:\"event\",name:e};return\"function\"==typeof n&&(r.id=++this.ackPackets,r.ack=\"data\",this.acks[r.id]=n,t=t.slice(0,t.length-1)),r.args=t,this.packet(r)},n.prototype.disconnect=function(){return\"\"===this.name?this.socket.disconnect():(this.packet({type:\"disconnect\"}),this.$emit(\"disconnect\")),this},n.prototype.onPacket=function(e){function n(){r.packet({type:\"ack\",args:t.util.toArray(arguments),ackId:e.id})}var r=this;switch(e.type){case\"connect\":this.$emit(\"connect\");break;case\"disconnect\":\"\"===this.name?this.socket.onDisconnect(e.reason||\"booted\"):this.$emit(\"disconnect\",e.reason);break;case\"message\":case\"json\":var i=[\"message\",e.data];\"data\"==e.ack?i.push(n):e.ack&&this.packet({type:\"ack\",ackId:e.id}),this.$emit.apply(this,i);break;case\"event\":var i=[e.name].concat(e.args);\"data\"==e.ack&&i.push(n),this.$emit.apply(this,i);break;case\"ack\":this.acks[e.ackId]&&(this.acks[e.ackId].apply(this,e.args),delete this.acks[e.ackId]);break;case\"error\":e.advice?this.socket.onError(e):\"unauthorized\"==e.reason?this.$emit(\"connect_failed\",e.reason):this.$emit(\"error\",e.reason)}},r.prototype.send=function(){this.namespace.flags[this.name]=!0,this.namespace.send.apply(this.namespace,arguments)},r.prototype.emit=function(){this.namespace.flags[this.name]=!0,this.namespace.emit.apply(this.namespace,arguments)}}(\"undefined\"!=typeof io?io:module.exports,\"undefined\"!=typeof io?io:module.parent.exports),function(e,t,n){function r(e){t.Transport.apply(this,arguments)}e.websocket=r,t.util.inherit(r,t.Transport),r.prototype.name=\"websocket\",r.prototype.open=function(){var e,r=t.util.query(this.socket.options.query),i=this;return e||(e=n.MozWebSocket||n.WebSocket),this.websocket=new e(this.prepareUrl()+r),this.websocket.onopen=function(){i.onOpen(),\ni.socket.setBuffer(!1)},this.websocket.onmessage=function(e){i.onData(e.data)},this.websocket.onclose=function(){i.onClose(),i.socket.setBuffer(!0)},this.websocket.onerror=function(e){i.onError(e)},this},t.util.ua.iDevice?r.prototype.send=function(e){var t=this;return setTimeout(function(){t.websocket.send(e)},0),this}:r.prototype.send=function(e){return this.websocket.send(e),this},r.prototype.payload=function(e){for(var t=0,n=e.length;t<n;t++)this.packet(e[t]);return this},r.prototype.close=function(){return this.websocket.close(),this},r.prototype.onError=function(e){this.socket.onError(e)},r.prototype.scheme=function(){return this.socket.options.secure?\"wss\":\"ws\"},r.check=function(){return\"WebSocket\"in n&&!(\"__addTask\"in WebSocket)||\"MozWebSocket\"in n},r.xdomainCheck=function(){return!0},t.transports.push(\"websocket\")}(\"undefined\"!=typeof io?io.Transport:module.exports,\"undefined\"!=typeof io?io:module.parent.exports,this),function(e,t){function n(){t.Transport.websocket.apply(this,arguments)}e.flashsocket=n,t.util.inherit(n,t.Transport.websocket),n.prototype.name=\"flashsocket\",n.prototype.open=function(){var e=this,n=arguments;return WebSocket.__addTask(function(){t.Transport.websocket.prototype.open.apply(e,n)}),this},n.prototype.send=function(){var e=this,n=arguments;return WebSocket.__addTask(function(){t.Transport.websocket.prototype.send.apply(e,n)}),this},n.prototype.close=function(){return WebSocket.__tasks.length=0,t.Transport.websocket.prototype.close.call(this),this},n.prototype.ready=function(e,r){function i(){var t=e.options,i=t[\"flash policy port\"],a=[\"http\"+(t.secure?\"s\":\"\")+\":/\",t.host+\":\"+t.port,t.resource,\"static/flashsocket\",\"WebSocketMain\"+(e.isXDomain()?\"Insecure\":\"\")+\".swf\"];n.loaded||(\"undefined\"==typeof WEB_SOCKET_SWF_LOCATION&&(WEB_SOCKET_SWF_LOCATION=a.join(\"/\")),843!==i&&WebSocket.loadFlashPolicyFile(\"xmlsocket://\"+t.host+\":\"+i),WebSocket.__initialize(),n.loaded=!0),r.call(o)}var o=this;return document.body?i():void t.util.load(i)},n.check=function(){return!!(\"undefined\"!=typeof WebSocket&&\"__initialize\"in WebSocket&&swfobject)&&swfobject.getFlashPlayerVersion().major>=10},n.xdomainCheck=function(){return!0},\"undefined\"!=typeof window&&(WEB_SOCKET_DISABLE_AUTO_INITIALIZATION=!0),t.transports.push(\"flashsocket\")}(\"undefined\"!=typeof io?io.Transport:module.exports,\"undefined\"!=typeof io?io:module.parent.exports),\"undefined\"!=typeof window)var swfobject=function(){function e(){if(!V){try{var e=A.getElementsByTagName(\"body\")[0].appendChild(v(\"span\"));e.parentNode.removeChild(e)}catch(e){return}V=!0;for(var t=F.length,n=0;n<t;n++)F[n]()}}function t(e){V?e():F[F.length]=e}function n(e){if(typeof L.addEventListener!=P)L.addEventListener(\"load\",e,!1);else if(typeof A.addEventListener!=P)A.addEventListener(\"load\",e,!1);else if(typeof L.attachEvent!=P)g(L,\"onload\",e);else if(\"function\"==typeof L.onload){var t=L.onload;L.onload=function(){t(),e()}}else L.onload=e}function r(){U?i():o()}function i(){var e=A.getElementsByTagName(\"body\")[0],t=v(x);t.setAttribute(\"type\",j);var n=e.appendChild(t);if(n){var r=0;!function(){if(typeof n.GetVariable!=P){var i=n.GetVariable(\"$version\");i&&(i=i.split(\" \")[1].split(\",\"),$.pv=[parseInt(i[0],10),parseInt(i[1],10),parseInt(i[2],10)])}else if(r<10)return r++,void setTimeout(arguments.callee,10);e.removeChild(t),n=null,o()}()}else o()}function o(){var e=B.length;if(e>0)for(var t=0;t<e;t++){var n=B[t].id,r=B[t].callbackFn,i={success:!1,id:n};if($.pv[0]>0){var o=m(n);if(o)if(!y(B[t].swfVersion)||$.wk&&$.wk<312)if(B[t].expressInstall&&s()){var u={};u.data=B[t].expressInstall,u.width=o.getAttribute(\"width\")||\"0\",u.height=o.getAttribute(\"height\")||\"0\",o.getAttribute(\"class\")&&(u.styleclass=o.getAttribute(\"class\")),o.getAttribute(\"align\")&&(u.align=o.getAttribute(\"align\"));for(var p={},l=o.getElementsByTagName(\"param\"),f=l.length,h=0;h<f;h++)\"movie\"!=l[h].getAttribute(\"name\").toLowerCase()&&(p[l[h].getAttribute(\"name\")]=l[h].getAttribute(\"value\"));c(u,p,n,r)}else d(o),r&&r(i);else b(n,!0),r&&(i.success=!0,i.ref=a(n),r(i))}else if(b(n,!0),r){var v=a(n);v&&typeof v.SetVariable!=P&&(i.success=!0,i.ref=v),r(i)}}}function a(e){var t=null,n=m(e);if(n&&\"OBJECT\"==n.nodeName)if(typeof n.SetVariable!=P)t=n;else{var r=n.getElementsByTagName(x)[0];r&&(t=r)}return t}function s(){return!J&&y(\"6.0.65\")&&($.win||$.mac)&&!($.wk&&$.wk<312)}function c(e,t,n,r){J=!0,T=r||null,E={success:!1,id:n};var i=m(n);if(i){\"OBJECT\"==i.nodeName?(C=u(i),k=null):(C=i,k=n),e.id=M,(typeof e.width==P||!/%$/.test(e.width)&&parseInt(e.width,10)<310)&&(e.width=\"310\"),(typeof e.height==P||!/%$/.test(e.height)&&parseInt(e.height,10)<137)&&(e.height=\"137\"),A.title=A.title.slice(0,47)+\" - Flash Player Installation\";var o=$.ie&&$.win?[\"Active\"].concat(\"\").join(\"X\"):\"PlugIn\",a=\"MMredirectURL=\"+L.location.toString().replace(/&/g,\"%26\")+\"&MMplayerType=\"+o+\"&MMdoctitle=\"+A.title;if(typeof t.flashvars!=P?t.flashvars+=\"&\"+a:t.flashvars=a,$.ie&&$.win&&4!=i.readyState){var s=v(\"div\");n+=\"SWFObjectNew\",s.setAttribute(\"id\",n),i.parentNode.insertBefore(s,i),i.style.display=\"none\",function(){4==i.readyState?i.parentNode.removeChild(i):setTimeout(arguments.callee,10)}()}p(e,t,n)}}function d(e){if($.ie&&$.win&&4!=e.readyState){var t=v(\"div\");e.parentNode.insertBefore(t,e),t.parentNode.replaceChild(u(e),t),e.style.display=\"none\",function(){4==e.readyState?e.parentNode.removeChild(e):setTimeout(arguments.callee,10)}()}else e.parentNode.replaceChild(u(e),e)}function u(e){var t=v(\"div\");if($.win&&$.ie)t.innerHTML=e.innerHTML;else{var n=e.getElementsByTagName(x)[0];if(n){var r=n.childNodes;if(r)for(var i=r.length,o=0;o<i;o++)1==r[o].nodeType&&\"PARAM\"==r[o].nodeName||8==r[o].nodeType||t.appendChild(r[o].cloneNode(!0))}}return t}function p(e,t,n){var r,i=m(n);if($.wk&&$.wk<312)return r;if(i)if(typeof e.id==P&&(e.id=n),$.ie&&$.win){var o=\"\";for(var a in e)e[a]!=Object.prototype[a]&&(\"data\"==a.toLowerCase()?t.movie=e[a]:\"styleclass\"==a.toLowerCase()?o+=' class=\"'+e[a]+'\"':\"classid\"!=a.toLowerCase()&&(o+=\" \"+a+'=\"'+e[a]+'\"'));var s=\"\";for(var c in t)t[c]!=Object.prototype[c]&&(s+='<param name=\"'+c+'\" value=\"'+t[c]+'\" />');i.outerHTML='<object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"'+o+\">\"+s+\"</object>\",W[W.length]=e.id,r=m(e.id)}else{var d=v(x);d.setAttribute(\"type\",j);for(var u in e)e[u]!=Object.prototype[u]&&(\"styleclass\"==u.toLowerCase()?d.setAttribute(\"class\",e[u]):\"classid\"!=u.toLowerCase()&&d.setAttribute(u,e[u]));for(var p in t)t[p]!=Object.prototype[p]&&\"movie\"!=p.toLowerCase()&&l(d,p,t[p]);i.parentNode.replaceChild(d,i),r=d}return r}function l(e,t,n){var r=v(\"param\");r.setAttribute(\"name\",t),r.setAttribute(\"value\",n),e.appendChild(r)}function f(e){var t=m(e);t&&\"OBJECT\"==t.nodeName&&($.ie&&$.win?(t.style.display=\"none\",function(){4==t.readyState?h(e):setTimeout(arguments.callee,10)}()):t.parentNode.removeChild(t))}function h(e){var t=m(e);if(t){for(var n in t)\"function\"==typeof t[n]&&(t[n]=null);t.parentNode.removeChild(t)}}function m(e){var t=null;try{t=A.getElementById(e)}catch(e){}return t}function v(e){return A.createElement(e)}function g(e,t,n){e.attachEvent(t,n),G[G.length]=[e,t,n]}function y(e){var t=$.pv,n=e.split(\".\");return n[0]=parseInt(n[0],10),n[1]=parseInt(n[1],10)||0,n[2]=parseInt(n[2],10)||0,t[0]>n[0]||t[0]==n[0]&&t[1]>n[1]||t[0]==n[0]&&t[1]==n[1]&&t[2]>=n[2]}function w(e,t,n,r){if(!$.ie||!$.mac){var i=A.getElementsByTagName(\"head\")[0];if(i){var o=n&&\"string\"==typeof n?n:\"screen\";if(r&&(O=null,R=null),!O||R!=o){var a=v(\"style\");a.setAttribute(\"type\",\"text/css\"),a.setAttribute(\"media\",o),O=i.appendChild(a),$.ie&&$.win&&typeof A.styleSheets!=P&&A.styleSheets.length>0&&(O=A.styleSheets[A.styleSheets.length-1]),R=o}$.ie&&$.win?O&&typeof O.addRule==x&&O.addRule(e,t):O&&typeof A.createTextNode!=P&&O.appendChild(A.createTextNode(e+\" {\"+t+\"}\"))}}}function b(e,t){if(z){var n=t?\"visible\":\"hidden\";V&&m(e)?m(e).style.visibility=n:w(\"#\"+e,\"visibility:\"+n)}}function S(e){var t=/[\\\\\\\"<>\\.;]/,n=null!=t.exec(e);return n&&typeof encodeURIComponent!=P?encodeURIComponent(e):e}var C,k,T,E,O,R,P=\"undefined\",x=\"object\",D=\"Shockwave Flash\",_=\"ShockwaveFlash.ShockwaveFlash\",j=\"application/x-shockwave-flash\",M=\"SWFObjectExprInst\",I=\"onreadystatechange\",L=window,A=document,N=navigator,U=!1,F=[r],B=[],W=[],G=[],V=!1,J=!1,z=!0,$=function(){var e=typeof A.getElementById!=P&&typeof A.getElementsByTagName!=P&&typeof A.createElement!=P,t=N.userAgent.toLowerCase(),n=N.platform.toLowerCase(),r=n?/win/.test(n):/win/.test(t),i=n?/mac/.test(n):/mac/.test(t),o=!!/webkit/.test(t)&&parseFloat(t.replace(/^.*webkit\\/(\\d+(\\.\\d+)?).*$/,\"$1\")),a=!1,s=[0,0,0],c=null;if(typeof N.plugins!=P&&typeof N.plugins[D]==x)c=N.plugins[D].description,!c||typeof N.mimeTypes!=P&&N.mimeTypes[j]&&!N.mimeTypes[j].enabledPlugin||(U=!0,a=!1,c=c.replace(/^.*\\s+(\\S+\\s+\\S+$)/,\"$1\"),s[0]=parseInt(c.replace(/^(.*)\\..*$/,\"$1\"),10),s[1]=parseInt(c.replace(/^.*\\.(.*)\\s.*$/,\"$1\"),10),s[2]=/[a-zA-Z]/.test(c)?parseInt(c.replace(/^.*[a-zA-Z]+(.*)$/,\"$1\"),10):0);else if(typeof L[[\"Active\"].concat(\"Object\").join(\"X\")]!=P)try{var d=new(window[[\"Active\"].concat(\"Object\").join(\"X\")])(_);d&&(c=d.GetVariable(\"$version\"),c&&(a=!0,c=c.split(\" \")[1].split(\",\"),s=[parseInt(c[0],10),parseInt(c[1],10),parseInt(c[2],10)]))}catch(e){}return{w3:e,pv:s,wk:o,ie:a,win:r,mac:i}}();(function(){$.w3&&((typeof A.readyState!=P&&\"complete\"==A.readyState||typeof A.readyState==P&&(A.getElementsByTagName(\"body\")[0]||A.body))&&e(),V||(typeof A.addEventListener!=P&&A.addEventListener(\"DOMContentLoaded\",e,!1),$.ie&&$.win&&(A.attachEvent(I,function(){\"complete\"==A.readyState&&(A.detachEvent(I,arguments.callee),e())}),L==top&&!function(){if(!V){try{A.documentElement.doScroll(\"left\")}catch(e){return void setTimeout(arguments.callee,0)}e()}}()),$.wk&&!function(){if(!V)return/loaded|complete/.test(A.readyState)?void e():void setTimeout(arguments.callee,0)}(),n(e)))})(),function(){$.ie&&$.win&&window.attachEvent(\"onunload\",function(){for(var e=G.length,t=0;t<e;t++)G[t][0].detachEvent(G[t][1],G[t][2]);for(var n=W.length,r=0;r<n;r++)f(W[r]);for(var i in $)$[i]=null;$=null;for(var o in swfobject)swfobject[o]=null;swfobject=null})}();return{registerObject:function(e,t,n,r){if($.w3&&e&&t){var i={};i.id=e,i.swfVersion=t,i.expressInstall=n,i.callbackFn=r,B[B.length]=i,b(e,!1)}else r&&r({success:!1,id:e})},getObjectById:function(e){if($.w3)return a(e)},embedSWF:function(e,n,r,i,o,a,d,u,l,f){var h={success:!1,id:n};$.w3&&!($.wk&&$.wk<312)&&e&&n&&r&&i&&o?(b(n,!1),t(function(){r+=\"\",i+=\"\";var t={};if(l&&typeof l===x)for(var m in l)t[m]=l[m];t.data=e,t.width=r,t.height=i;var v={};if(u&&typeof u===x)for(var g in u)v[g]=u[g];if(d&&typeof d===x)for(var w in d)typeof v.flashvars!=P?v.flashvars+=\"&\"+w+\"=\"+d[w]:v.flashvars=w+\"=\"+d[w];if(y(o)){var S=p(t,v,n);t.id==n&&b(n,!0),h.success=!0,h.ref=S}else{if(a&&s())return t.data=a,void c(t,v,n,f);b(n,!0)}f&&f(h)})):f&&f(h)},switchOffAutoHideShow:function(){z=!1},ua:$,getFlashPlayerVersion:function(){return{major:$.pv[0],minor:$.pv[1],release:$.pv[2]}},hasFlashPlayerVersion:y,createSWF:function(e,t,n){return $.w3?p(e,t,n):void 0},showExpressInstall:function(e,t,n,r){$.w3&&s()&&c(e,t,n,r)},removeSWF:function(e){$.w3&&f(e)},createCSS:function(e,t,n,r){$.w3&&w(e,t,n,r)},addDomLoadEvent:t,addLoadEvent:n,getQueryParamValue:function(e){var t=A.location.search||A.location.hash;if(t){if(/\\?/.test(t)&&(t=t.split(\"?\")[1]),null==e)return S(t);for(var n=t.split(\"&\"),r=0;r<n.length;r++)if(n[r].substring(0,n[r].indexOf(\"=\"))==e)return S(n[r].substring(n[r].indexOf(\"=\")+1))}return\"\"},expressInstallCallback:function(){if(J){var e=m(M);e&&C&&(e.parentNode.replaceChild(C,e),k&&(b(k,!0),$.ie&&$.win&&(C.style.display=\"block\")),T&&T(E)),J=!1}}}}();!function(){if(\"undefined\"!=typeof window&&!window.WebSocket){var e=window.console;if(e&&e.log&&e.error||(e={log:function(){},error:function(){}}),!swfobject.hasFlashPlayerVersion(\"10.0.0\"))return void e.error(\"Flash Player >= 10.0.0 is required.\");\"file:\"==location.protocol&&e.error(\"WARNING: web-socket-js doesn't work in file:///... URL unless you set Flash Security Settings properly. Open the page via Web server i.e. http://...\"),WebSocket=function(e,t,n,r,i){var o=this;o.__id=WebSocket.__nextId++,WebSocket.__instances[o.__id]=o,o.readyState=WebSocket.CONNECTING,o.bufferedAmount=0,o.__events={},t?\"string\"==typeof t&&(t=[t]):t=[],setTimeout(function(){WebSocket.__addTask(function(){WebSocket.__flash.create(o.__id,e,t,n||null,r||0,i||null)})},0)},WebSocket.prototype.send=function(e){if(this.readyState==WebSocket.CONNECTING)throw\"INVALID_STATE_ERR: Web Socket connection has not been established\";var t=WebSocket.__flash.send(this.__id,encodeURIComponent(e));return t<0||(this.bufferedAmount+=t,!1)},WebSocket.prototype.close=function(){this.readyState!=WebSocket.CLOSED&&this.readyState!=WebSocket.CLOSING&&(this.readyState=WebSocket.CLOSING,WebSocket.__flash.close(this.__id))},WebSocket.prototype.addEventListener=function(e,t,n){e in this.__events||(this.__events[e]=[]),this.__events[e].push(t)},WebSocket.prototype.removeEventListener=function(e,t,n){if(e in this.__events)for(var r=this.__events[e],i=r.length-1;i>=0;--i)if(r[i]===t){r.splice(i,1);break}},WebSocket.prototype.dispatchEvent=function(e){for(var t=this.__events[e.type]||[],n=0;n<t.length;++n)t[n](e);var r=this[\"on\"+e.type];r&&r(e)},WebSocket.prototype.__handleEvent=function(e){\"readyState\"in e&&(this.readyState=e.readyState),\"protocol\"in e&&(this.protocol=e.protocol);var t;if(\"open\"==e.type||\"error\"==e.type)t=this.__createSimpleEvent(e.type);else if(\"close\"==e.type)t=this.__createSimpleEvent(\"close\");else{if(\"message\"!=e.type)throw\"unknown event type: \"+e.type;var n=decodeURIComponent(e.message);t=this.__createMessageEvent(\"message\",n)}this.dispatchEvent(t)},WebSocket.prototype.__createSimpleEvent=function(e){if(document.createEvent&&window.Event){var t=document.createEvent(\"Event\");return t.initEvent(e,!1,!1),t}return{type:e,bubbles:!1,cancelable:!1}},WebSocket.prototype.__createMessageEvent=function(e,t){if(document.createEvent&&window.MessageEvent&&!window.opera){var n=document.createEvent(\"MessageEvent\");return n.initMessageEvent(\"message\",!1,!1,t,null,null,window,null),n}return{type:e,data:t,bubbles:!1,cancelable:!1}},WebSocket.CONNECTING=0,WebSocket.OPEN=1,WebSocket.CLOSING=2,WebSocket.CLOSED=3,WebSocket.__flash=null,WebSocket.__instances={},WebSocket.__tasks=[],WebSocket.__nextId=0,WebSocket.loadFlashPolicyFile=function(e){WebSocket.__addTask(function(){WebSocket.__flash.loadManualPolicyFile(e)})},WebSocket.__initialize=function(){if(!WebSocket.__flash){if(WebSocket.__swfLocation&&(window.WEB_SOCKET_SWF_LOCATION=WebSocket.__swfLocation),!window.WEB_SOCKET_SWF_LOCATION)return void e.error(\"[WebSocket] set WEB_SOCKET_SWF_LOCATION to location of WebSocketMain.swf\");var t=document.createElement(\"div\");t.id=\"webSocketContainer\",t.style.position=\"absolute\",WebSocket.__isFlashLite()?(t.style.left=\"0px\",t.style.top=\"0px\"):(t.style.left=\"-100px\",t.style.top=\"-100px\");var n=document.createElement(\"div\");n.id=\"webSocketFlash\",t.appendChild(n),document.body.appendChild(t),swfobject.embedSWF(WEB_SOCKET_SWF_LOCATION,\"webSocketFlash\",\"1\",\"1\",\"10.0.0\",null,null,{hasPriority:!0,swliveconnect:!0,allowScriptAccess:\"always\"},null,function(t){t.success||e.error(\"[WebSocket] swfobject.embedSWF failed\")})}},WebSocket.__onFlashInitialized=function(){setTimeout(function(){WebSocket.__flash=document.getElementById(\"webSocketFlash\"),WebSocket.__flash.setCallerUrl(location.href),WebSocket.__flash.setDebug(!!window.WEB_SOCKET_DEBUG);for(var e=0;e<WebSocket.__tasks.length;++e)WebSocket.__tasks[e]();WebSocket.__tasks=[]},0)},WebSocket.__onFlashEvent=function(){return setTimeout(function(){try{for(var t=WebSocket.__flash.receiveEvents(),n=0;n<t.length;++n)WebSocket.__instances[t[n].webSocketId].__handleEvent(t[n])}catch(t){e.error(t)}},0),!0},WebSocket.__log=function(t){e.log(decodeURIComponent(t))},WebSocket.__error=function(t){e.error(decodeURIComponent(t))},WebSocket.__addTask=function(e){WebSocket.__flash?e():WebSocket.__tasks.push(e)},WebSocket.__isFlashLite=function(){if(!window.navigator||!window.navigator.mimeTypes)return!1;var e=window.navigator.mimeTypes[\"application/x-shockwave-flash\"];return!!(e&&e.enabledPlugin&&e.enabledPlugin.filename)&&!!e.enabledPlugin.filename.match(/flashlite/i)},window.WEB_SOCKET_DISABLE_AUTO_INITIALIZATION||(window.addEventListener?window.addEventListener(\"load\",function(){WebSocket.__initialize()},!1):window.attachEvent(\"onload\",function(){WebSocket.__initialize()}))}}(),function(e,t,n){function r(e){e&&(t.Transport.apply(this,arguments),this.sendBuffer=[])}function i(){}e.XHR=r,t.util.inherit(r,t.Transport),r.prototype.open=function(){return this.socket.setBuffer(!1),this.onOpen(),this.get(),this.setCloseTimeout(),this},r.prototype.payload=function(e){for(var n=[],r=0,i=e.length;r<i;r++)n.push(t.parser.encodePacket(e[r]));this.send(t.parser.encodePayload(n))},r.prototype.send=function(e){return this.post(e),this},r.prototype.post=function(e){function t(){4==this.readyState&&(this.onreadystatechange=i,o.posting=!1,200==this.status?o.socket.setBuffer(!1):o.onClose())}function r(){this.onload=i,o.socket.setBuffer(!1)}var o=this;this.socket.setBuffer(!0),this.sendXHR=this.request(\"POST\"),n.XDomainRequest&&this.sendXHR instanceof XDomainRequest?this.sendXHR.onload=this.sendXHR.onerror=r:this.sendXHR.onreadystatechange=t,this.sendXHR.send(e)},r.prototype.close=function(){return this.onClose(),this},r.prototype.request=function(e){var n=t.util.request(this.socket.isXDomain()),r=t.util.query(this.socket.options.query,\"t=\"+ +new Date);if(n.open(e||\"GET\",this.prepareUrl()+r,!0),\"POST\"==e)try{n.setRequestHeader?n.setRequestHeader(\"Content-type\",\"text/plain;charset=UTF-8\"):n.contentType=\"text/plain\"}catch(e){}return n},r.prototype.scheme=function(){return this.socket.options.secure?\"https\":\"http\"},r.check=function(e,r){try{var i=t.util.request(r),o=n.XDomainRequest&&i instanceof XDomainRequest,a=e&&e.options&&e.options.secure?\"https:\":\"http:\",s=n.location&&a!=n.location.protocol;if(i&&(!o||!s))return!0}catch(e){}return!1},r.xdomainCheck=function(e){return r.check(e,!0)}}(\"undefined\"!=typeof io?io.Transport:module.exports,\"undefined\"!=typeof io?io:module.parent.exports,this),function(e,t){function n(e){t.Transport.XHR.apply(this,arguments)}e.htmlfile=n,t.util.inherit(n,t.Transport.XHR),n.prototype.name=\"htmlfile\",n.prototype.get=function(){this.doc=new(window[[\"Active\"].concat(\"Object\").join(\"X\")])(\"htmlfile\"),this.doc.open(),this.doc.write(\"<html></html>\"),this.doc.close(),this.doc.parentWindow.s=this;var e=this.doc.createElement(\"div\");e.className=\"socketio\",this.doc.body.appendChild(e),this.iframe=this.doc.createElement(\"iframe\"),e.appendChild(this.iframe);var n=this,r=t.util.query(this.socket.options.query,\"t=\"+ +new Date);this.iframe.src=this.prepareUrl()+r,t.util.on(window,\"unload\",function(){n.destroy()})},n.prototype._=function(e,t){e=e.replace(/\\\\\\//g,\"/\"),this.onData(e);try{var n=t.getElementsByTagName(\"script\")[0];n.parentNode.removeChild(n)}catch(e){}},n.prototype.destroy=function(){if(this.iframe){try{this.iframe.src=\"about:blank\"}catch(e){}this.doc=null,this.iframe.parentNode.removeChild(this.iframe),this.iframe=null,CollectGarbage()}},n.prototype.close=function(){return this.destroy(),t.Transport.XHR.prototype.close.call(this)},n.check=function(e){if(\"undefined\"!=typeof window&&[\"Active\"].concat(\"Object\").join(\"X\")in window)try{var n=new(window[[\"Active\"].concat(\"Object\").join(\"X\")])(\"htmlfile\");return n&&t.Transport.XHR.check(e)}catch(e){}return!1},n.xdomainCheck=function(){return!1},t.transports.push(\"htmlfile\")}(\"undefined\"!=typeof io?io.Transport:module.exports,\"undefined\"!=typeof io?io:module.parent.exports),function(e,t,n){function r(){t.Transport.XHR.apply(this,arguments)}function i(){}e[\"xhr-polling\"]=r,t.util.inherit(r,t.Transport.XHR),t.util.merge(r,t.Transport.XHR),r.prototype.name=\"xhr-polling\",r.prototype.heartbeats=function(){return!1},r.prototype.open=function(){var e=this;return t.Transport.XHR.prototype.open.call(e),!1},r.prototype.get=function(){function e(){4==this.readyState&&(this.onreadystatechange=i,200==this.status?(o.onData(this.responseText),o.get()):o.onClose())}function t(){this.onload=i,this.onerror=i,o.retryCounter=1,o.onData(this.responseText),o.get()}function r(){o.retryCounter++,!o.retryCounter||o.retryCounter>3?o.onClose():o.get()}if(this.isOpen){var o=this;this.xhr=this.request(),n.XDomainRequest&&this.xhr instanceof XDomainRequest?(this.xhr.onload=t,this.xhr.onerror=r):this.xhr.onreadystatechange=e,this.xhr.send(null)}},r.prototype.onClose=function(){if(t.Transport.XHR.prototype.onClose.call(this),this.xhr){this.xhr.onreadystatechange=this.xhr.onload=this.xhr.onerror=i;try{this.xhr.abort()}catch(e){}this.xhr=null}},r.prototype.ready=function(e,n){var r=this;t.util.defer(function(){n.call(r)})},t.transports.push(\"xhr-polling\")}(\"undefined\"!=typeof io?io.Transport:module.exports,\"undefined\"!=typeof io?io:module.parent.exports,this),function(e,t,n){function r(e){t.Transport[\"xhr-polling\"].apply(this,arguments),this.index=t.j.length;var n=this;t.j.push(function(e){n._(e)})}var i=n.document&&\"MozAppearance\"in n.document.documentElement.style;e[\"jsonp-polling\"]=r,t.util.inherit(r,t.Transport[\"xhr-polling\"]),r.prototype.name=\"jsonp-polling\",r.prototype.post=function(e){function n(){r(),i.socket.setBuffer(!1)}function r(){i.iframe&&i.form.removeChild(i.iframe);try{a=document.createElement('<iframe name=\"'+i.iframeId+'\">')}catch(e){a=document.createElement(\"iframe\"),a.name=i.iframeId}a.id=i.iframeId,i.form.appendChild(a),i.iframe=a}var i=this,o=t.util.query(this.socket.options.query,\"t=\"+ +new Date+\"&i=\"+this.index);if(!this.form){var a,s=document.createElement(\"form\"),c=document.createElement(\"textarea\"),d=this.iframeId=\"socketio_iframe_\"+this.index;s.className=\"socketio\",s.style.position=\"absolute\",s.style.top=\"0px\",s.style.left=\"0px\",s.style.display=\"none\",s.target=d,s.method=\"POST\",s.setAttribute(\"accept-charset\",\"utf-8\"),c.name=\"d\",s.appendChild(c),document.body.appendChild(s),this.form=s,this.area=c}this.form.action=this.prepareUrl()+o,r(),this.area.value=t.JSON.stringify(e);try{this.form.submit()}catch(e){}this.iframe.attachEvent?a.onreadystatechange=function(){\"complete\"==i.iframe.readyState&&n()}:this.iframe.onload=n,this.socket.setBuffer(!0)},r.prototype.get=function(){var e=this,n=document.createElement(\"script\"),r=t.util.query(this.socket.options.query,\"t=\"+ +new Date+\"&i=\"+this.index);this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),n.async=!0,n.src=this.prepareUrl()+r,n.onerror=function(){e.onClose()};var o=document.getElementsByTagName(\"script\")[0];o.parentNode.insertBefore(n,o),this.script=n,i&&setTimeout(function(){var e=document.createElement(\"iframe\");document.body.appendChild(e),document.body.removeChild(e)},100)},r.prototype._=function(e){return this.onData(e),this.isOpen&&this.get(),this},r.prototype.ready=function(e,n){var r=this;return i?void t.util.load(function(){n.call(r)}):n.call(this)},r.check=function(){return\"document\"in n},r.xdomainCheck=function(){return!0},t.transports.push(\"jsonp-polling\")}(\"undefined\"!=typeof io?io.Transport:module.exports,\"undefined\"!=typeof io?io:module.parent.exports,this),\"function\"==typeof define&&define.amd&&define([],function(){return io})}()},{}],40:[function(e,t,n){function r(e){return{type:e.type,sdp:e.sdp}}function i(e){var t={label:e.id};return e.getAudioTracks().length&&(t.audio=e.getAudioTracks().map(function(e){return e.id})),e.getVideoTracks().length&&(t.video=e.getVideoTracks().map(function(e){return e.id})),t}function o(e,t){var n=this;s.call(this),this.peerconnection=new window.RTCPeerConnection(e,t),this.trace=function(e,t){n.emit(\"PeerConnectionTrace\",{time:new Date,type:e,value:t||\"\"})},this.onicecandidate=null,this.peerconnection.onicecandidate=function(e){n.trace(\"onicecandidate\",e.candidate),null!==n.onicecandidate&&n.onicecandidate(e)},this.onaddstream=null,this.peerconnection.onaddstream=function(e){n.trace(\"onaddstream\",i(e.stream)),null!==n.onaddstream&&n.onaddstream(e)},this.onremovestream=null,this.peerconnection.onremovestream=function(e){n.trace(\"onremovestream\",i(e.stream)),null!==n.onremovestream&&n.onremovestream(e)},this.onsignalingstatechange=null,this.peerconnection.onsignalingstatechange=function(e){n.trace(\"onsignalingstatechange\",n.signalingState),null!==n.onsignalingstatechange&&n.onsignalingstatechange(e)},this.oniceconnectionstatechange=null,this.peerconnection.oniceconnectionstatechange=function(e){n.trace(\"oniceconnectionstatechange\",n.iceConnectionState),null!==n.oniceconnectionstatechange&&n.oniceconnectionstatechange(e)},this.onnegotiationneeded=null,this.peerconnection.onnegotiationneeded=function(e){n.trace(\"onnegotiationneeded\"),null!==n.onnegotiationneeded&&n.onnegotiationneeded(e)},n.ondatachannel=null,this.peerconnection.ondatachannel=function(e){n.trace(\"ondatachannel\",e),null!==n.ondatachannel&&n.ondatachannel(e)},this.getLocalStreams=this.peerconnection.getLocalStreams.bind(this.peerconnection),this.getRemoteStreams=this.peerconnection.getRemoteStreams.bind(this.peerconnection)}var a=e(\"util\"),s=(e(\"webrtc-adapter\"),e(\"wildemitter\"));a.inherits(o,s),[\"signalingState\",\"iceConnectionState\",\"localDescription\",\"remoteDescription\"].forEach(function(e){Object.defineProperty(o.prototype,e,{get:function(){return this.peerconnection[e]}})}),o.prototype.addStream=function(e){this.trace(\"addStream\",i(e)),this.peerconnection.addStream(e)},o.prototype.removeStream=function(e){this.trace(\"removeStream\",i(e)),this.peerconnection.removeStream(e)},o.prototype.createDataChannel=function(e,t){return this.trace(\"createDataChannel\",e,t),this.peerconnection.createDataChannel(e,t)},o.prototype.setLocalDescription=function(e,t,n){var i=this;return this.trace(\"setLocalDescription\",r(e)),this.peerconnection.setLocalDescription(e).then(function(){i.trace(\"setLocalDescriptionOnSuccess\"),t&&t()},function(e){i.trace(\"setLocalDescriptionOnFailure\",e),n&&n(e)})},o.prototype.setRemoteDescription=function(e,t,n){var i=this;return this.trace(\"setRemoteDescription\",r(e)),this.peerconnection.setRemoteDescription(e).then(function(){i.trace(\"setRemoteDescriptionOnSuccess\"),t&&t()},function(e){i.trace(\"setRemoteDescriptionOnFailure\",e),n&&n(e)})},o.prototype.close=function(){this.trace(\"stop\"),\"closed\"!=this.peerconnection.signalingState&&this.peerconnection.close()},o.prototype.createOffer=function(e,t,n){var i=this;return this.trace(\"createOffer\",n),this.peerconnection.createOffer(n).then(function(t){i.trace(\"createOfferOnSuccess\",r(t)),e&&e(t)},function(e){i.trace(\"createOfferOnFailure\",e),t&&t(e)})},o.prototype.createAnswer=function(e,t,n){var i=this;return this.trace(\"createAnswer\",n),this.peerconnection.createAnswer(n).then(function(t){i.trace(\"createAnswerOnSuccess\",r(t)),e&&e(t)},function(e){i.trace(\"createAnswerOnFailure\",e),t&&t(e)})},o.prototype.addIceCandidate=function(e,t,n){var r=this;return this.trace(\"addIceCandidate\",e),this.peerconnection.addIceCandidate(e).then(function(){t&&t()},function(e){r.trace(\"addIceCandidateOnFailure\",e),n&&n(e)})},o.prototype.getStats=function(){this.peerconnection.getStats.apply(this.peerconnection,arguments)},t.exports=o},{util:57,\"webrtc-adapter\":42,wildemitter:52}],41:[function(e,t,n){\"use strict\";function r(e){return new Promise(function(t,n){i(e,t,n)})}var i=null,o=null,a=null,s=null,c=null,d=null,u={log:function(){\"undefined\"!=typeof t||\"function\"==typeof e&&\"function\"==typeof define||console.log.apply(console,arguments)},extractVersion:function(e,t,n){var r=e.match(t);return r&&r.length>=n&&parseInt(r[n],10)}};if(\"object\"==typeof window&&(!window.HTMLMediaElement||\"srcObject\"in window.HTMLMediaElement.prototype||Object.defineProperty(window.HTMLMediaElement.prototype,\"srcObject\",{get:function(){return\"mozSrcObject\"in this?this.mozSrcObject:this._srcObject},set:function(e){\"mozSrcObject\"in this?this.mozSrcObject=e:(this._srcObject=e,this.src=URL.createObjectURL(e))}}),i=window.navigator&&window.navigator.getUserMedia),o=function(e,t){e.srcObject=t},a=function(e,t){e.srcObject=t.srcObject},\"undefined\"!=typeof window&&window.navigator)if(navigator.mozGetUserMedia){if(u.log(\"This appears to be Firefox\"),s=\"firefox\",c=u.extractVersion(navigator.userAgent,/Firefox\\/([0-9]+)\\./,1),d=31,window.RTCPeerConnection||(window.RTCPeerConnection=function(e,t){if(c<38&&e&&e.iceServers){for(var n=[],r=0;r<e.iceServers.length;r++){var i=e.iceServers[r];if(i.hasOwnProperty(\"urls\"))for(var o=0;o<i.urls.length;o++){var a={url:i.urls[o]};0===i.urls[o].indexOf(\"turn\")&&(a.username=i.username,a.credential=i.credential),n.push(a)}else n.push(e.iceServers[r])}e.iceServers=n}return new mozRTCPeerConnection(e,t)},window.RTCPeerConnection.prototype=mozRTCPeerConnection.prototype,mozRTCPeerConnection.generateCertificate&&Object.defineProperty(window.RTCPeerConnection,\"generateCertificate\",{get:function(){return arguments.length?mozRTCPeerConnection.generateCertificate.apply(null,arguments):mozRTCPeerConnection.generateCertificate}}),window.RTCSessionDescription=mozRTCSessionDescription,window.RTCIceCandidate=mozRTCIceCandidate),i=function(e,t,n){var r=function(e){if(\"object\"!=typeof e||e.require)return e;var t=[];return Object.keys(e).forEach(function(n){if(\"require\"!==n&&\"advanced\"!==n&&\"mediaSource\"!==n){var r=e[n]=\"object\"==typeof e[n]?e[n]:{ideal:e[n]};if(void 0===r.min&&void 0===r.max&&void 0===r.exact||t.push(n),void 0!==r.exact&&(\"number\"==typeof r.exact?r.min=r.max=r.exact:e[n]=r.exact,delete r.exact),void 0!==r.ideal){e.advanced=e.advanced||[];var i={};\"number\"==typeof r.ideal?i[n]={min:r.ideal,max:r.ideal}:i[n]=r.ideal,e.advanced.push(i),delete r.ideal,Object.keys(r).length||delete e[n]}}}),t.length&&(e.require=t),e};return c<38&&(u.log(\"spec: \"+JSON.stringify(e)),e.audio&&(e.audio=r(e.audio)),e.video&&(e.video=r(e.video)),u.log(\"ff37: \"+JSON.stringify(e))),navigator.mozGetUserMedia(e,t,n)},navigator.getUserMedia=i,navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:r,addEventListener:function(){},removeEventListener:function(){}}),navigator.mediaDevices.enumerateDevices=navigator.mediaDevices.enumerateDevices||function(){return new Promise(function(e){var t=[{kind:\"audioinput\",deviceId:\"default\",label:\"\",groupId:\"\"},{kind:\"videoinput\",deviceId:\"default\",label:\"\",groupId:\"\"}];e(t)})},c<41){var p=navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);navigator.mediaDevices.enumerateDevices=function(){return p().then(void 0,function(e){if(\"NotFoundError\"===e.name)return[];throw e})}}}else if(navigator.webkitGetUserMedia&&window.webkitRTCPeerConnection){u.log(\"This appears to be Chrome\"),s=\"chrome\",c=u.extractVersion(navigator.userAgent,/Chrom(e|ium)\\/([0-9]+)\\./,2),d=38,window.RTCPeerConnection=function(e,t){e&&e.iceTransportPolicy&&(e.iceTransports=e.iceTransportPolicy);var n=new webkitRTCPeerConnection(e,t),r=n.getStats.bind(n);return n.getStats=function(e,t,n){var i=this,o=arguments;if(arguments.length>0&&\"function\"==typeof e)return r(e,t);var a=function(e){var t={},n=e.result();return n.forEach(function(e){var n={id:e.id,timestamp:e.timestamp,type:e.type};e.names().forEach(function(t){n[t]=e.stat(t)}),t[n.id]=n}),t};if(arguments.length>=2){var s=function(e){o[1](a(e))};return r.apply(this,[s,arguments[0]])}return new Promise(function(t,n){1===o.length&&null===e?r.apply(i,[function(e){t.apply(null,[a(e)])},n]):r.apply(i,[t,n])})},n},window.RTCPeerConnection.prototype=webkitRTCPeerConnection.prototype,webkitRTCPeerConnection.generateCertificate&&Object.defineProperty(window.RTCPeerConnection,\"generateCertificate\",{get:function(){return arguments.length?webkitRTCPeerConnection.generateCertificate.apply(null,arguments):webkitRTCPeerConnection.generateCertificate}}),[\"createOffer\",\"createAnswer\"].forEach(function(e){var t=webkitRTCPeerConnection.prototype[e];webkitRTCPeerConnection.prototype[e]=function(){var e=this;if(arguments.length<1||1===arguments.length&&\"object\"==typeof arguments[0]){\nvar n=1===arguments.length?arguments[0]:void 0;return new Promise(function(r,i){t.apply(e,[r,i,n])})}return t.apply(this,arguments)}}),[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(e){var t=webkitRTCPeerConnection.prototype[e];webkitRTCPeerConnection.prototype[e]=function(){var e=arguments,n=this;return new Promise(function(r,i){t.apply(n,[e[0],function(){r(),e.length>=2&&e[1].apply(null,[])},function(t){i(t),e.length>=3&&e[2].apply(null,[t])}])})}});var l=function(e){if(\"object\"!=typeof e||e.mandatory||e.optional)return e;var t={};return Object.keys(e).forEach(function(n){if(\"require\"!==n&&\"advanced\"!==n&&\"mediaSource\"!==n){var r=\"object\"==typeof e[n]?e[n]:{ideal:e[n]};void 0!==r.exact&&\"number\"==typeof r.exact&&(r.min=r.max=r.exact);var i=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):\"deviceId\"===t?\"sourceId\":t};if(void 0!==r.ideal){t.optional=t.optional||[];var o={};\"number\"==typeof r.ideal?(o[i(\"min\",n)]=r.ideal,t.optional.push(o),o={},o[i(\"max\",n)]=r.ideal,t.optional.push(o)):(o[i(\"\",n)]=r.ideal,t.optional.push(o))}void 0!==r.exact&&\"number\"!=typeof r.exact?(t.mandatory=t.mandatory||{},t.mandatory[i(\"\",n)]=r.exact):[\"min\",\"max\"].forEach(function(e){void 0!==r[e]&&(t.mandatory=t.mandatory||{},t.mandatory[i(e,n)]=r[e])})}}),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t};if(i=function(e,t,n){return e.audio&&(e.audio=l(e.audio)),e.video&&(e.video=l(e.video)),u.log(\"chrome: \"+JSON.stringify(e)),navigator.webkitGetUserMedia(e,t,n)},navigator.getUserMedia=i,navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:r,enumerateDevices:function(){return new Promise(function(e){var t={audio:\"audioinput\",video:\"videoinput\"};return MediaStreamTrack.getSources(function(n){e(n.map(function(e){return{label:e.label,kind:t[e.kind],deviceId:e.id,groupId:\"\"}}))})})}}),navigator.mediaDevices.getUserMedia){var f=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(e){return u.log(\"spec:   \"+JSON.stringify(e)),e.audio=l(e.audio),e.video=l(e.video),u.log(\"chrome: \"+JSON.stringify(e)),f(e)}}else navigator.mediaDevices.getUserMedia=function(e){return r(e)};\"undefined\"==typeof navigator.mediaDevices.addEventListener&&(navigator.mediaDevices.addEventListener=function(){u.log(\"Dummy mediaDevices.addEventListener called.\")}),\"undefined\"==typeof navigator.mediaDevices.removeEventListener&&(navigator.mediaDevices.removeEventListener=function(){u.log(\"Dummy mediaDevices.removeEventListener called.\")}),o=function(e,t){c>=43?e.srcObject=t:\"undefined\"!=typeof e.src?e.src=URL.createObjectURL(t):u.log(\"Error attaching stream to element.\")},a=function(e,t){c>=43?e.srcObject=t.srcObject:e.src=t.src}}else if(navigator.mediaDevices&&navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)){if(u.log(\"This appears to be Edge\"),s=\"edge\",c=u.extractVersion(navigator.userAgent,/Edge\\/(\\d+).(\\d+)$/,2),d=10547,window.RTCIceGatherer){var h=function(){return Math.random().toString(36).substr(2,10)},m=h(),v={};v.splitLines=function(e){return e.trim().split(\"\\n\").map(function(e){return e.trim()})},v.splitSections=function(e){var t=e.split(\"\\r\\nm=\");return t.map(function(e,t){return(t>0?\"m=\"+e:e).trim()+\"\\r\\n\"})},v.matchPrefix=function(e,t){return v.splitLines(e).filter(function(e){return 0===e.indexOf(t)})},v.parseCandidate=function(e){var t;t=0===e.indexOf(\"a=candidate:\")?e.substring(12).split(\" \"):e.substring(10).split(\" \");for(var n={foundation:t[0],component:t[1],protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],port:parseInt(t[5],10),type:t[7]},r=8;r<t.length;r+=2)switch(t[r]){case\"raddr\":n.relatedAddress=t[r+1];break;case\"rport\":n.relatedPort=parseInt(t[r+1],10);break;case\"tcptype\":n.tcpType=t[r+1]}return n},v.writeCandidate=function(e){var t=[];t.push(e.foundation),t.push(e.component),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.ip),t.push(e.port);var n=e.type;return t.push(\"typ\"),t.push(n),\"host\"!==n&&e.relatedAddress&&e.relatedPort&&(t.push(\"raddr\"),t.push(e.relatedAddress),t.push(\"rport\"),t.push(e.relatedPort)),e.tcpType&&\"tcp\"===e.protocol.toLowerCase()&&(t.push(\"tcptype\"),t.push(e.tcpType)),\"candidate:\"+t.join(\" \")},v.parseRtpMap=function(e){var t=e.substr(9).split(\" \"),n={payloadType:parseInt(t.shift(),10)};return t=t[0].split(\"/\"),n.name=t[0],n.clockRate=parseInt(t[1],10),n.numChannels=3===t.length?parseInt(t[2],10):1,n},v.writeRtpMap=function(e){var t=e.payloadType;return void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType),\"a=rtpmap:\"+t+\" \"+e.name+\"/\"+e.clockRate+(1!==e.numChannels?\"/\"+e.numChannels:\"\")+\"\\r\\n\"},v.parseFmtp=function(e){for(var t,n={},r=e.substr(e.indexOf(\" \")+1).split(\";\"),i=0;i<r.length;i++)t=r[i].trim().split(\"=\"),n[t[0].trim()]=t[1];return n},v.writeFtmp=function(e){var t=\"\",n=e.payloadType;if(void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.parameters&&e.parameters.length){var r=[];Object.keys(e.parameters).forEach(function(t){r.push(t+\"=\"+e.parameters[t])}),t+=\"a=fmtp:\"+n+\" \"+r.join(\";\")+\"\\r\\n\"}return t},v.parseRtcpFb=function(e){var t=e.substr(e.indexOf(\" \")+1).split(\" \");return{type:t.shift(),parameter:t.join(\" \")}},v.writeRtcpFb=function(e){var t=\"\",n=e.payloadType;return void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach(function(e){t+=\"a=rtcp-fb:\"+n+\" \"+e.type+\" \"+e.parameter+\"\\r\\n\"}),t},v.parseSsrcMedia=function(e){var t=e.indexOf(\" \"),n={ssrc:e.substr(7,t-7)},r=e.indexOf(\":\",t);return r>-1?(n.attribute=e.substr(t+1,r-t-1),n.value=e.substr(r+1)):n.attribute=e.substr(t+1),n},v.getDtlsParameters=function(e,t){var n=v.splitLines(e);n=n.concat(v.splitLines(t));var r=n.filter(function(e){return 0===e.indexOf(\"a=fingerprint:\")})[0].substr(14),i={role:\"auto\",fingerprints:[{algorithm:r.split(\" \")[0],value:r.split(\" \")[1]}]};return i},v.writeDtlsParameters=function(e,t){var n=\"a=setup:\"+t+\"\\r\\n\";return e.fingerprints.forEach(function(e){n+=\"a=fingerprint:\"+e.algorithm+\" \"+e.value+\"\\r\\n\"}),n},v.getIceParameters=function(e,t){var n=v.splitLines(e);n=n.concat(v.splitLines(t));var r={usernameFragment:n.filter(function(e){return 0===e.indexOf(\"a=ice-ufrag:\")})[0].substr(12),password:n.filter(function(e){return 0===e.indexOf(\"a=ice-pwd:\")})[0].substr(10)};return r},v.writeIceParameters=function(e){return\"a=ice-ufrag:\"+e.usernameFragment+\"\\r\\na=ice-pwd:\"+e.password+\"\\r\\n\"},v.parseRtpParameters=function(e){for(var t={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},n=v.splitLines(e),r=n[0].split(\" \"),i=3;i<r.length;i++){var o=r[i],a=v.matchPrefix(e,\"a=rtpmap:\"+o+\" \")[0];if(a){var s=v.parseRtpMap(a),c=v.matchPrefix(e,\"a=fmtp:\"+o+\" \");s.parameters=c.length?v.parseFmtp(c[0]):{},s.rtcpFeedback=v.matchPrefix(e,\"a=rtcp-fb:\"+o+\" \").map(v.parseRtcpFb),t.codecs.push(s)}}return t},v.writeRtpDescription=function(e,t){var n=\"\";return n+=\"m=\"+e+\" \",n+=t.codecs.length>0?\"9\":\"0\",n+=\" UDP/TLS/RTP/SAVPF \",n+=t.codecs.map(function(e){return void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType}).join(\" \")+\"\\r\\n\",n+=\"c=IN IP4 0.0.0.0\\r\\n\",n+=\"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\",t.codecs.forEach(function(e){n+=v.writeRtpMap(e),n+=v.writeFtmp(e),n+=v.writeRtcpFb(e)}),n+=\"a=rtcp-mux\\r\\n\"},v.writeSessionBoilerplate=function(){return\"v=0\\r\\no=thisisadapterortc 8169639915646943137 2 IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\"},v.writeMediaSection=function(e,t,n,r){var i=v.writeRtpDescription(e.kind,t);if(i+=v.writeIceParameters(e.iceGatherer.getLocalParameters()),i+=v.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),\"offer\"===n?\"actpass\":\"active\"),i+=\"a=mid:\"+e.mid+\"\\r\\n\",i+=e.rtpSender&&e.rtpReceiver?\"a=sendrecv\\r\\n\":e.rtpSender?\"a=sendonly\\r\\n\":e.rtpReceiver?\"a=recvonly\\r\\n\":\"a=inactive\\r\\n\",e.rtpSender){var o=\"msid:\"+r.id+\" \"+e.rtpSender.track.id+\"\\r\\n\";i+=\"a=\"+o,i+=\"a=ssrc:\"+e.sendSsrc+\" \"+o}return i+=\"a=ssrc:\"+e.sendSsrc+\" cname:\"+m+\"\\r\\n\"},v.getDirection=function(e,t){for(var n=v.splitLines(e),r=0;r<n.length;r++)switch(n[r]){case\"a=sendrecv\":case\"a=sendonly\":case\"a=recvonly\":case\"a=inactive\":return n[r].substr(2)}return t?v.getDirection(t):\"sendrecv\"},window.RTCIceCandidate||(window.RTCIceCandidate=function(e){return e}),window.RTCSessionDescription||(window.RTCSessionDescription=function(e){return e}),window.RTCPeerConnection=function(e){var t=this;if(this.onicecandidate=null,this.onaddstream=null,this.onremovestream=null,this.onsignalingstatechange=null,this.oniceconnectionstatechange=null,this.onnegotiationneeded=null,this.ondatachannel=null,this.localStreams=[],this.remoteStreams=[],this.getLocalStreams=function(){return t.localStreams},this.getRemoteStreams=function(){return t.remoteStreams},this.localDescription=new b({type:\"\",sdp:\"\"}),this.remoteDescription=new b({type:\"\",sdp:\"\"}),this.signalingState=\"stable\",this.iceConnectionState=\"new\",this.iceOptions={gatherPolicy:\"all\",iceServers:[]},e&&e.iceTransportPolicy)switch(e.iceTransportPolicy){case\"all\":case\"relay\":this.iceOptions.gatherPolicy=e.iceTransportPolicy;break;case\"none\":throw new TypeError('iceTransportPolicy \"none\" not supported')}e&&e.iceServers&&e.iceServers.forEach(function(e){if(e.urls){var n;n=\"string\"==typeof e.urls?e.urls:e.urls[0],n.indexOf(\"transport=udp\")!==-1&&t.iceServers.push({username:e.username,credential:e.credential,urls:n})}}),this.transceivers=[],this._localIceCandidatesBuffer=[]},window.RTCPeerConnection.prototype._emitBufferedCandidates=function(){var e=this;this._localIceCandidatesBuffer.forEach(function(t){null!==e.onicecandidate&&e.onicecandidate(t)}),this._localIceCandidatesBuffer=[]},window.RTCPeerConnection.prototype.addStream=function(e){this.localStreams.push(e.clone()),this._maybeFireNegotiationNeeded()},window.RTCPeerConnection.prototype.removeStream=function(e){var t=this.localStreams.indexOf(e);t>-1&&(this.localStreams.splice(t,1),this._maybeFireNegotiationNeeded())},window.RTCPeerConnection.prototype._getCommonCapabilities=function(e,t){var n={codecs:[],headerExtensions:[],fecMechanisms:[]};return e.codecs.forEach(function(e){for(var r=0;r<t.codecs.length;r++){var i=t.codecs[r];if(e.name.toLowerCase()===i.name.toLowerCase()&&e.clockRate===i.clockRate&&e.numChannels===i.numChannels){n.codecs.push(i);break}}}),e.headerExtensions.forEach(function(e){for(var r=0;r<t.headerExtensions.length;r++){var i=t.headerExtensions[r];if(e.uri===i.uri){n.headerExtensions.push(i);break}}}),n},window.RTCPeerConnection.prototype._createIceAndDtlsTransports=function(e,t){var n=this,r=new RTCIceGatherer(n.iceOptions),i=new RTCIceTransport(r);r.onlocalcandidate=function(o){var a={};a.candidate={sdpMid:e,sdpMLineIndex:t};var s=o.candidate;s&&0!==Object.keys(s).length?(s.component=\"RTCP\"===i.component?2:1,a.candidate.candidate=v.writeCandidate(s)):(void 0===r.state&&(r.state=\"completed\"),a.candidate.candidate=\"candidate:1 1 udp 1 0.0.0.0 9 typ endOfCandidates\");var c=n.transceivers.every(function(e){return e.iceGatherer&&\"completed\"===e.iceGatherer.state});null!==n.onicecandidate&&(n.localDescription&&\"\"===n.localDescription.type?(n._localIceCandidatesBuffer.push(a),c&&n._localIceCandidatesBuffer.push({})):(n.onicecandidate(a),c&&n.onicecandidate({})))},i.onicestatechange=function(){n._updateConnectionState()};var o=new RTCDtlsTransport(i);return o.ondtlsstatechange=function(){n._updateConnectionState()},o.onerror=function(){o.state=\"failed\",n._updateConnectionState()},{iceGatherer:r,iceTransport:i,dtlsTransport:o}},window.RTCPeerConnection.prototype._transceive=function(e,t,n){var r=this._getCommonCapabilities(e.localCapabilities,e.remoteCapabilities);t&&e.rtpSender&&(r.encodings=[{ssrc:e.sendSsrc}],r.rtcp={cname:m,ssrc:e.recvSsrc},e.rtpSender.send(r)),n&&e.rtpReceiver&&(r.encodings=[{ssrc:e.recvSsrc}],r.rtcp={cname:e.cname,ssrc:e.sendSsrc},e.rtpReceiver.receive(r))},window.RTCPeerConnection.prototype.setLocalDescription=function(e){var t=this;if(\"offer\"===e.type)this._pendingOffer&&(this.transceivers=this._pendingOffer,delete this._pendingOffer);else if(\"answer\"===e.type){var n=v.splitSections(t.remoteDescription.sdp),r=n.shift();n.forEach(function(e,n){var i=t.transceivers[n],o=i.iceGatherer,a=i.iceTransport,s=i.dtlsTransport,c=i.localCapabilities,d=i.remoteCapabilities,u=\"0\"===e.split(\"\\n\",1)[0].split(\" \",2)[1];if(!u){var p=v.getIceParameters(e,r);a.start(o,p,\"controlled\");var l=v.getDtlsParameters(e,r);s.start(l);var f=t._getCommonCapabilities(c,d);t._transceive(i,f.codecs.length>0,!1)}})}switch(this.localDescription=e,e.type){case\"offer\":this._updateSignalingState(\"have-local-offer\");break;case\"answer\":this._updateSignalingState(\"stable\");break;default:throw new TypeError('unsupported type \"'+e.type+'\"')}var i=arguments.length>1&&\"function\"==typeof arguments[1];if(i){var o=arguments[1];window.setTimeout(function(){o(),t._emitBufferedCandidates()},0)}var a=Promise.resolve();return a.then(function(){i||window.setTimeout(t._emitBufferedCandidates.bind(t),0)}),a},window.RTCPeerConnection.prototype.setRemoteDescription=function(e){var t=this,n=new MediaStream,r=v.splitSections(e.sdp),i=r.shift();switch(r.forEach(function(r,o){var a,s,c,d,u,p,l,f,h,m,g,y=v.splitLines(r),w=y[0].substr(2).split(\" \"),b=w[0],S=\"0\"===w[1],C=v.getDirection(r,i),k=v.parseRtpParameters(r);S||(m=v.getIceParameters(r,i),g=v.getDtlsParameters(r,i));var T,E=v.matchPrefix(r,\"a=mid:\")[0].substr(6),O=v.matchPrefix(r,\"a=ssrc:\").map(function(e){return v.parseSsrcMedia(e)}).filter(function(e){return\"cname\"===e.attribute})[0];if(O&&(f=parseInt(O.ssrc,10),T=O.value),\"offer\"===e.type){var R=t._createIceAndDtlsTransports(E,o);if(h=RTCRtpReceiver.getCapabilities(b),l=1001*(2*o+2),p=new RTCRtpReceiver(R.dtlsTransport,b),n.addTrack(p.track),t.localStreams.length>0&&t.localStreams[0].getTracks().length>=o){var P=t.localStreams[0].getTracks()[o];u=new RTCRtpSender(P,R.dtlsTransport)}t.transceivers[o]={iceGatherer:R.iceGatherer,iceTransport:R.iceTransport,dtlsTransport:R.dtlsTransport,localCapabilities:h,remoteCapabilities:k,rtpSender:u,rtpReceiver:p,kind:b,mid:E,cname:T,sendSsrc:l,recvSsrc:f},t._transceive(t.transceivers[o],!1,\"sendrecv\"===C||\"sendonly\"===C)}else\"answer\"!==e.type||S||(a=t.transceivers[o],s=a.iceGatherer,c=a.iceTransport,d=a.dtlsTransport,u=a.rtpSender,p=a.rtpReceiver,l=a.sendSsrc,h=a.localCapabilities,t.transceivers[o].recvSsrc=f,t.transceivers[o].remoteCapabilities=k,t.transceivers[o].cname=T,c.start(s,m,\"controlling\"),d.start(g),t._transceive(a,\"sendrecv\"===C||\"recvonly\"===C,\"sendrecv\"===C||\"sendonly\"===C),!p||\"sendrecv\"!==C&&\"sendonly\"!==C?delete a.rtpReceiver:n.addTrack(p.track))}),this.remoteDescription=e,e.type){case\"offer\":this._updateSignalingState(\"have-remote-offer\");break;case\"answer\":this._updateSignalingState(\"stable\");break;default:throw new TypeError('unsupported type \"'+e.type+'\"')}return window.setTimeout(function(){null!==t.onaddstream&&n.getTracks().length&&(t.remoteStreams.push(n),window.setTimeout(function(){t.onaddstream({stream:n})},0))},0),arguments.length>1&&\"function\"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},window.RTCPeerConnection.prototype.close=function(){this.transceivers.forEach(function(e){e.iceTransport&&e.iceTransport.stop(),e.dtlsTransport&&e.dtlsTransport.stop(),e.rtpSender&&e.rtpSender.stop(),e.rtpReceiver&&e.rtpReceiver.stop()}),this._updateSignalingState(\"closed\")},window.RTCPeerConnection.prototype._updateSignalingState=function(e){this.signalingState=e,null!==this.onsignalingstatechange&&this.onsignalingstatechange()},window.RTCPeerConnection.prototype._maybeFireNegotiationNeeded=function(){null!==this.onnegotiationneeded&&this.onnegotiationneeded()},window.RTCPeerConnection.prototype._updateConnectionState=function(){var e,t=this,n={new:0,closed:0,connecting:0,checking:0,connected:0,completed:0,failed:0};this.transceivers.forEach(function(e){n[e.iceTransport.state]++,n[e.dtlsTransport.state]++}),n.connected+=n.completed,e=\"new\",n.failed>0?e=\"failed\":n.connecting>0||n.checking>0?e=\"connecting\":n.disconnected>0?e=\"disconnected\":n.new>0?e=\"new\":(n.connecting>0||n.completed>0)&&(e=\"connected\"),e!==t.iceConnectionState&&(t.iceConnectionState=e,null!==this.oniceconnectionstatechange&&this.oniceconnectionstatechange())},window.RTCPeerConnection.prototype.createOffer=function(){var e=this;if(this._pendingOffer)throw new Error(\"createOffer called while there is a pending offer.\");var t;1===arguments.length&&\"function\"!=typeof arguments[0]?t=arguments[0]:3===arguments.length&&(t=arguments[2]);var n=[],r=0,i=0;if(this.localStreams.length&&(r=this.localStreams[0].getAudioTracks().length,i=this.localStreams[0].getVideoTracks().length),t){if(t.mandatory||t.optional)throw new TypeError(\"Legacy mandatory/optional constraints not supported.\");void 0!==t.offerToReceiveAudio&&(r=t.offerToReceiveAudio),void 0!==t.offerToReceiveVideo&&(i=t.offerToReceiveVideo)}for(this.localStreams.length&&this.localStreams[0].getTracks().forEach(function(e){n.push({kind:e.kind,track:e,wantReceive:\"audio\"===e.kind?r>0:i>0}),\"audio\"===e.kind?r--:\"video\"===e.kind&&i--});r>0||i>0;)r>0&&(n.push({kind:\"audio\",wantReceive:!0}),r--),i>0&&(n.push({kind:\"video\",wantReceive:!0}),i--);var o=v.writeSessionBoilerplate(),a=[];n.forEach(function(t,n){var r,i,s=t.track,c=t.kind,d=h(),u=e._createIceAndDtlsTransports(d,n),p=RTCRtpSender.getCapabilities(c),l=1001*(2*n+1);s&&(r=new RTCRtpSender(s,u.dtlsTransport)),t.wantReceive&&(i=new RTCRtpReceiver(u.dtlsTransport,c)),a[n]={iceGatherer:u.iceGatherer,iceTransport:u.iceTransport,dtlsTransport:u.dtlsTransport,localCapabilities:p,remoteCapabilities:null,rtpSender:r,rtpReceiver:i,kind:c,mid:d,sendSsrc:l,recvSsrc:null};var f=a[n];o+=v.writeMediaSection(f,f.localCapabilities,\"offer\",e.localStreams[0])}),this._pendingOffer=a;var s=new b({type:\"offer\",sdp:o});return arguments.length&&\"function\"==typeof arguments[0]&&window.setTimeout(arguments[0],0,s),Promise.resolve(s)},window.RTCPeerConnection.prototype.createAnswer=function(){var e,t=this;1===arguments.length&&\"function\"!=typeof arguments[0]?e=arguments[0]:3===arguments.length&&(e=arguments[2]);var n=v.writeSessionBoilerplate();this.transceivers.forEach(function(e){var r=t._getCommonCapabilities(e.localCapabilities,e.remoteCapabilities);n+=v.writeMediaSection(e,r,\"answer\",t.localStreams[0])});var r=new b({type:\"answer\",sdp:n});return arguments.length&&\"function\"==typeof arguments[0]&&window.setTimeout(arguments[0],0,r),Promise.resolve(r)},window.RTCPeerConnection.prototype.addIceCandidate=function(e){var t=e.sdpMLineIndex;if(e.sdpMid)for(var n=0;n<this.transceivers.length;n++)if(this.transceivers[n].mid===e.sdpMid){t=n;break}var r=this.transceivers[t];if(r){var i=Object.keys(e.candidate).length>0?v.parseCandidate(e.candidate):{};if(\"tcp\"===i.protocol&&0===i.port)return;if(\"1\"!==i.component)return;\"endOfCandidates\"===i.type&&(i={}),r.iceTransport.addRemoteCandidate(i)}return arguments.length>1&&\"function\"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},window.RTCPeerConnection.prototype.getStats=function(){var e=[];this.transceivers.forEach(function(t){[\"rtpSender\",\"rtpReceiver\",\"iceGatherer\",\"iceTransport\",\"dtlsTransport\"].forEach(function(n){t[n]&&e.push(t[n].getStats())})});var t=arguments.length>1&&\"function\"==typeof arguments[1]&&arguments[1];return new Promise(function(n){var r={};Promise.all(e).then(function(e){e.forEach(function(e){Object.keys(e).forEach(function(t){r[t]=e[t]})}),t&&window.setTimeout(t,0,r),n(r)})})}}}else u.log(\"Browser does not appear to be WebRTC-capable\");else u.log(\"This does not appear to be a browser\"),s=\"not a browser\";\"object\"!=typeof window||!window.RTCPeerConnection||\"ontrack\"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,\"ontrack\",{get:function(){return this._ontrack},set:function(e){var t=this;this._ontrack&&(this.removeEventListener(\"track\",this._ontrack),this.removeEventListener(\"addstream\",this._ontrackpoly)),this.addEventListener(\"track\",this._ontrack=e),this.addEventListener(\"addstream\",this._ontrackpoly=function(e){\"chrome\"===s&&e.stream.addEventListener(\"addtrack\",function(n){var r=new Event(\"track\");r.track=n.track,r.receiver={track:n.track},r.streams=[e.stream],t.dispatchEvent(r)}),e.stream.getTracks().forEach(function(t){var n=new Event(\"track\");n.track=t,n.receiver={track:t},n.streams=[e.stream],this.dispatchEvent(n)}.bind(this))}.bind(this))}});var g={};try{Object.defineProperty(g,\"version\",{set:function(e){c=e}})}catch(e){}if(\"undefined\"!=typeof t){var y,w,b;\"undefined\"!=typeof window&&(y=window.RTCPeerConnection,w=window.RTCIceCandidate,b=window.RTCSessionDescription),t.exports={RTCPeerConnection:y,RTCIceCandidate:w,RTCSessionDescription:b,getUserMedia:i,attachMediaStream:o,reattachMediaStream:a,webrtcDetectedBrowser:s,webrtcDetectedVersion:c,webrtcMinimumVersion:d,webrtcTesting:g,webrtcUtils:u}}else\"function\"==typeof e&&\"function\"==typeof define&&define([],function(){return{RTCPeerConnection:window.RTCPeerConnection,RTCIceCandidate:window.RTCIceCandidate,RTCSessionDescription:window.RTCSessionDescription,getUserMedia:i,attachMediaStream:o,reattachMediaStream:a,webrtcDetectedBrowser:s,webrtcDetectedVersion:c,webrtcMinimumVersion:d,webrtcTesting:g,webrtcUtils:u}})},{}],42:[function(e,t,n){\"use strict\";!function(){var n=e(\"./utils\").log,r=e(\"./utils\").browserDetails;t.exports.browserDetails=r,t.exports.extractVersion=e(\"./utils\").extractVersion,t.exports.disableLog=e(\"./utils\").disableLog;var i=e(\"./chrome/chrome_shim\")||null,o=e(\"./edge/edge_shim\")||null,a=e(\"./firefox/firefox_shim\")||null,s=e(\"./safari/safari_shim\")||null;switch(r.browser){case\"opera\":case\"chrome\":if(!i||!i.shimPeerConnection)return void n(\"Chrome shim is not included in this adapter release.\");n(\"adapter.js shimming chrome.\"),t.exports.browserShim=i,i.shimGetUserMedia(),i.shimMediaStream(),i.shimSourceObject(),i.shimPeerConnection(),i.shimOnTrack();break;case\"firefox\":if(!a||!a.shimPeerConnection)return void n(\"Firefox shim is not included in this adapter release.\");n(\"adapter.js shimming firefox.\"),t.exports.browserShim=a,a.shimGetUserMedia(),a.shimSourceObject(),a.shimPeerConnection(),a.shimOnTrack();break;case\"edge\":if(!o||!o.shimPeerConnection)return void n(\"MS edge shim is not included in this adapter release.\");n(\"adapter.js shimming edge.\"),t.exports.browserShim=o,o.shimGetUserMedia(),o.shimPeerConnection();break;case\"safari\":if(!s)return void n(\"Safari shim is not included in this adapter release.\");n(\"adapter.js shimming safari.\"),t.exports.browserShim=s,s.shimGetUserMedia();break;default:n(\"Unsupported browser!\")}}()},{\"./chrome/chrome_shim\":43,\"./edge/edge_shim\":45,\"./firefox/firefox_shim\":47,\"./safari/safari_shim\":49,\"./utils\":50}],43:[function(e,t,n){\"use strict\";var r=e(\"../utils.js\").log,i=e(\"../utils.js\").browserDetails,o={shimMediaStream:function(){window.MediaStream=window.MediaStream||window.webkitMediaStream},shimOnTrack:function(){\"object\"!=typeof window||!window.RTCPeerConnection||\"ontrack\"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,\"ontrack\",{get:function(){return this._ontrack},set:function(e){var t=this;this._ontrack&&(this.removeEventListener(\"track\",this._ontrack),this.removeEventListener(\"addstream\",this._ontrackpoly)),this.addEventListener(\"track\",this._ontrack=e),this.addEventListener(\"addstream\",this._ontrackpoly=function(e){e.stream.addEventListener(\"addtrack\",function(n){var r=new Event(\"track\");r.track=n.track,r.receiver={track:n.track},r.streams=[e.stream],t.dispatchEvent(r)}),e.stream.getTracks().forEach(function(t){var n=new Event(\"track\");n.track=t,n.receiver={track:t},n.streams=[e.stream],this.dispatchEvent(n)}.bind(this))}.bind(this))}})},shimSourceObject:function(){\"object\"==typeof window&&(!window.HTMLMediaElement||\"srcObject\"in window.HTMLMediaElement.prototype||Object.defineProperty(window.HTMLMediaElement.prototype,\"srcObject\",{get:function(){return this._srcObject},set:function(e){var t=this;return this._srcObject=e,this.src&&URL.revokeObjectURL(this.src),e?(this.src=URL.createObjectURL(e),e.addEventListener(\"addtrack\",function(){t.src&&URL.revokeObjectURL(t.src),t.src=URL.createObjectURL(e)}),void e.addEventListener(\"removetrack\",function(){t.src&&URL.revokeObjectURL(t.src),t.src=URL.createObjectURL(e)})):void(this.src=\"\")}}))},shimPeerConnection:function(){window.RTCPeerConnection=function(e,t){r(\"PeerConnection\"),e&&e.iceTransportPolicy&&(e.iceTransports=e.iceTransportPolicy);var n=new webkitRTCPeerConnection(e,t),i=n.getStats.bind(n);return n.getStats=function(e,t,n){var r=this,o=arguments;if(arguments.length>0&&\"function\"==typeof e)return i(e,t);var a=function(e){var t={},n=e.result();return n.forEach(function(e){var n={id:e.id,timestamp:e.timestamp,type:e.type};e.names().forEach(function(t){n[t]=e.stat(t)}),t[n.id]=n}),t},s=function(e,t){var n=new Map(Object.keys(e).map(function(t){return[t,e[t]]}));return t=t||e,Object.keys(t).forEach(function(e){n[e]=t[e]}),n};if(arguments.length>=2){var c=function(e){o[1](s(a(e)))};return i.apply(this,[c,arguments[0]])}return new Promise(function(t,n){1===o.length&&\"object\"==typeof e?i.apply(r,[function(e){t(s(a(e)))},n]):i.apply(r,[function(e){t(s(a(e),e.result()))},n])}).then(t,n)},n},window.RTCPeerConnection.prototype=webkitRTCPeerConnection.prototype,webkitRTCPeerConnection.generateCertificate&&Object.defineProperty(window.RTCPeerConnection,\"generateCertificate\",{get:function(){return webkitRTCPeerConnection.generateCertificate}}),[\"createOffer\",\"createAnswer\"].forEach(function(e){var t=webkitRTCPeerConnection.prototype[e];webkitRTCPeerConnection.prototype[e]=function(){var e=this;if(arguments.length<1||1===arguments.length&&\"object\"==typeof arguments[0]){var n=1===arguments.length?arguments[0]:void 0;return new Promise(function(r,i){t.apply(e,[r,i,n])})}return t.apply(this,arguments)}}),i.version<51&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(e){var t=webkitRTCPeerConnection.prototype[e];webkitRTCPeerConnection.prototype[e]=function(){var e=arguments,n=this,r=new Promise(function(r,i){t.apply(n,[e[0],r,i])});return e.length<2?r:r.then(function(){e[1].apply(null,[])},function(t){e.length>=3&&e[2].apply(null,[t])})}});var e=RTCPeerConnection.prototype.addIceCandidate;RTCPeerConnection.prototype.addIceCandidate=function(){return null===arguments[0]?Promise.resolve():e.apply(this,arguments)},[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(e){var t=webkitRTCPeerConnection.prototype[e];webkitRTCPeerConnection.prototype[e]=function(){return arguments[0]=new(\"addIceCandidate\"===e?RTCIceCandidate:RTCSessionDescription)(arguments[0]),t.apply(this,arguments)}})},attachMediaStream:function(e,t){r(\"DEPRECATED, attachMediaStream will soon be removed.\"),i.version>=43?e.srcObject=t:\"undefined\"!=typeof e.src?e.src=URL.createObjectURL(t):r(\"Error attaching stream to element.\")},reattachMediaStream:function(e,t){r(\"DEPRECATED, reattachMediaStream will soon be removed.\"),i.version>=43?e.srcObject=t.srcObject:e.src=t.src}};t.exports={shimMediaStream:o.shimMediaStream,shimOnTrack:o.shimOnTrack,shimSourceObject:o.shimSourceObject,shimPeerConnection:o.shimPeerConnection,shimGetUserMedia:e(\"./getusermedia\"),attachMediaStream:o.attachMediaStream,reattachMediaStream:o.reattachMediaStream}},{\"../utils.js\":50,\"./getusermedia\":44}],44:[function(e,t,n){\"use strict\";var r=e(\"../utils.js\").log;t.exports=function(){var e=function(e){if(\"object\"!=typeof e||e.mandatory||e.optional)return e;var t={};return Object.keys(e).forEach(function(n){if(\"require\"!==n&&\"advanced\"!==n&&\"mediaSource\"!==n){var r=\"object\"==typeof e[n]?e[n]:{ideal:e[n]};void 0!==r.exact&&\"number\"==typeof r.exact&&(r.min=r.max=r.exact);var i=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):\"deviceId\"===t?\"sourceId\":t};if(void 0!==r.ideal){t.optional=t.optional||[];var o={};\"number\"==typeof r.ideal?(o[i(\"min\",n)]=r.ideal,t.optional.push(o),o={},o[i(\"max\",n)]=r.ideal,t.optional.push(o)):(o[i(\"\",n)]=r.ideal,t.optional.push(o))}void 0!==r.exact&&\"number\"!=typeof r.exact?(t.mandatory=t.mandatory||{},t.mandatory[i(\"\",n)]=r.exact):[\"min\",\"max\"].forEach(function(e){void 0!==r[e]&&(t.mandatory=t.mandatory||{},t.mandatory[i(e,n)]=r[e])})}}),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t},t=function(t,n){if(t=JSON.parse(JSON.stringify(t)),t&&t.audio&&(t.audio=e(t.audio)),t&&\"object\"==typeof t.video){var i=t.video.facingMode;if(i=i&&(\"object\"==typeof i?i:{ideal:i}),i&&(\"user\"===i.exact||\"environment\"===i.exact||\"user\"===i.ideal||\"environment\"===i.ideal)&&(!navigator.mediaDevices.getSupportedConstraints||!navigator.mediaDevices.getSupportedConstraints().facingMode)&&(delete t.video.facingMode,\"environment\"===i.exact||\"environment\"===i.ideal))return navigator.mediaDevices.enumerateDevices().then(function(o){o=o.filter(function(e){return\"videoinput\"===e.kind});var a=o.find(function(e){return e.label.toLowerCase().indexOf(\"back\")!==-1})||o.length&&o[o.length-1];return a&&(t.video.deviceId=i.exact?{exact:a.deviceId}:{ideal:a.deviceId}),t.video=e(t.video),r(\"chrome: \"+JSON.stringify(t)),n(t)});t.video=e(t.video)}return r(\"chrome: \"+JSON.stringify(t)),n(t)},n=function(e){return{name:{PermissionDeniedError:\"NotAllowedError\",ConstraintNotSatisfiedError:\"OverconstrainedError\"}[e.name]||e.name,message:e.message,constraint:e.constraintName,toString:function(){return this.name+(this.message&&\": \")+this.message}}},i=function(e,r,i){t(e,function(e){navigator.webkitGetUserMedia(e,r,function(e){i(n(e))})})};navigator.getUserMedia=i;var o=function(e){return new Promise(function(t,n){navigator.getUserMedia(e,t,n)})};if(navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:o,enumerateDevices:function(){return new Promise(function(e){var t={audio:\"audioinput\",video:\"videoinput\"};return MediaStreamTrack.getSources(function(n){e(n.map(function(e){return{label:e.label,kind:t[e.kind],deviceId:e.id,groupId:\"\"}}))})})}}),navigator.mediaDevices.getUserMedia){var a=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(e){return t(e,function(e){return a(e).catch(function(e){return Promise.reject(n(e))})})}}else navigator.mediaDevices.getUserMedia=function(e){return o(e)};\"undefined\"==typeof navigator.mediaDevices.addEventListener&&(navigator.mediaDevices.addEventListener=function(){r(\"Dummy mediaDevices.addEventListener called.\")}),\"undefined\"==typeof navigator.mediaDevices.removeEventListener&&(navigator.mediaDevices.removeEventListener=function(){r(\"Dummy mediaDevices.removeEventListener called.\")})}},{\"../utils.js\":50}],45:[function(e,t,n){\"use strict\";var r=e(\"sdp\"),i=e(\"../utils\").log,o={shimPeerConnection:function(){window.RTCIceGatherer&&(window.RTCIceCandidate||(window.RTCIceCandidate=function(e){return e}),window.RTCSessionDescription||(window.RTCSessionDescription=function(e){return e})),window.RTCPeerConnection=function(e){var t=this,n=document.createDocumentFragment();if([\"addEventListener\",\"removeEventListener\",\"dispatchEvent\"].forEach(function(e){t[e]=n[e].bind(n)}),this.onicecandidate=null,this.onaddstream=null,this.ontrack=null,this.onremovestream=null,this.onsignalingstatechange=null,this.oniceconnectionstatechange=null,this.onnegotiationneeded=null,this.ondatachannel=null,this.localStreams=[],this.remoteStreams=[],this.getLocalStreams=function(){return t.localStreams},this.getRemoteStreams=function(){return t.remoteStreams},this.localDescription=new RTCSessionDescription({type:\"\",sdp:\"\"}),this.remoteDescription=new RTCSessionDescription({type:\"\",sdp:\"\"}),this.signalingState=\"stable\",this.iceConnectionState=\"new\",this.iceGatheringState=\"new\",this.iceOptions={gatherPolicy:\"all\",iceServers:[]},e&&e.iceTransportPolicy)switch(e.iceTransportPolicy){case\"all\":case\"relay\":this.iceOptions.gatherPolicy=e.iceTransportPolicy;break;case\"none\":throw new TypeError('iceTransportPolicy \"none\" not supported')}if(this.usingBundle=e&&\"max-bundle\"===e.bundlePolicy,e&&e.iceServers){var r=JSON.parse(JSON.stringify(e.iceServers));\nthis.iceOptions.iceServers=r.filter(function(e){if(e&&e.urls){var t=e.urls;return\"string\"==typeof t&&(t=[t]),t=t.filter(function(e){return 0===e.indexOf(\"turn:\")&&e.indexOf(\"transport=udp\")!==-1})[0],!!t}return!1})}this.transceivers=[],this._localIceCandidatesBuffer=[]},window.RTCPeerConnection.prototype._emitBufferedCandidates=function(){var e=this,t=r.splitSections(e.localDescription.sdp);this._localIceCandidatesBuffer.forEach(function(n){var r=!n.candidate||0===Object.keys(n.candidate).length;if(r)for(var i=1;i<t.length;i++)t[i].indexOf(\"\\r\\na=end-of-candidates\\r\\n\")===-1&&(t[i]+=\"a=end-of-candidates\\r\\n\");else n.candidate.candidate.indexOf(\"typ endOfCandidates\")===-1&&(t[n.candidate.sdpMLineIndex+1]+=\"a=\"+n.candidate.candidate+\"\\r\\n\");if(e.localDescription.sdp=t.join(\"\"),e.dispatchEvent(n),null!==e.onicecandidate&&e.onicecandidate(n),!n.candidate&&\"complete\"!==e.iceGatheringState){var o=e.transceivers.every(function(e){return e.iceGatherer&&\"completed\"===e.iceGatherer.state});o&&(e.iceGatheringState=\"complete\")}}),this._localIceCandidatesBuffer=[]},window.RTCPeerConnection.prototype.addStream=function(e){this.localStreams.push(e.clone()),this._maybeFireNegotiationNeeded()},window.RTCPeerConnection.prototype.removeStream=function(e){var t=this.localStreams.indexOf(e);t>-1&&(this.localStreams.splice(t,1),this._maybeFireNegotiationNeeded())},window.RTCPeerConnection.prototype.getSenders=function(){return this.transceivers.filter(function(e){return!!e.rtpSender}).map(function(e){return e.rtpSender})},window.RTCPeerConnection.prototype.getReceivers=function(){return this.transceivers.filter(function(e){return!!e.rtpReceiver}).map(function(e){return e.rtpReceiver})},window.RTCPeerConnection.prototype._getCommonCapabilities=function(e,t){var n={codecs:[],headerExtensions:[],fecMechanisms:[]};return e.codecs.forEach(function(e){for(var r=0;r<t.codecs.length;r++){var i=t.codecs[r];if(e.name.toLowerCase()===i.name.toLowerCase()&&e.clockRate===i.clockRate&&e.numChannels===i.numChannels){n.codecs.push(i);break}}}),e.headerExtensions.forEach(function(e){for(var r=0;r<t.headerExtensions.length;r++){var i=t.headerExtensions[r];if(e.uri===i.uri){n.headerExtensions.push(i);break}}}),n},window.RTCPeerConnection.prototype._createIceAndDtlsTransports=function(e,t){var n=this,i=new RTCIceGatherer(n.iceOptions),o=new RTCIceTransport(i);i.onlocalcandidate=function(a){var s=new Event(\"icecandidate\");s.candidate={sdpMid:e,sdpMLineIndex:t};var c=a.candidate,d=!c||0===Object.keys(c).length;d?(void 0===i.state&&(i.state=\"completed\"),s.candidate.candidate=\"candidate:1 1 udp 1 0.0.0.0 9 typ endOfCandidates\"):(c.component=\"RTCP\"===o.component?2:1,s.candidate.candidate=r.writeCandidate(c));var u=r.splitSections(n.localDescription.sdp);s.candidate.candidate.indexOf(\"typ endOfCandidates\")===-1?u[s.candidate.sdpMLineIndex+1]+=\"a=\"+s.candidate.candidate+\"\\r\\n\":u[s.candidate.sdpMLineIndex+1]+=\"a=end-of-candidates\\r\\n\",n.localDescription.sdp=u.join(\"\");var p=n.transceivers.every(function(e){return e.iceGatherer&&\"completed\"===e.iceGatherer.state});switch(n.iceGatheringState){case\"new\":n._localIceCandidatesBuffer.push(s),d&&p&&n._localIceCandidatesBuffer.push(new Event(\"icecandidate\"));break;case\"gathering\":n._emitBufferedCandidates(),n.dispatchEvent(s),null!==n.onicecandidate&&n.onicecandidate(s),p&&(n.dispatchEvent(new Event(\"icecandidate\")),null!==n.onicecandidate&&n.onicecandidate(new Event(\"icecandidate\")),n.iceGatheringState=\"complete\");break;case\"complete\":}},o.onicestatechange=function(){n._updateConnectionState()};var a=new RTCDtlsTransport(o);return a.ondtlsstatechange=function(){n._updateConnectionState()},a.onerror=function(){a.state=\"failed\",n._updateConnectionState()},{iceGatherer:i,iceTransport:o,dtlsTransport:a}},window.RTCPeerConnection.prototype._transceive=function(e,t,n){var i=this._getCommonCapabilities(e.localCapabilities,e.remoteCapabilities);t&&e.rtpSender&&(i.encodings=e.sendEncodingParameters,i.rtcp={cname:r.localCName},e.recvEncodingParameters.length&&(i.rtcp.ssrc=e.recvEncodingParameters[0].ssrc),e.rtpSender.send(i)),n&&e.rtpReceiver&&(i.encodings=e.recvEncodingParameters,i.rtcp={cname:e.cname},e.sendEncodingParameters.length&&(i.rtcp.ssrc=e.sendEncodingParameters[0].ssrc),e.rtpReceiver.receive(i))},window.RTCPeerConnection.prototype.setLocalDescription=function(e){var t,n,i=this;if(\"offer\"===e.type)this._pendingOffer&&(t=r.splitSections(e.sdp),n=t.shift(),t.forEach(function(e,t){var n=r.parseRtpParameters(e);i._pendingOffer[t].localCapabilities=n}),this.transceivers=this._pendingOffer,delete this._pendingOffer);else if(\"answer\"===e.type){t=r.splitSections(i.remoteDescription.sdp),n=t.shift();var o=r.matchPrefix(n,\"a=ice-lite\").length>0;t.forEach(function(e,t){var a=i.transceivers[t],s=a.iceGatherer,c=a.iceTransport,d=a.dtlsTransport,u=a.localCapabilities,p=a.remoteCapabilities,l=\"0\"===e.split(\"\\n\",1)[0].split(\" \",2)[1];if(!l){var f=r.getIceParameters(e,n);if(o){var h=r.matchPrefix(e,\"a=candidate:\").map(function(e){return r.parseCandidate(e)}).filter(function(e){return\"1\"===e.component});h.length&&c.setRemoteCandidates(h)}var m=r.getDtlsParameters(e,n);o&&(m.role=\"server\"),i.usingBundle&&0!==t||(c.start(s,f,o?\"controlling\":\"controlled\"),d.start(m));var v=i._getCommonCapabilities(u,p);i._transceive(a,v.codecs.length>0,!1)}})}switch(this.localDescription={type:e.type,sdp:e.sdp},e.type){case\"offer\":this._updateSignalingState(\"have-local-offer\");break;case\"answer\":this._updateSignalingState(\"stable\");break;default:throw new TypeError('unsupported type \"'+e.type+'\"')}var a=arguments.length>1&&\"function\"==typeof arguments[1];if(a){var s=arguments[1];window.setTimeout(function(){s(),\"new\"===i.iceGatheringState&&(i.iceGatheringState=\"gathering\"),i._emitBufferedCandidates()},0)}var c=Promise.resolve();return c.then(function(){a||(\"new\"===i.iceGatheringState&&(i.iceGatheringState=\"gathering\"),window.setTimeout(i._emitBufferedCandidates.bind(i),500))}),c},window.RTCPeerConnection.prototype.setRemoteDescription=function(e){var t=this,n=new MediaStream,i=[],o=r.splitSections(e.sdp),a=o.shift(),s=r.matchPrefix(a,\"a=ice-lite\").length>0;switch(this.usingBundle=r.matchPrefix(a,\"a=group:BUNDLE \").length>0,o.forEach(function(o,c){var d,u,p,l,f,h,m,v,g,y,w,b,S=r.splitLines(o),C=S[0].substr(2).split(\" \"),k=C[0],T=\"0\"===C[1],E=r.getDirection(o,a),O=r.parseRtpParameters(o);T||(w=r.getIceParameters(o,a),b=r.getDtlsParameters(o,a),b.role=\"client\"),v=r.parseRtpEncodingParameters(o);var R=r.matchPrefix(o,\"a=mid:\");R=R.length?R[0].substr(6):r.generateIdentifier();var P,x=r.matchPrefix(o,\"a=ssrc:\").map(function(e){return r.parseSsrcMedia(e)}).filter(function(e){return\"cname\"===e.attribute})[0];x&&(P=x.value);var D=r.matchPrefix(o,\"a=end-of-candidates\").length>0,_=r.matchPrefix(o,\"a=candidate:\").map(function(e){return r.parseCandidate(e)}).filter(function(e){return\"1\"===e.component});if(\"offer\"!==e.type||T)\"answer\"!==e.type||T||(d=t.transceivers[c],u=d.iceGatherer,p=d.iceTransport,l=d.dtlsTransport,f=d.rtpSender,h=d.rtpReceiver,m=d.sendEncodingParameters,g=d.localCapabilities,t.transceivers[c].recvEncodingParameters=v,t.transceivers[c].remoteCapabilities=O,t.transceivers[c].cname=P,(s||D)&&_.length&&p.setRemoteCandidates(_),t.usingBundle&&0!==c||(p.start(u,w,\"controlling\"),l.start(b)),t._transceive(d,\"sendrecv\"===E||\"recvonly\"===E,\"sendrecv\"===E||\"sendonly\"===E),!h||\"sendrecv\"!==E&&\"sendonly\"!==E?delete d.rtpReceiver:(y=h.track,i.push([y,h]),n.addTrack(y)));else{var j=t.usingBundle&&c>0?{iceGatherer:t.transceivers[0].iceGatherer,iceTransport:t.transceivers[0].iceTransport,dtlsTransport:t.transceivers[0].dtlsTransport}:t._createIceAndDtlsTransports(R,c);if(D&&j.iceTransport.setRemoteCandidates(_),g=RTCRtpReceiver.getCapabilities(k),m=[{ssrc:1001*(2*c+2)}],h=new RTCRtpReceiver(j.dtlsTransport,k),y=h.track,i.push([y,h]),n.addTrack(y),t.localStreams.length>0&&t.localStreams[0].getTracks().length>=c){var M=t.localStreams[0].getTracks()[c];f=new RTCRtpSender(M,j.dtlsTransport)}t.transceivers[c]={iceGatherer:j.iceGatherer,iceTransport:j.iceTransport,dtlsTransport:j.dtlsTransport,localCapabilities:g,remoteCapabilities:O,rtpSender:f,rtpReceiver:h,kind:k,mid:R,cname:P,sendEncodingParameters:m,recvEncodingParameters:v},t._transceive(t.transceivers[c],!1,\"sendrecv\"===E||\"sendonly\"===E)}}),this.remoteDescription={type:e.type,sdp:e.sdp},e.type){case\"offer\":this._updateSignalingState(\"have-remote-offer\");break;case\"answer\":this._updateSignalingState(\"stable\");break;default:throw new TypeError('unsupported type \"'+e.type+'\"')}return n.getTracks().length&&(t.remoteStreams.push(n),window.setTimeout(function(){var e=new Event(\"addstream\");e.stream=n,t.dispatchEvent(e),null!==t.onaddstream&&window.setTimeout(function(){t.onaddstream(e)},0),i.forEach(function(r){var i=r[0],o=r[1],a=new Event(\"track\");a.track=i,a.receiver=o,a.streams=[n],t.dispatchEvent(e),null!==t.ontrack&&window.setTimeout(function(){t.ontrack(a)},0)})},0)),arguments.length>1&&\"function\"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},window.RTCPeerConnection.prototype.close=function(){this.transceivers.forEach(function(e){e.iceTransport&&e.iceTransport.stop(),e.dtlsTransport&&e.dtlsTransport.stop(),e.rtpSender&&e.rtpSender.stop(),e.rtpReceiver&&e.rtpReceiver.stop()}),this._updateSignalingState(\"closed\")},window.RTCPeerConnection.prototype._updateSignalingState=function(e){this.signalingState=e;var t=new Event(\"signalingstatechange\");this.dispatchEvent(t),null!==this.onsignalingstatechange&&this.onsignalingstatechange(t)},window.RTCPeerConnection.prototype._maybeFireNegotiationNeeded=function(){var e=new Event(\"negotiationneeded\");this.dispatchEvent(e),null!==this.onnegotiationneeded&&this.onnegotiationneeded(e)},window.RTCPeerConnection.prototype._updateConnectionState=function(){var e,t=this,n={new:0,closed:0,connecting:0,checking:0,connected:0,completed:0,failed:0};if(this.transceivers.forEach(function(e){n[e.iceTransport.state]++,n[e.dtlsTransport.state]++}),n.connected+=n.completed,e=\"new\",n.failed>0?e=\"failed\":n.connecting>0||n.checking>0?e=\"connecting\":n.disconnected>0?e=\"disconnected\":n.new>0?e=\"new\":(n.connected>0||n.completed>0)&&(e=\"connected\"),e!==t.iceConnectionState){t.iceConnectionState=e;var r=new Event(\"iceconnectionstatechange\");this.dispatchEvent(r),null!==this.oniceconnectionstatechange&&this.oniceconnectionstatechange(r)}},window.RTCPeerConnection.prototype.createOffer=function(){var e=this;if(this._pendingOffer)throw new Error(\"createOffer called while there is a pending offer.\");var t;1===arguments.length&&\"function\"!=typeof arguments[0]?t=arguments[0]:3===arguments.length&&(t=arguments[2]);var n=[],i=0,o=0;if(this.localStreams.length&&(i=this.localStreams[0].getAudioTracks().length,o=this.localStreams[0].getVideoTracks().length),t){if(t.mandatory||t.optional)throw new TypeError(\"Legacy mandatory/optional constraints not supported.\");void 0!==t.offerToReceiveAudio&&(i=t.offerToReceiveAudio),void 0!==t.offerToReceiveVideo&&(o=t.offerToReceiveVideo)}for(this.localStreams.length&&this.localStreams[0].getTracks().forEach(function(e){n.push({kind:e.kind,track:e,wantReceive:\"audio\"===e.kind?i>0:o>0}),\"audio\"===e.kind?i--:\"video\"===e.kind&&o--});i>0||o>0;)i>0&&(n.push({kind:\"audio\",wantReceive:!0}),i--),o>0&&(n.push({kind:\"video\",wantReceive:!0}),o--);var a=r.writeSessionBoilerplate(),s=[];n.forEach(function(t,n){var i,o,a=t.track,c=t.kind,d=r.generateIdentifier(),u=e.usingBundle&&n>0?{iceGatherer:s[0].iceGatherer,iceTransport:s[0].iceTransport,dtlsTransport:s[0].dtlsTransport}:e._createIceAndDtlsTransports(d,n),p=RTCRtpSender.getCapabilities(c),l=[{ssrc:1001*(2*n+1)}];a&&(i=new RTCRtpSender(a,u.dtlsTransport)),t.wantReceive&&(o=new RTCRtpReceiver(u.dtlsTransport,c)),s[n]={iceGatherer:u.iceGatherer,iceTransport:u.iceTransport,dtlsTransport:u.dtlsTransport,localCapabilities:p,remoteCapabilities:null,rtpSender:i,rtpReceiver:o,kind:c,mid:d,sendEncodingParameters:l,recvEncodingParameters:null}}),this.usingBundle&&(a+=\"a=group:BUNDLE \"+s.map(function(e){return e.mid}).join(\" \")+\"\\r\\n\"),n.forEach(function(t,n){var i=s[n];a+=r.writeMediaSection(i,i.localCapabilities,\"offer\",e.localStreams[0])}),this._pendingOffer=s;var c=new RTCSessionDescription({type:\"offer\",sdp:a});return arguments.length&&\"function\"==typeof arguments[0]&&window.setTimeout(arguments[0],0,c),Promise.resolve(c)},window.RTCPeerConnection.prototype.createAnswer=function(){var e=this,t=r.writeSessionBoilerplate();this.usingBundle&&(t+=\"a=group:BUNDLE \"+this.transceivers.map(function(e){return e.mid}).join(\" \")+\"\\r\\n\"),this.transceivers.forEach(function(n){var i=e._getCommonCapabilities(n.localCapabilities,n.remoteCapabilities);t+=r.writeMediaSection(n,i,\"answer\",e.localStreams[0])});var n=new RTCSessionDescription({type:\"answer\",sdp:t});return arguments.length&&\"function\"==typeof arguments[0]&&window.setTimeout(arguments[0],0,n),Promise.resolve(n)},window.RTCPeerConnection.prototype.addIceCandidate=function(e){if(null===e)this.transceivers.forEach(function(e){e.iceTransport.addRemoteCandidate({})});else{var t=e.sdpMLineIndex;if(e.sdpMid)for(var n=0;n<this.transceivers.length;n++)if(this.transceivers[n].mid===e.sdpMid){t=n;break}var i=this.transceivers[t];if(i){var o=Object.keys(e.candidate).length>0?r.parseCandidate(e.candidate):{};if(\"tcp\"===o.protocol&&0===o.port)return;if(\"1\"!==o.component)return;\"endOfCandidates\"===o.type&&(o={}),i.iceTransport.addRemoteCandidate(o);var a=r.splitSections(this.remoteDescription.sdp);a[t+1]+=(o.type?e.candidate.trim():\"a=end-of-candidates\")+\"\\r\\n\",this.remoteDescription.sdp=a.join(\"\")}}return arguments.length>1&&\"function\"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},window.RTCPeerConnection.prototype.getStats=function(){var e=[];this.transceivers.forEach(function(t){[\"rtpSender\",\"rtpReceiver\",\"iceGatherer\",\"iceTransport\",\"dtlsTransport\"].forEach(function(n){t[n]&&e.push(t[n].getStats())})});var t=arguments.length>1&&\"function\"==typeof arguments[1]&&arguments[1];return new Promise(function(n){var r=new Map;Promise.all(e).then(function(e){e.forEach(function(e){Object.keys(e).forEach(function(t){r.set(t,e[t]),r[t]=e[t]})}),t&&window.setTimeout(t,0,r),n(r)})})}},attachMediaStream:function(e,t){i(\"DEPRECATED, attachMediaStream will soon be removed.\"),e.srcObject=t},reattachMediaStream:function(e,t){i(\"DEPRECATED, reattachMediaStream will soon be removed.\"),e.srcObject=t.srcObject}};t.exports={shimPeerConnection:o.shimPeerConnection,shimGetUserMedia:e(\"./getusermedia\"),attachMediaStream:o.attachMediaStream,reattachMediaStream:o.reattachMediaStream}},{\"../utils\":50,\"./getusermedia\":46,sdp:34}],46:[function(e,t,n){\"use strict\";t.exports=function(){var e=function(e){return{name:{PermissionDeniedError:\"NotAllowedError\"}[e.name]||e.name,message:e.message,constraint:e.constraint,toString:function(){return this.name}}},t=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(n){return t(n).catch(function(t){return Promise.reject(e(t))})}}},{}],47:[function(e,t,n){\"use strict\";var r=e(\"../utils\").log,i=e(\"../utils\").browserDetails,o={shimOnTrack:function(){\"object\"!=typeof window||!window.RTCPeerConnection||\"ontrack\"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,\"ontrack\",{get:function(){return this._ontrack},set:function(e){this._ontrack&&(this.removeEventListener(\"track\",this._ontrack),this.removeEventListener(\"addstream\",this._ontrackpoly)),this.addEventListener(\"track\",this._ontrack=e),this.addEventListener(\"addstream\",this._ontrackpoly=function(e){e.stream.getTracks().forEach(function(t){var n=new Event(\"track\");n.track=t,n.receiver={track:t},n.streams=[e.stream],this.dispatchEvent(n)}.bind(this))}.bind(this))}})},shimSourceObject:function(){\"object\"==typeof window&&(!window.HTMLMediaElement||\"srcObject\"in window.HTMLMediaElement.prototype||Object.defineProperty(window.HTMLMediaElement.prototype,\"srcObject\",{get:function(){return this.mozSrcObject},set:function(e){this.mozSrcObject=e}}))},shimPeerConnection:function(){if(\"object\"==typeof window&&(window.RTCPeerConnection||window.mozRTCPeerConnection)){window.RTCPeerConnection||(window.RTCPeerConnection=function(e,t){if(i.version<38&&e&&e.iceServers){for(var n=[],r=0;r<e.iceServers.length;r++){var o=e.iceServers[r];if(o.hasOwnProperty(\"urls\"))for(var a=0;a<o.urls.length;a++){var s={url:o.urls[a]};0===o.urls[a].indexOf(\"turn\")&&(s.username=o.username,s.credential=o.credential),n.push(s)}else n.push(e.iceServers[r])}e.iceServers=n}return new mozRTCPeerConnection(e,t)},window.RTCPeerConnection.prototype=mozRTCPeerConnection.prototype,mozRTCPeerConnection.generateCertificate&&Object.defineProperty(window.RTCPeerConnection,\"generateCertificate\",{get:function(){return mozRTCPeerConnection.generateCertificate}}),window.RTCSessionDescription=mozRTCSessionDescription,window.RTCIceCandidate=mozRTCIceCandidate),[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){return arguments[0]=new(\"addIceCandidate\"===e?RTCIceCandidate:RTCSessionDescription)(arguments[0]),t.apply(this,arguments)}});var e=RTCPeerConnection.prototype.addIceCandidate;RTCPeerConnection.prototype.addIceCandidate=function(){return null===arguments[0]?Promise.resolve():e.apply(this,arguments)};var t=function(e){var t=new Map;return Object.keys(e).forEach(function(n){t.set(n,e[n]),t[n]=e[n]}),t},n=RTCPeerConnection.prototype.getStats;RTCPeerConnection.prototype.getStats=function(e,r,i){return n.apply(this,[e||null]).then(function(e){return t(e)}).then(r,i)}}},attachMediaStream:function(e,t){r(\"DEPRECATED, attachMediaStream will soon be removed.\"),e.srcObject=t},reattachMediaStream:function(e,t){r(\"DEPRECATED, reattachMediaStream will soon be removed.\"),e.srcObject=t.srcObject}};t.exports={shimOnTrack:o.shimOnTrack,shimSourceObject:o.shimSourceObject,shimPeerConnection:o.shimPeerConnection,shimGetUserMedia:e(\"./getusermedia\"),attachMediaStream:o.attachMediaStream,reattachMediaStream:o.reattachMediaStream}},{\"../utils\":50,\"./getusermedia\":48}],48:[function(e,t,n){\"use strict\";var r=e(\"../utils\").log,i=e(\"../utils\").browserDetails;t.exports=function(){var e=function(e){return{name:{SecurityError:\"NotAllowedError\",PermissionDeniedError:\"NotAllowedError\"}[e.name]||e.name,message:{\"The operation is insecure.\":\"The request is not allowed by the user agent or the platform in the current context.\"}[e.message]||e.message,constraint:e.constraint,toString:function(){return this.name+(this.message&&\": \")+this.message}}},t=function(t,n,o){var a=function(e){if(\"object\"!=typeof e||e.require)return e;var t=[];return Object.keys(e).forEach(function(n){if(\"require\"!==n&&\"advanced\"!==n&&\"mediaSource\"!==n){var r=e[n]=\"object\"==typeof e[n]?e[n]:{ideal:e[n]};if(void 0===r.min&&void 0===r.max&&void 0===r.exact||t.push(n),void 0!==r.exact&&(\"number\"==typeof r.exact?r.min=r.max=r.exact:e[n]=r.exact,delete r.exact),void 0!==r.ideal){e.advanced=e.advanced||[];var i={};\"number\"==typeof r.ideal?i[n]={min:r.ideal,max:r.ideal}:i[n]=r.ideal,e.advanced.push(i),delete r.ideal,Object.keys(r).length||delete e[n]}}}),t.length&&(e.require=t),e};return t=JSON.parse(JSON.stringify(t)),i.version<38&&(r(\"spec: \"+JSON.stringify(t)),t.audio&&(t.audio=a(t.audio)),t.video&&(t.video=a(t.video)),r(\"ff37: \"+JSON.stringify(t))),navigator.mozGetUserMedia(t,n,function(t){o(e(t))})},n=function(e){return new Promise(function(n,r){t(e,n,r)})};if(navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:n,addEventListener:function(){},removeEventListener:function(){}}),navigator.mediaDevices.enumerateDevices=navigator.mediaDevices.enumerateDevices||function(){return new Promise(function(e){var t=[{kind:\"audioinput\",deviceId:\"default\",label:\"\",groupId:\"\"},{kind:\"videoinput\",deviceId:\"default\",label:\"\",groupId:\"\"}];e(t)})},i.version<41){var o=navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);navigator.mediaDevices.enumerateDevices=function(){return o().then(void 0,function(e){if(\"NotFoundError\"===e.name)return[];throw e})}}if(i.version<49){var a=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(t){return a(t).catch(function(t){return Promise.reject(e(t))})}}navigator.getUserMedia=function(e,n,r){return i.version<44?t(e,n,r):(console.warn(\"navigator.getUserMedia has been replaced by navigator.mediaDevices.getUserMedia\"),void navigator.mediaDevices.getUserMedia(e).then(n,r))}}},{\"../utils\":50}],49:[function(e,t,n){\"use strict\";var r={shimGetUserMedia:function(){navigator.getUserMedia=navigator.webkitGetUserMedia}};t.exports={shimGetUserMedia:r.shimGetUserMedia}},{}],50:[function(e,t,n){\"use strict\";var r=!0,i={disableLog:function(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+typeof e+\". Please use a boolean.\"):(r=e,e?\"adapter.js logging disabled\":\"adapter.js logging enabled\")},log:function(){if(\"object\"==typeof window){if(r)return;\"undefined\"!=typeof console&&\"function\"==typeof console.log&&console.log.apply(console,arguments)}},extractVersion:function(e,t,n){var r=e.match(t);return r&&r.length>=n&&parseInt(r[n],10)},detectBrowser:function(){var e={};if(e.browser=null,e.version=null,e.minVersion=null,\"undefined\"==typeof window||!window.navigator)return e.browser=\"Not a browser.\",e;if(navigator.mozGetUserMedia)e.browser=\"firefox\",e.version=this.extractVersion(navigator.userAgent,/Firefox\\/([0-9]+)\\./,1),e.minVersion=31;else if(navigator.webkitGetUserMedia)if(window.webkitRTCPeerConnection)e.browser=\"chrome\",e.version=this.extractVersion(navigator.userAgent,/Chrom(e|ium)\\/([0-9]+)\\./,2),e.minVersion=38;else{if(!navigator.userAgent.match(/Version\\/(\\d+).(\\d+)/))return e.browser=\"Unsupported webkit-based browser with GUM support but no WebRTC support.\",e;e.browser=\"safari\",e.version=this.extractVersion(navigator.userAgent,/AppleWebKit\\/([0-9]+)\\./,1),e.minVersion=602}else{if(!navigator.mediaDevices||!navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/))return e.browser=\"Not a supported browser.\",e;e.browser=\"edge\",e.version=this.extractVersion(navigator.userAgent,/Edge\\/(\\d+).(\\d+)$/,2),e.minVersion=10547}return e.version<e.minVersion&&i.log(\"Browser: \"+e.browser+\" Version: \"+e.version+\" < minimum supported version: \"+e.minVersion+\"\\n some things might not work!\"),e}};t.exports={log:i.log,disableLog:i.disableLog,browserDetails:i.detectBrowser(),extractVersion:i.extractVersion}},{}],51:[function(e,t,n){var r,i;window.mozRTCPeerConnection||navigator.mozGetUserMedia?(r=\"moz\",i=parseInt(navigator.userAgent.match(/Firefox\\/([0-9]+)\\./)[1],10)):(window.webkitRTCPeerConnection||navigator.webkitGetUserMedia)&&(r=\"webkit\",i=navigator.userAgent.match(/Chrom(e|ium)/)&&parseInt(navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./)[2],10));var o=window.mozRTCPeerConnection||window.webkitRTCPeerConnection,a=window.mozRTCIceCandidate||window.RTCIceCandidate,s=window.mozRTCSessionDescription||window.RTCSessionDescription,c=window.webkitMediaStream||window.MediaStream,d=\"https:\"===window.location.protocol&&(\"webkit\"===r&&i>=26||\"moz\"===r&&i>=33),u=window.AudioContext||window.webkitAudioContext,p=document.createElement(\"video\"),l=p&&p.canPlayType&&\"probably\"===p.canPlayType('video/webm; codecs=\"vp8\", vorbis'),f=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.msGetUserMedia||navigator.mozGetUserMedia;t.exports={prefix:r,browserVersion:i,support:!!o&&l&&!!f,supportRTCPeerConnection:!!o,supportVp8:l,supportGetUserMedia:!!f,supportDataChannel:!!(o&&o.prototype&&o.prototype.createDataChannel),supportWebAudio:!(!u||!u.prototype.createMediaStreamSource),supportMediaStream:!(!c||!c.prototype.removeTrack),supportScreenSharing:!!d,dataChannel:!!(o&&o.prototype&&o.prototype.createDataChannel),webAudio:!(!u||!u.prototype.createMediaStreamSource),mediaStream:!(!c||!c.prototype.removeTrack),screenSharing:!!d,AudioContext:u,PeerConnection:o,SessionDescription:s,IceCandidate:a,MediaStream:c,getUserMedia:f}},{}],52:[function(e,t,n){function r(){}t.exports=r,r.mixin=function(e){var t=e.prototype||e;t.isWildEmitter=!0,t.on=function(e,t,n){this.callbacks=this.callbacks||{};var r=3===arguments.length,i=r?arguments[1]:void 0,o=r?arguments[2]:arguments[1];return o._groupName=i,(this.callbacks[e]=this.callbacks[e]||[]).push(o),this},t.once=function(e,t,n){function r(){i.off(e,r),s.apply(this,arguments)}var i=this,o=3===arguments.length,a=o?arguments[1]:void 0,s=o?arguments[2]:arguments[1];return this.on(e,a,r),this},t.releaseGroup=function(e){this.callbacks=this.callbacks||{};var t,n,r,i;for(t in this.callbacks)for(i=this.callbacks[t],n=0,r=i.length;n<r;n++)i[n]._groupName===e&&(i.splice(n,1),n--,r--);return this},t.off=function(e,t){this.callbacks=this.callbacks||{};var n,r=this.callbacks[e];return r?1===arguments.length?(delete this.callbacks[e],this):(n=r.indexOf(t),r.splice(n,1),0===r.length&&delete this.callbacks[e],this):this},t.emit=function(e){this.callbacks=this.callbacks||{};var t,n,r,i=[].slice.call(arguments,1),o=this.callbacks[e],a=this.getWildcardCallbacks(e);if(o)for(r=o.slice(),t=0,n=r.length;t<n&&r[t];++t)r[t].apply(this,i);if(a)for(n=a.length,r=a.slice(),t=0,n=r.length;t<n&&r[t];++t)r[t].apply(this,[e].concat(i));return this},t.getWildcardCallbacks=function(e){this.callbacks=this.callbacks||{};var t,n,r=[];for(t in this.callbacks)n=t.split(\"*\"),(\"*\"===t||2===n.length&&e.slice(0,n[0].length)===n[0])&&(r=r.concat(this.callbacks[t]));return r}},r.mixin(r)},{}],53:[function(e,t,n){\"use strict\";function r(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function i(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function o(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function a(e){var t=function(e){function t(e,n){if(r(this,t),void 0===n)throw new Error(\"Options must not be undefined!\");if(null==n.room)throw new Error(\"You must define a room name!\");n.role=\"slave\";var o=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n));o.webrtcOptions={url:n.url||\"https://yjs.dbis.rwth-aachen.de:5078\",room:n.room};var a=new d(o.webrtcOptions);o.swr=a;var s=o;return a.once(\"connectionReady\",function(e){a.joinRoom(s.webrtcOptions.room),a.once(\"joinedRoom\",function(){s.setUserId(e),a.on(\"channelMessage\",function(e,t,n){null!=n.type&&s.receiveMessage(e.id,n.payload)})}),a.on(\"createdPeer\",function(e){s.userJoined(e.id,\"master\")}),a.on(\"peerStreamRemoved\",function(e){s.userLeft(e.id)})}),o}return o(t,e),s(t,[{key:\"disconnect\",value:function(){this.swr.leaveRoom(),c(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),\"disconnect\",this).call(this)}},{key:\"reconnect\",value:function(){this.swr.joinRoom(this.webrtcOptions.room),c(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),\"reconnect\",this).call(this)}},{key:\"send\",value:function e(t,n){var r=this,e=function e(){var i,o=r.swr.webrtc.getPeers(t)[0];o&&(i=o.sendDirectly(\"simplewebrtc\",\"yjs\",n)),i||setTimeout(e,500)};e()}},{key:\"broadcast\",value:function(e){this.swr.sendDirectlyToAll(\"simplewebrtc\",\"yjs\",e)}},{key:\"isDisconnected\",value:function(){return!1}}]),t}(e.AbstractConnector);e.extend(\"webrtc\",t)}var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function e(t,n,r){null===t&&(t=Function.prototype);var i=Object.getOwnPropertyDescriptor(t,n);if(void 0===i){var o=Object.getPrototypeOf(t);return null===o?void 0:e(o,n,r)}if(\"value\"in i)return i.value;var a=i.get;if(void 0!==a)return a.call(r)},d=e(\"simplewebrtc\");t.exports=a,\"undefined\"!=typeof Y&&a(Y)},{simplewebrtc:36}],54:[function(e,t,n){\"function\"==typeof Object.create?t.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},{}],55:[function(e,t,n){function r(e){return d===setTimeout?setTimeout(e,0):d.call(null,e,0)}function i(e){u===clearTimeout?clearTimeout(e):u.call(null,e)}function o(){h&&l&&(h=!1,l.length?f=l.concat(f):m=-1,f.length&&a())}function a(){if(!h){var e=r(o);h=!0;for(var t=f.length;t;){for(l=f,f=[];++m<t;)l&&l[m].run();m=-1,t=f.length}l=null,h=!1,i(e)}}function s(e,t){this.fun=e,this.array=t}function c(){}var d,u,p=t.exports={};!function(){try{d=setTimeout}catch(e){d=function(){throw new Error(\"setTimeout is not defined\")}}try{u=clearTimeout}catch(e){u=function(){throw new Error(\"clearTimeout is not defined\")}}}();var l,f=[],h=!1,m=-1;p.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];f.push(new s(e,t)),1!==f.length||h||r(a)},s.prototype.run=function(){this.fun.apply(null,this.array)},p.title=\"browser\",p.browser=!0,p.env={},p.argv=[],p.version=\"\",p.versions={},p.on=c,p.addListener=c,p.once=c,p.off=c,p.removeListener=c,p.removeAllListeners=c,p.emit=c,p.binding=function(e){throw new Error(\"process.binding is not supported\")},p.cwd=function(){return\"/\"},p.chdir=function(e){throw new Error(\"process.chdir is not supported\")},p.umask=function(){return 0}},{}],56:[function(e,t,n){t.exports=function(e){return e&&\"object\"==typeof e&&\"function\"==typeof e.copy&&\"function\"==typeof e.fill&&\"function\"==typeof e.readUInt8}},{}],57:[function(e,t,n){(function(t,r){function i(e,t){var r={seen:[],stylize:a};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),m(t)?r.showHidden=t:t&&n._extend(r,t),S(r.showHidden)&&(r.showHidden=!1),S(r.depth)&&(r.depth=2),S(r.colors)&&(r.colors=!1),S(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=o),c(r,e,r.depth)}function o(e,t){var n=i.styles[t];return n?\"\u001b[\"+i.colors[n][0]+\"m\"+e+\"\u001b[\"+i.colors[n][1]+\"m\":e}function a(e,t){return e}function s(e){var t={};return e.forEach(function(e,n){t[e]=!0}),t}function c(e,t,r){if(e.customInspect&&t&&O(t.inspect)&&t.inspect!==n.inspect&&(!t.constructor||t.constructor.prototype!==t)){var i=t.inspect(r,e);return w(i)||(i=c(e,i,r)),i}var o=d(e,t);if(o)return o;var a=Object.keys(t),m=s(a);if(e.showHidden&&(a=Object.getOwnPropertyNames(t)),E(t)&&(a.indexOf(\"message\")>=0||a.indexOf(\"description\")>=0))return u(t);if(0===a.length){if(O(t)){var v=t.name?\": \"+t.name:\"\";return e.stylize(\"[Function\"+v+\"]\",\"special\")}if(C(t))return e.stylize(RegExp.prototype.toString.call(t),\"regexp\");if(T(t))return e.stylize(Date.prototype.toString.call(t),\"date\");if(E(t))return u(t)}var g=\"\",y=!1,b=[\"{\",\"}\"];if(h(t)&&(y=!0,b=[\"[\",\"]\"]),O(t)){var S=t.name?\": \"+t.name:\"\";g=\" [Function\"+S+\"]\"}if(C(t)&&(g=\" \"+RegExp.prototype.toString.call(t)),T(t)&&(g=\" \"+Date.prototype.toUTCString.call(t)),E(t)&&(g=\" \"+u(t)),0===a.length&&(!y||0==t.length))return b[0]+g+b[1];if(r<0)return C(t)?e.stylize(RegExp.prototype.toString.call(t),\"regexp\"):e.stylize(\"[Object]\",\"special\");e.seen.push(t);var k;return k=y?p(e,t,r,m,a):a.map(function(n){return l(e,t,r,m,n,y)}),e.seen.pop(),f(k,g,b)}function d(e,t){if(S(t))return e.stylize(\"undefined\",\"undefined\");if(w(t)){var n=\"'\"+JSON.stringify(t).replace(/^\"|\"$/g,\"\").replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"')+\"'\";return e.stylize(n,\"string\")}return y(t)?e.stylize(\"\"+t,\"number\"):m(t)?e.stylize(\"\"+t,\"boolean\"):v(t)?e.stylize(\"null\",\"null\"):void 0}function u(e){return\"[\"+Error.prototype.toString.call(e)+\"]\"}function p(e,t,n,r,i){for(var o=[],a=0,s=t.length;a<s;++a)_(t,String(a))?o.push(l(e,t,n,r,String(a),!0)):o.push(\"\");\nreturn i.forEach(function(i){i.match(/^\\d+$/)||o.push(l(e,t,n,r,i,!0))}),o}function l(e,t,n,r,i,o){var a,s,d;if(d=Object.getOwnPropertyDescriptor(t,i)||{value:t[i]},d.get?s=d.set?e.stylize(\"[Getter/Setter]\",\"special\"):e.stylize(\"[Getter]\",\"special\"):d.set&&(s=e.stylize(\"[Setter]\",\"special\")),_(r,i)||(a=\"[\"+i+\"]\"),s||(e.seen.indexOf(d.value)<0?(s=v(n)?c(e,d.value,null):c(e,d.value,n-1),s.indexOf(\"\\n\")>-1&&(s=o?s.split(\"\\n\").map(function(e){return\"  \"+e}).join(\"\\n\").substr(2):\"\\n\"+s.split(\"\\n\").map(function(e){return\"   \"+e}).join(\"\\n\"))):s=e.stylize(\"[Circular]\",\"special\")),S(a)){if(o&&i.match(/^\\d+$/))return s;a=JSON.stringify(\"\"+i),a.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?(a=a.substr(1,a.length-2),a=e.stylize(a,\"name\")):(a=a.replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"').replace(/(^\"|\"$)/g,\"'\"),a=e.stylize(a,\"string\"))}return a+\": \"+s}function f(e,t,n){var r=0,i=e.reduce(function(e,t){return r++,t.indexOf(\"\\n\")>=0&&r++,e+t.replace(/\\u001b\\[\\d\\d?m/g,\"\").length+1},0);return i>60?n[0]+(\"\"===t?\"\":t+\"\\n \")+\" \"+e.join(\",\\n  \")+\" \"+n[1]:n[0]+t+\" \"+e.join(\", \")+\" \"+n[1]}function h(e){return Array.isArray(e)}function m(e){return\"boolean\"==typeof e}function v(e){return null===e}function g(e){return null==e}function y(e){return\"number\"==typeof e}function w(e){return\"string\"==typeof e}function b(e){return\"symbol\"==typeof e}function S(e){return void 0===e}function C(e){return k(e)&&\"[object RegExp]\"===P(e)}function k(e){return\"object\"==typeof e&&null!==e}function T(e){return k(e)&&\"[object Date]\"===P(e)}function E(e){return k(e)&&(\"[object Error]\"===P(e)||e instanceof Error)}function O(e){return\"function\"==typeof e}function R(e){return null===e||\"boolean\"==typeof e||\"number\"==typeof e||\"string\"==typeof e||\"symbol\"==typeof e||\"undefined\"==typeof e}function P(e){return Object.prototype.toString.call(e)}function x(e){return e<10?\"0\"+e.toString(10):e.toString(10)}function D(){var e=new Date,t=[x(e.getHours()),x(e.getMinutes()),x(e.getSeconds())].join(\":\");return[e.getDate(),L[e.getMonth()],t].join(\" \")}function _(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var j=/%[sdj%]/g;n.format=function(e){if(!w(e)){for(var t=[],n=0;n<arguments.length;n++)t.push(i(arguments[n]));return t.join(\" \")}for(var n=1,r=arguments,o=r.length,a=String(e).replace(j,function(e){if(\"%%\"===e)return\"%\";if(n>=o)return e;switch(e){case\"%s\":return String(r[n++]);case\"%d\":return Number(r[n++]);case\"%j\":try{return JSON.stringify(r[n++])}catch(e){return\"[Circular]\"}default:return e}}),s=r[n];n<o;s=r[++n])a+=v(s)||!k(s)?\" \"+s:\" \"+i(s);return a},n.deprecate=function(e,i){function o(){if(!a){if(t.throwDeprecation)throw new Error(i);t.traceDeprecation?console.trace(i):console.error(i),a=!0}return e.apply(this,arguments)}if(S(r.process))return function(){return n.deprecate(e,i).apply(this,arguments)};if(t.noDeprecation===!0)return e;var a=!1;return o};var M,I={};n.debuglog=function(e){if(S(M)&&(M=t.env.NODE_DEBUG||\"\"),e=e.toUpperCase(),!I[e])if(new RegExp(\"\\\\b\"+e+\"\\\\b\",\"i\").test(M)){var r=t.pid;I[e]=function(){var t=n.format.apply(n,arguments);console.error(\"%s %d: %s\",e,r,t)}}else I[e]=function(){};return I[e]},n.inspect=i,i.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},i.styles={special:\"cyan\",number:\"yellow\",boolean:\"yellow\",undefined:\"grey\",null:\"bold\",string:\"green\",date:\"magenta\",regexp:\"red\"},n.isArray=h,n.isBoolean=m,n.isNull=v,n.isNullOrUndefined=g,n.isNumber=y,n.isString=w,n.isSymbol=b,n.isUndefined=S,n.isRegExp=C,n.isObject=k,n.isDate=T,n.isError=E,n.isFunction=O,n.isPrimitive=R,n.isBuffer=e(\"./support/isBuffer\");var L=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];n.log=function(){console.log(\"%s - %s\",D(),n.format.apply(n,arguments))},n.inherits=e(\"inherits\"),n._extend=function(e,t){if(!t||!k(t))return e;for(var n=Object.keys(t),r=n.length;r--;)e[n[r]]=t[n[r]];return e}}).call(this,e(\"_process\"),\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{\"./support/isBuffer\":56,_process:55,inherits:54}]},{},[53])(53)});\n//# sourceMappingURL=y-webrtc.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/y-webrtc/dist/y-webrtc.js?");

/***/ }),

/***/ "./node_modules/yjs/src sync recursive":
/*!***********************************!*\
  !*** ./node_modules/yjs/src sync ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/yjs/src sync recursive\";\n\n//# sourceURL=webpack:///./node_modules/yjs/src_sync?");

/***/ }),

/***/ "./node_modules/yjs/src/Connector.js":
/*!*******************************************!*\
  !*** ./node_modules/yjs/src/Connector.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function canRead (auth) { return auth === 'read' || auth === 'write' }\nfunction canWrite (auth) { return auth === 'write' }\n\nmodule.exports = function (Y/* :any */) {\n  class AbstractConnector {\n    /* ::\n    y: YConfig;\n    role: SyncRole;\n    connections: Object;\n    isSynced: boolean;\n    userEventListeners: Array<Function>;\n    whenSyncedListeners: Array<Function>;\n    currentSyncTarget: ?UserId;\n    syncingClients: Array<UserId>;\n    forwardToSyncingClients: boolean;\n    debug: boolean;\n    syncStep2: Promise;\n    userId: UserId;\n    send: Function;\n    broadcast: Function;\n    broadcastOpBuffer: Array<Operation>;\n    protocolVersion: number;\n    */\n    /*\n      opts contains the following information:\n       role : String Role of this client (\"master\" or \"slave\")\n       userId : String Uniquely defines the user.\n       debug: Boolean Whether to print debug messages (optional)\n    */\n    constructor (y, opts) {\n      this.y = y\n      if (opts == null) {\n        opts = {}\n      }\n      // Prefer to receive untransformed operations. This does only work if\n      // this client receives operations from only one other client.\n      // In particular, this does not work with y-webrtc.\n      // It will work with y-websockets-client\n      if (opts.role == null || opts.role === 'master') {\n        this.role = 'master'\n      } else if (opts.role === 'slave') {\n        this.role = 'slave'\n      } else {\n        throw new Error(\"Role must be either 'master' or 'slave'!\")\n      }\n      this.log = Y.debug('y:connector')\n      this.logMessage = Y.debug('y:connector-message')\n      this.y.db.forwardAppliedOperations = opts.forwardAppliedOperations || false\n      this.role = opts.role\n      this.connections = {}\n      this.isSynced = false\n      this.userEventListeners = []\n      this.whenSyncedListeners = []\n      this.currentSyncTarget = null\n      this.syncingClients = []\n      this.forwardToSyncingClients = opts.forwardToSyncingClients !== false\n      this.debug = opts.debug === true\n      this.syncStep2 = Promise.resolve()\n      this.broadcastOpBuffer = []\n      this.protocolVersion = 11\n      this.authInfo = opts.auth || null\n      this.checkAuth = opts.checkAuth || function () { return Promise.resolve('write') } // default is everyone has write access\n      if (opts.generateUserId === true) {\n        this.setUserId(Y.utils.generateGuid())\n      }\n    }\n    resetAuth (auth) {\n      if (this.authInfo !== auth) {\n        this.authInfo = auth\n        this.broadcast({\n          type: 'auth',\n          auth: this.authInfo\n        })\n      }\n    }\n    reconnect () {\n      this.log('reconnecting..')\n      return this.y.db.startGarbageCollector()\n    }\n    disconnect () {\n      this.log('discronnecting..')\n      this.connections = {}\n      this.isSynced = false\n      this.currentSyncTarget = null\n      this.syncingClients = []\n      this.whenSyncedListeners = []\n      this.y.db.stopGarbageCollector()\n      return this.y.db.whenTransactionsFinished()\n    }\n    repair () {\n      this.log('Repairing the state of Yjs. This can happen if messages get lost, and Yjs detects that something is wrong. If this happens often, please report an issue here: https://github.com/y-js/yjs/issues')\n      for (var name in this.connections) {\n        this.connections[name].isSynced = false\n      }\n      this.isSynced = false\n      this.currentSyncTarget = null\n      this.findNextSyncTarget()\n    }\n    setUserId (userId) {\n      if (this.userId == null) {\n        this.log('Set userId to \"%s\"', userId)\n        this.userId = userId\n        return this.y.db.setUserId(userId)\n      } else {\n        return null\n      }\n    }\n    onUserEvent (f) {\n      this.userEventListeners.push(f)\n    }\n    removeUserEventListener (f) {\n      this.userEventListeners = this.userEventListeners.filter(g => { f !== g })\n    }\n    userLeft (user) {\n      if (this.connections[user] != null) {\n        this.log('User left: %s', user)\n        delete this.connections[user]\n        if (user === this.currentSyncTarget) {\n          this.currentSyncTarget = null\n          this.findNextSyncTarget()\n        }\n        this.syncingClients = this.syncingClients.filter(function (cli) {\n          return cli !== user\n        })\n        for (var f of this.userEventListeners) {\n          f({\n            action: 'userLeft',\n            user: user\n          })\n        }\n      }\n    }\n    userJoined (user, role) {\n      if (role == null) {\n        throw new Error('You must specify the role of the joined user!')\n      }\n      if (this.connections[user] != null) {\n        throw new Error('This user already joined!')\n      }\n      this.log('User joined: %s', user)\n      this.connections[user] = {\n        isSynced: false,\n        role: role\n      }\n      for (var f of this.userEventListeners) {\n        f({\n          action: 'userJoined',\n          user: user,\n          role: role\n        })\n      }\n      if (this.currentSyncTarget == null) {\n        this.findNextSyncTarget()\n      }\n    }\n    // Execute a function _when_ we are connected.\n    // If not connected, wait until connected\n    whenSynced (f) {\n      if (this.isSynced) {\n        f()\n      } else {\n        this.whenSyncedListeners.push(f)\n      }\n    }\n    findNextSyncTarget () {\n      if (this.currentSyncTarget != null) {\n        return // \"The current sync has not finished!\"\n      }\n\n      var syncUser = null\n      for (var uid in this.connections) {\n        if (!this.connections[uid].isSynced) {\n          syncUser = uid\n          break\n        }\n      }\n      var conn = this\n      if (syncUser != null) {\n        this.currentSyncTarget = syncUser\n        this.y.db.requestTransaction(function *() {\n          var stateSet = yield* this.getStateSet()\n          var deleteSet = yield* this.getDeleteSet()\n          var answer = {\n            type: 'sync step 1',\n            stateSet: stateSet,\n            deleteSet: deleteSet,\n            protocolVersion: conn.protocolVersion,\n            auth: conn.authInfo\n          }\n          conn.send(syncUser, answer)\n        })\n      } else {\n        if (!conn.isSynced) {\n          this.y.db.requestTransaction(function *() {\n            if (!conn.isSynced) {\n              // it is crucial that isSynced is set at the time garbageCollectAfterSync is called\n              conn.isSynced = true\n              yield* this.garbageCollectAfterSync()\n              // call whensynced listeners\n              for (var f of conn.whenSyncedListeners) {\n                f()\n              }\n              conn.whenSyncedListeners = []\n            }\n          })\n        }\n      }\n    }\n    send (uid, message) {\n      this.log('Send \\'%s\\' to %s', message.type, uid)\n      this.logMessage('Message: %j', message)\n    }\n    broadcast (message) {\n      this.log('Broadcast \\'%s\\'', message.type)\n      this.logMessage('Message: %j', message)\n    }\n    /*\n      Buffer operations, and broadcast them when ready.\n    */\n    broadcastOps (ops) {\n      ops = ops.map(function (op) {\n        return Y.Struct[op.struct].encode(op)\n      })\n      var self = this\n      function broadcastOperations () {\n        if (self.broadcastOpBuffer.length > 0) {\n          self.broadcast({\n            type: 'update',\n            ops: self.broadcastOpBuffer\n          })\n          self.broadcastOpBuffer = []\n        }\n      }\n      if (this.broadcastOpBuffer.length === 0) {\n        this.broadcastOpBuffer = ops\n        if (this.y.db.transactionInProgress) {\n          this.y.db.whenTransactionsFinished().then(broadcastOperations)\n        } else {\n          setTimeout(broadcastOperations, 0)\n        }\n      } else {\n        this.broadcastOpBuffer = this.broadcastOpBuffer.concat(ops)\n      }\n    }\n    /*\n      You received a raw message, and you know that it is intended for Yjs. Then call this function.\n    */\n    receiveMessage (sender/* :UserId */, message/* :Message */) {\n      if (sender === this.userId) {\n        return Promise.resolve()\n      }\n      this.log('Receive \\'%s\\' from %s', message.type, sender)\n      this.logMessage('Message: %j', message)\n      if (message.protocolVersion != null && message.protocolVersion !== this.protocolVersion) {\n        this.log(\n          `You tried to sync with a yjs instance that has a different protocol version\n          (You: ${this.protocolVersion}, Client: ${message.protocolVersion}).\n          The sync was stopped. You need to upgrade your dependencies (especially Yjs & the Connector)!\n          `)\n        this.send(sender, {\n          type: 'sync stop',\n          protocolVersion: this.protocolVersion\n        })\n        return Promise.reject('Incompatible protocol version')\n      }\n      if (message.auth != null && this.connections[sender] != null) {\n        // authenticate using auth in message\n        var auth = this.checkAuth(message.auth, this.y, sender)\n        this.connections[sender].auth = auth\n        auth.then(auth => {\n          for (var f of this.userEventListeners) {\n            f({\n              action: 'userAuthenticated',\n              user: sender,\n              auth: auth\n            })\n          }\n        })\n      } else if (this.connections[sender] != null && this.connections[sender].auth == null) {\n        // authenticate without otherwise\n        this.connections[sender].auth = this.checkAuth(null, this.y, sender)\n      }\n      if (this.connections[sender] != null && this.connections[sender].auth != null) {\n        return this.connections[sender].auth.then((auth) => {\n          if (message.type === 'sync step 1' && canRead(auth)) {\n            let conn = this\n            let m = message\n\n            this.y.db.requestTransaction(function *() {\n              var currentStateSet = yield* this.getStateSet()\n              if (canWrite(auth)) {\n                yield* this.applyDeleteSet(m.deleteSet)\n              }\n\n              var ds = yield* this.getDeleteSet()\n              var answer = {\n                type: 'sync step 2',\n                stateSet: currentStateSet,\n                deleteSet: ds,\n                protocolVersion: this.protocolVersion,\n                auth: this.authInfo\n              }\n              answer.os = yield* this.getOperations(m.stateSet)\n              conn.send(sender, answer)\n              if (this.forwardToSyncingClients) {\n                conn.syncingClients.push(sender)\n                setTimeout(function () {\n                  conn.syncingClients = conn.syncingClients.filter(function (cli) {\n                    return cli !== sender\n                  })\n                  conn.send(sender, {\n                    type: 'sync done'\n                  })\n                }, 5000) // TODO: conn.syncingClientDuration)\n              } else {\n                conn.send(sender, {\n                  type: 'sync done'\n                })\n              }\n            })\n          } else if (message.type === 'sync step 2' && canWrite(auth)) {\n            var db = this.y.db\n            var defer = {}\n            defer.promise = new Promise(function (resolve) {\n              defer.resolve = resolve\n            })\n            this.syncStep2 = defer.promise\n            let m /* :MessageSyncStep2 */ = message\n            db.requestTransaction(function * () {\n              yield* this.applyDeleteSet(m.deleteSet)\n              if (m.osUntransformed != null) {\n                yield* this.applyOperationsUntransformed(m.osUntransformed, m.stateSet)\n              } else {\n                this.store.apply(m.os)\n              }\n              /*\n               * This just sends the complete hb after some time\n               * Mostly for debugging..\n               *\n              db.requestTransaction(function * () {\n                var ops = yield* this.getOperations(m.stateSet)\n                if (ops.length > 0) {\n                  if (!broadcastHB) { // TODO: consider to broadcast here..\n                    conn.send(sender, {\n                      type: 'update',\n                      ops: ops\n                    })\n                  } else {\n                    // broadcast only once!\n                    conn.broadcastOps(ops)\n                  }\n                }\n              })\n              */\n              defer.resolve()\n            })\n          } else if (message.type === 'sync done') {\n            var self = this\n            this.syncStep2.then(function () {\n              self._setSyncedWith(sender)\n            })\n          } else if (message.type === 'update' && canWrite(auth)) {\n            if (this.forwardToSyncingClients) {\n              for (var client of this.syncingClients) {\n                this.send(client, message)\n              }\n            }\n            if (this.y.db.forwardAppliedOperations) {\n              var delops = message.ops.filter(function (o) {\n                return o.struct === 'Delete'\n              })\n              if (delops.length > 0) {\n                this.broadcastOps(delops)\n              }\n            }\n            this.y.db.apply(message.ops)\n          }\n        })\n      } else {\n        return Promise.reject('Unable to deliver message')\n      }\n    }\n    _setSyncedWith (user) {\n      var conn = this.connections[user]\n      if (conn != null) {\n        conn.isSynced = true\n      }\n      if (user === this.currentSyncTarget) {\n        this.currentSyncTarget = null\n        this.findNextSyncTarget()\n      }\n    }\n    /*\n      Currently, the HB encodes operations as JSON. For the moment I want to keep it\n      that way. Maybe we support encoding in the HB as XML in the future, but for now I don't want\n      too much overhead. Y is very likely to get changed a lot in the future\n\n      Because we don't want to encode JSON as string (with character escaping, wich makes it pretty much unreadable)\n      we encode the JSON as XML.\n\n      When the HB support encoding as XML, the format should look pretty much like this.\n\n      does not support primitive values as array elements\n      expects an ltx (less than xml) object\n    */\n    parseMessageFromXml (m/* :any */) {\n      function parseArray (node) {\n        for (var n of node.children) {\n          if (n.getAttribute('isArray') === 'true') {\n            return parseArray(n)\n          } else {\n            return parseObject(n)\n          }\n        }\n      }\n      function parseObject (node/* :any */) {\n        var json = {}\n        for (var attrName in node.attrs) {\n          var value = node.attrs[attrName]\n          var int = parseInt(value, 10)\n          if (isNaN(int) || ('' + int) !== value) {\n            json[attrName] = value\n          } else {\n            json[attrName] = int\n          }\n        }\n        for (var n/* :any */ in node.children) {\n          var name = n.name\n          if (n.getAttribute('isArray') === 'true') {\n            json[name] = parseArray(n)\n          } else {\n            json[name] = parseObject(n)\n          }\n        }\n        return json\n      }\n      parseObject(m)\n    }\n    /*\n      encode message in xml\n      we use string because Strophe only accepts an \"xml-string\"..\n      So {a:4,b:{c:5}} will look like\n      <y a=\"4\">\n        <b c=\"5\"></b>\n      </y>\n      m - ltx element\n      json - Object\n    */\n    encodeMessageToXml (msg, obj) {\n      // attributes is optional\n      function encodeObject (m, json) {\n        for (var name in json) {\n          var value = json[name]\n          if (name == null) {\n            // nop\n          } else if (value.constructor === Object) {\n            encodeObject(m.c(name), value)\n          } else if (value.constructor === Array) {\n            encodeArray(m.c(name), value)\n          } else {\n            m.setAttribute(name, value)\n          }\n        }\n      }\n      function encodeArray (m, array) {\n        m.setAttribute('isArray', 'true')\n        for (var e of array) {\n          if (e.constructor === Object) {\n            encodeObject(m.c('array-element'), e)\n          } else {\n            encodeArray(m.c('array-element'), e)\n          }\n        }\n      }\n      if (obj.constructor === Object) {\n        encodeObject(msg.c('y', { xmlns: 'http://y.ninja/connector-stanza' }), obj)\n      } else if (obj.constructor === Array) {\n        encodeArray(msg.c('y', { xmlns: 'http://y.ninja/connector-stanza' }), obj)\n      } else {\n        throw new Error(\"I can't encode this json!\")\n      }\n    }\n  }\n  Y.AbstractConnector = AbstractConnector\n}\n\n\n//# sourceURL=webpack:///./node_modules/yjs/src/Connector.js?");

/***/ }),

/***/ "./node_modules/yjs/src/Connectors/Test.js":
/*!*************************************************!*\
  !*** ./node_modules/yjs/src/Connectors/Test.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* global getRandom, async */\n\n\nmodule.exports = function (Y) {\n  var globalRoom = {\n    users: {},\n    buffers: {},\n    removeUser: function (user) {\n      for (var i in this.users) {\n        this.users[i].userLeft(user)\n      }\n      delete this.users[user]\n      delete this.buffers[user]\n    },\n    addUser: function (connector) {\n      this.users[connector.userId] = connector\n      this.buffers[connector.userId] = {}\n      for (var uname in this.users) {\n        if (uname !== connector.userId) {\n          var u = this.users[uname]\n          u.userJoined(connector.userId, 'master')\n          connector.userJoined(u.userId, 'master')\n        }\n      }\n    },\n    whenTransactionsFinished: function () {\n      var self = this\n      return new Promise(function (resolve, reject) {\n        // The connector first has to send the messages to the db.\n        // Wait for the checkAuth-function to resolve\n        // The test lib only has a simple checkAuth function: `() => Promise.resolve()`\n        // Just add a function to the event-queue, in order to wait for the event.\n        // TODO: this may be buggy in test applications (but it isn't be for real-life apps)\n        setTimeout(function () {\n          var ps = []\n          for (var name in self.users) {\n            ps.push(self.users[name].y.db.whenTransactionsFinished())\n          }\n          Promise.all(ps).then(resolve, reject)\n        }, 10)\n      })\n    },\n    flushOne: function flushOne () {\n      var bufs = []\n      for (var receiver in globalRoom.buffers) {\n        let buff = globalRoom.buffers[receiver]\n        var push = false\n        for (let sender in buff) {\n          if (buff[sender].length > 0) {\n            push = true\n            break\n          }\n        }\n        if (push) {\n          bufs.push(receiver)\n        }\n      }\n      if (bufs.length > 0) {\n        var userId = getRandom(bufs)\n        let buff = globalRoom.buffers[userId]\n        let sender = getRandom(Object.keys(buff))\n        var m = buff[sender].shift()\n        if (buff[sender].length === 0) {\n          delete buff[sender]\n        }\n        var user = globalRoom.users[userId]\n        return user.receiveMessage(m[0], m[1]).then(function () {\n          return user.y.db.whenTransactionsFinished()\n        }, function () {})\n      } else {\n        return false\n      }\n    },\n    flushAll: function () {\n      return new Promise(function (resolve) {\n        // flushes may result in more created operations,\n        // flush until there is nothing more to flush\n        function nextFlush () {\n          var c = globalRoom.flushOne()\n          if (c) {\n            while (c) {\n              c = globalRoom.flushOne()\n            }\n            globalRoom.whenTransactionsFinished().then(nextFlush)\n          } else {\n            c = globalRoom.flushOne()\n            if (c) {\n              c.then(function () {\n                globalRoom.whenTransactionsFinished().then(nextFlush)\n              })\n            } else {\n              resolve()\n            }\n          }\n        }\n        globalRoom.whenTransactionsFinished().then(nextFlush)\n      })\n    }\n  }\n  Y.utils.globalRoom = globalRoom\n\n  var userIdCounter = 0\n\n  class Test extends Y.AbstractConnector {\n    constructor (y, options) {\n      if (options === undefined) {\n        throw new Error('Options must not be undefined!')\n      }\n      options.role = 'master'\n      options.forwardToSyncingClients = false\n      super(y, options)\n      this.setUserId((userIdCounter++) + '').then(() => {\n        globalRoom.addUser(this)\n      })\n      this.globalRoom = globalRoom\n      this.syncingClientDuration = 0\n    }\n    receiveMessage (sender, m) {\n      return super.receiveMessage(sender, JSON.parse(JSON.stringify(m)))\n    }\n    send (userId, message) {\n      var buffer = globalRoom.buffers[userId]\n      if (buffer != null) {\n        if (buffer[this.userId] == null) {\n          buffer[this.userId] = []\n        }\n        buffer[this.userId].push(JSON.parse(JSON.stringify([this.userId, message])))\n      }\n    }\n    broadcast (message) {\n      for (var key in globalRoom.buffers) {\n        var buff = globalRoom.buffers[key]\n        if (buff[this.userId] == null) {\n          buff[this.userId] = []\n        }\n        buff[this.userId].push(JSON.parse(JSON.stringify([this.userId, message])))\n      }\n    }\n    isDisconnected () {\n      return globalRoom.users[this.userId] == null\n    }\n    reconnect () {\n      if (this.isDisconnected()) {\n        globalRoom.addUser(this)\n        super.reconnect()\n      }\n      return Y.utils.globalRoom.flushAll()\n    }\n    disconnect () {\n      var waitForMe = Promise.resolve()\n      if (!this.isDisconnected()) {\n        globalRoom.removeUser(this.userId)\n        waitForMe = super.disconnect()\n      }\n      var self = this\n      return waitForMe.then(function () {\n        return self.y.db.whenTransactionsFinished()\n      })\n    }\n    flush () {\n      var self = this\n      return async(function * () {\n        var buff = globalRoom.buffers[self.userId]\n        while (Object.keys(buff).length > 0) {\n          var sender = getRandom(Object.keys(buff))\n          var m = buff[sender].shift()\n          if (buff[sender].length === 0) {\n            delete buff[sender]\n          }\n          yield this.receiveMessage(m[0], m[1])\n        }\n        yield self.whenTransactionsFinished()\n      })\n    }\n  }\n\n  Y.Test = Test\n}\n\n\n//# sourceURL=webpack:///./node_modules/yjs/src/Connectors/Test.js?");

/***/ }),

/***/ "./node_modules/yjs/src/Database.js":
/*!******************************************!*\
  !*** ./node_modules/yjs/src/Database.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* @flow */\n\n\nmodule.exports = function (Y /* :any */) {\n  /*\n    Partial definition of an OperationStore.\n    TODO: name it Database, operation store only holds operations.\n\n    A database definition must alse define the following methods:\n    * logTable() (optional)\n      - show relevant information information in a table\n    * requestTransaction(makeGen)\n      - request a transaction\n    * destroy()\n      - destroy the database\n  */\n  class AbstractDatabase {\n    /* ::\n    y: YConfig;\n    forwardAppliedOperations: boolean;\n    listenersById: Object;\n    listenersByIdExecuteNow: Array<Object>;\n    listenersByIdRequestPending: boolean;\n    initializedTypes: Object;\n    whenUserIdSetListener: ?Function;\n    waitingTransactions: Array<Transaction>;\n    transactionInProgress: boolean;\n    executeOrder: Array<Object>;\n    gc1: Array<Struct>;\n    gc2: Array<Struct>;\n    gcTimeout: number;\n    gcInterval: any;\n    garbageCollect: Function;\n    executeOrder: Array<any>; // for debugging only\n    userId: UserId;\n    opClock: number;\n    transactionsFinished: ?{promise: Promise, resolve: any};\n    transact: (x: ?Generator) => any;\n    */\n    constructor (y, opts) {\n      this.y = y\n      this.dbOpts = opts\n      var os = this\n      this.userId = null\n      var resolve\n      this.userIdPromise = new Promise(function (r) {\n        resolve = r\n      })\n      this.userIdPromise.resolve = resolve\n      // whether to broadcast all applied operations (insert & delete hook)\n      this.forwardAppliedOperations = false\n      // E.g. this.listenersById[id] : Array<Listener>\n      this.listenersById = {}\n      // Execute the next time a transaction is requested\n      this.listenersByIdExecuteNow = []\n      // A transaction is requested\n      this.listenersByIdRequestPending = false\n      /* To make things more clear, the following naming conventions:\n         * ls : we put this.listenersById on ls\n         * l : Array<Listener>\n         * id : Id (can't use as property name)\n         * sid : String (converted from id via JSON.stringify\n                         so we can use it as a property name)\n\n        Always remember to first overwrite\n        a property before you iterate over it!\n      */\n      // TODO: Use ES7 Weak Maps. This way types that are no longer user,\n      // wont be kept in memory.\n      this.initializedTypes = {}\n      this.waitingTransactions = []\n      this.transactionInProgress = false\n      this.transactionIsFlushed = false\n      if (typeof YConcurrency_TestingMode !== 'undefined') {\n        this.executeOrder = []\n      }\n      this.gc1 = [] // first stage\n      this.gc2 = [] // second stage -> after that, remove the op\n\n      function garbageCollect () {\n        return os.whenTransactionsFinished().then(function () {\n          if (os.gc1.length > 0 || os.gc2.length > 0) {\n            if (!os.y.connector.isSynced) {\n              console.warn('gc should be empty when not synced!')\n            }\n            return new Promise((resolve) => {\n              os.requestTransaction(function * () {\n                if (os.y.connector != null && os.y.connector.isSynced) {\n                  for (var i = 0; i < os.gc2.length; i++) {\n                    var oid = os.gc2[i]\n                    yield* this.garbageCollectOperation(oid)\n                  }\n                  os.gc2 = os.gc1\n                  os.gc1 = []\n                }\n                // TODO: Use setInterval here instead (when garbageCollect is called several times there will be several timeouts..)\n                if (os.gcTimeout > 0) {\n                  os.gcInterval = setTimeout(garbageCollect, os.gcTimeout)\n                }\n                resolve()\n              })\n            })\n          } else {\n            // TODO: see above\n            if (os.gcTimeout > 0) {\n              os.gcInterval = setTimeout(garbageCollect, os.gcTimeout)\n            }\n            return Promise.resolve()\n          }\n        })\n      }\n      this.garbageCollect = garbageCollect\n      this.startGarbageCollector()\n\n      this.repairCheckInterval = !opts.repairCheckInterval ? 6000 : opts.repairCheckInterval\n      this.opsReceivedTimestamp = new Date()\n      this.startRepairCheck()\n    }\n    startGarbageCollector () {\n      this.gc = this.dbOpts.gc == null || this.dbOpts.gc\n      if (this.gc) {\n        this.gcTimeout = !this.dbOpts.gcTimeout ? 50000 : this.dbOpts.gcTimeout\n      } else {\n        this.gcTimeout = -1\n      }\n      if (this.gcTimeout > 0) {\n        this.garbageCollect()\n      }\n    }\n    startRepairCheck () {\n      var os = this\n      if (this.repairCheckInterval > 0) {\n        this.repairCheckIntervalHandler = setInterval(function repairOnMissingOperations () {\n          /*\n            Case 1. No ops have been received in a while (new Date() - os.opsReceivedTimestamp > os.repairCheckInterval)\n              - 1.1 os.listenersById is empty. Then the state was correct the whole time. -> Nothing to do (nor to update)\n              - 1.2 os.listenersById is not empty.\n                      * Then the state was incorrect for at least {os.repairCheckInterval} seconds.\n                      * -> Remove everything in os.listenersById and sync again (connector.repair())\n            Case 2. An op has been received in the last {os.repairCheckInterval } seconds.\n                    It is not yet necessary to check for faulty behavior. Everything can still resolve itself. Wait for more messages.\n                    If nothing was received for a while and os.listenersById is still not emty, we are in case 1.2\n                    -> Do nothing\n\n            Baseline here is: we really only have to catch case 1.2..\n          */\n          if (\n            new Date() - os.opsReceivedTimestamp > os.repairCheckInterval &&\n            Object.keys(os.listenersById).length > 0 // os.listenersById is not empty\n          ) {\n            // haven't received operations for over {os.repairCheckInterval} seconds, resend state vector\n            os.listenersById = {}\n            os.opsReceivedTimestamp = new Date() // update so you don't send repair several times in a row\n            os.y.connector.repair()\n          }\n        }, this.repairCheckInterval)\n      }\n    }\n    stopRepairCheck () {\n      clearInterval(this.repairCheckIntervalHandler)\n    }\n    queueGarbageCollector (id) {\n      if (this.y.connector.isSynced && this.gc) {\n        this.gc1.push(id)\n      }\n    }\n    emptyGarbageCollector () {\n      return new Promise(resolve => {\n        var check = () => {\n          if (this.gc1.length > 0 || this.gc2.length > 0) {\n            this.garbageCollect().then(check)\n          } else {\n            resolve()\n          }\n        }\n        setTimeout(check, 0)\n      })\n    }\n    addToDebug () {\n      if (typeof YConcurrency_TestingMode !== 'undefined') {\n        var command /* :string */ = Array.prototype.map.call(arguments, function (s) {\n          if (typeof s === 'string') {\n            return s\n          } else {\n            return JSON.stringify(s)\n          }\n        }).join('').replace(/\"/g, \"'\").replace(/,/g, ', ').replace(/:/g, ': ')\n        this.executeOrder.push(command)\n      }\n    }\n    getDebugData () {\n      console.log(this.executeOrder.join('\\n'))\n    }\n    stopGarbageCollector () {\n      var self = this\n      this.gc = false\n      this.gcTimeout = -1\n      return new Promise(function (resolve) {\n        self.requestTransaction(function * () {\n          var ungc /* :Array<Struct> */ = self.gc1.concat(self.gc2)\n          self.gc1 = []\n          self.gc2 = []\n          for (var i = 0; i < ungc.length; i++) {\n            var op = yield* this.getOperation(ungc[i])\n            if (op != null) {\n              delete op.gc\n              yield* this.setOperation(op)\n            }\n          }\n          resolve()\n        })\n      })\n    }\n    /*\n      Try to add to GC.\n\n      TODO: rename this function\n\n      Rulez:\n      * Only gc if this user is online & gc turned on\n      * The most left element in a list must not be gc'd.\n        => There is at least one element in the list\n\n      returns true iff op was added to GC\n    */\n    * addToGarbageCollector (op, left) {\n      if (\n        op.gc == null &&\n        op.deleted === true &&\n        this.store.gc &&\n        this.store.y.connector.isSynced\n      ) {\n        var gc = false\n        if (left != null && left.deleted === true) {\n          gc = true\n        } else if (op.content != null && op.content.length > 1) {\n          op = yield* this.getInsertionCleanStart([op.id[0], op.id[1] + 1])\n          gc = true\n        }\n        if (gc) {\n          op.gc = true\n          yield* this.setOperation(op)\n          this.store.queueGarbageCollector(op.id)\n          return true\n        }\n      }\n      return false\n    }\n    removeFromGarbageCollector (op) {\n      function filter (o) {\n        return !Y.utils.compareIds(o, op.id)\n      }\n      this.gc1 = this.gc1.filter(filter)\n      this.gc2 = this.gc2.filter(filter)\n      delete op.gc\n    }\n    destroyTypes () {\n      for (var key in this.initializedTypes) {\n        var type = this.initializedTypes[key]\n        if (type._destroy != null) {\n          type._destroy()\n        } else {\n          console.error('The type you included does not provide destroy functionality, it will remain in memory (updating your packages will help).')\n        }\n      }\n    }\n    * destroy () {\n      clearInterval(this.gcInterval)\n      this.gcInterval = null\n      this.stopRepairCheck()\n    }\n    setUserId (userId) {\n      if (!this.userIdPromise.inProgress) {\n        this.userIdPromise.inProgress = true\n        var self = this\n        self.requestTransaction(function * () {\n          self.userId = userId\n          var state = yield* this.getState(userId)\n          self.opClock = state.clock\n          self.userIdPromise.resolve(userId)\n        })\n      }\n      return this.userIdPromise\n    }\n    whenUserIdSet (f) {\n      this.userIdPromise.then(f)\n    }\n    getNextOpId (numberOfIds) {\n      if (numberOfIds == null) {\n        throw new Error('getNextOpId expects the number of created ids to create!')\n      } else if (this.userId == null) {\n        throw new Error('OperationStore not yet initialized!')\n      } else {\n        var id = [this.userId, this.opClock]\n        this.opClock += numberOfIds\n        return id\n      }\n    }\n    /*\n      Apply a list of operations.\n\n      * we save a timestamp, because we received new operations that could resolve ops in this.listenersById (see this.startRepairCheck)\n      * get a transaction\n      * check whether all Struct.*.requiredOps are in the OS\n      * check if it is an expected op (otherwise wait for it)\n      * check if was deleted, apply a delete operation after op was applied\n    */\n    apply (ops) {\n      this.opsReceivedTimestamp = new Date()\n      for (var i = 0; i < ops.length; i++) {\n        var o = ops[i]\n        if (o.id == null || o.id[0] !== this.y.connector.userId) {\n          var required = Y.Struct[o.struct].requiredOps(o)\n          if (o.requires != null) {\n            required = required.concat(o.requires)\n          }\n          this.whenOperationsExist(required, o)\n        }\n      }\n    }\n    /*\n      op is executed as soon as every operation requested is available.\n      Note that Transaction can (and should) buffer requests.\n    */\n    whenOperationsExist (ids, op) {\n      if (ids.length > 0) {\n        let listener = {\n          op: op,\n          missing: ids.length\n        }\n\n        for (let i = 0; i < ids.length; i++) {\n          let id = ids[i]\n          let sid = JSON.stringify(id)\n          let l = this.listenersById[sid]\n          if (l == null) {\n            l = []\n            this.listenersById[sid] = l\n          }\n          l.push(listener)\n        }\n      } else {\n        this.listenersByIdExecuteNow.push({\n          op: op\n        })\n      }\n\n      if (this.listenersByIdRequestPending) {\n        return\n      }\n\n      this.listenersByIdRequestPending = true\n      var store = this\n\n      this.requestTransaction(function * () {\n        var exeNow = store.listenersByIdExecuteNow\n        store.listenersByIdExecuteNow = []\n\n        var ls = store.listenersById\n        store.listenersById = {}\n\n        store.listenersByIdRequestPending = false\n\n        for (let key = 0; key < exeNow.length; key++) {\n          let o = exeNow[key].op\n          yield* store.tryExecute.call(this, o)\n        }\n\n        for (var sid in ls) {\n          var l = ls[sid]\n          var id = JSON.parse(sid)\n          var op\n          if (typeof id[1] === 'string') {\n            op = yield* this.getOperation(id)\n          } else {\n            op = yield* this.getInsertion(id)\n          }\n          if (op == null) {\n            store.listenersById[sid] = l\n          } else {\n            for (let i = 0; i < l.length; i++) {\n              let listener = l[i]\n              let o = listener.op\n              if (--listener.missing === 0) {\n                yield* store.tryExecute.call(this, o)\n              }\n            }\n          }\n        }\n      })\n    }\n    /*\n      Actually execute an operation, when all expected operations are available.\n    */\n    /* :: // TODO: this belongs somehow to transaction\n    store: Object;\n    getOperation: any;\n    isGarbageCollected: any;\n    addOperation: any;\n    whenOperationsExist: any;\n    */\n    * tryExecute (op) {\n      this.store.addToDebug('yield* this.store.tryExecute.call(this, ', JSON.stringify(op), ')')\n      if (op.struct === 'Delete') {\n        yield* Y.Struct.Delete.execute.call(this, op)\n        // this is now called in Transaction.deleteOperation!\n        // yield* this.store.operationAdded(this, op)\n      } else {\n        // check if this op was defined\n        var defined = yield* this.getInsertion(op.id)\n        while (defined != null && defined.content != null) {\n          // check if this op has a longer content in the case it is defined\n          if (defined.id[1] + defined.content.length < op.id[1] + op.content.length) {\n            var overlapSize = defined.content.length - (op.id[1] - defined.id[1])\n            op.content.splice(0, overlapSize)\n            op.id = [op.id[0], op.id[1] + overlapSize]\n            op.left = Y.utils.getLastId(defined)\n            op.origin = op.left\n            defined = yield* this.getOperation(op.id) // getOperation suffices here\n          } else {\n            break\n          }\n        }\n        if (defined == null) {\n          var opid = op.id\n          var isGarbageCollected = yield* this.isGarbageCollected(opid)\n          if (!isGarbageCollected) {\n            // TODO: reduce number of get / put calls for op ..\n            yield* Y.Struct[op.struct].execute.call(this, op)\n            yield* this.addOperation(op)\n            yield* this.store.operationAdded(this, op)\n            // operationAdded can change op..\n            op = yield* this.getOperation(opid)\n            // if insertion, try to combine with left\n            yield* this.tryCombineWithLeft(op)\n          }\n        }\n      }\n    }\n    /*\n     * Called by a transaction when an operation is added.\n     * This function is especially important for y-indexeddb, where several instances may share a single database.\n     * Every time an operation is created by one instance, it is send to all other instances and operationAdded is called\n     *\n     * If it's not a Delete operation:\n     *   * Checks if another operation is executable (listenersById)\n     *   * Update state, if possible\n     *\n     * Always:\n     *   * Call type\n     */\n    * operationAdded (transaction, op) {\n      if (op.struct === 'Delete') {\n        var type = this.initializedTypes[JSON.stringify(op.targetParent)]\n        if (type != null) {\n          yield* type._changed(transaction, op)\n        }\n      } else {\n        // increase SS\n        yield* transaction.updateState(op.id[0])\n        var opLen = op.content != null ? op.content.length : 1\n        for (let i = 0; i < opLen; i++) {\n          // notify whenOperation listeners (by id)\n          var sid = JSON.stringify([op.id[0], op.id[1] + i])\n          var l = this.listenersById[sid]\n          delete this.listenersById[sid]\n          if (l != null) {\n            for (var key in l) {\n              var listener = l[key]\n              if (--listener.missing === 0) {\n                this.whenOperationsExist([], listener.op)\n              }\n            }\n          }\n        }\n        var t = this.initializedTypes[JSON.stringify(op.parent)]\n\n        // if parent is deleted, mark as gc'd and return\n        if (op.parent != null) {\n          var parentIsDeleted = yield* transaction.isDeleted(op.parent)\n          if (parentIsDeleted) {\n            yield* transaction.deleteList(op.id)\n            return\n          }\n        }\n\n        // notify parent, if it was instanciated as a custom type\n        if (t != null) {\n          let o = Y.utils.copyOperation(op)\n          yield* t._changed(transaction, o)\n        }\n        if (!op.deleted) {\n          // Delete if DS says this is actually deleted\n          var len = op.content != null ? op.content.length : 1\n          var startId = op.id // You must not use op.id in the following loop, because op will change when deleted\n            // TODO: !! console.log('TODO: change this before commiting')\n          for (let i = 0; i < len; i++) {\n            var id = [startId[0], startId[1] + i]\n            var opIsDeleted = yield* transaction.isDeleted(id)\n            if (opIsDeleted) {\n              var delop = {\n                struct: 'Delete',\n                target: id\n              }\n              yield* this.tryExecute.call(transaction, delop)\n            }\n          }\n        }\n      }\n    }\n    whenTransactionsFinished () {\n      if (this.transactionInProgress) {\n        if (this.transactionsFinished == null) {\n          var resolve\n          var promise = new Promise(function (r) {\n            resolve = r\n          })\n          this.transactionsFinished = {\n            resolve: resolve,\n            promise: promise\n          }\n        }\n        return this.transactionsFinished.promise\n      } else {\n        return Promise.resolve()\n      }\n    }\n    // Check if there is another transaction request.\n    // * the last transaction is always a flush :)\n    getNextRequest () {\n      if (this.waitingTransactions.length === 0) {\n        if (this.transactionIsFlushed) {\n          this.transactionInProgress = false\n          this.transactionIsFlushed = false\n          if (this.transactionsFinished != null) {\n            this.transactionsFinished.resolve()\n            this.transactionsFinished = null\n          }\n          return null\n        } else {\n          this.transactionIsFlushed = true\n          return function * () {\n            yield* this.flush()\n          }\n        }\n      } else {\n        this.transactionIsFlushed = false\n        return this.waitingTransactions.shift()\n      }\n    }\n    requestTransaction (makeGen/* :any */, callImmediately) {\n      this.waitingTransactions.push(makeGen)\n      if (!this.transactionInProgress) {\n        this.transactionInProgress = true\n        setTimeout(() => {\n          this.transact(this.getNextRequest())\n        }, 0)\n      }\n    }\n    /*\n      Get a created/initialized type.\n    */\n    getType (id) {\n      return this.initializedTypes[JSON.stringify(id)]\n    }\n    /*\n      Init type. This is called when a remote operation is retrieved, and transformed to a type\n      TODO: delete type from store.initializedTypes[id] when corresponding id was deleted!\n    */\n    * initType (id, args) {\n      var sid = JSON.stringify(id)\n      var t = this.store.initializedTypes[sid]\n      if (t == null) {\n        var op/* :MapStruct | ListStruct */ = yield* this.getOperation(id)\n        if (op != null) {\n          t = yield* Y[op.type].typeDefinition.initType.call(this, this.store, op, args)\n          this.store.initializedTypes[sid] = t\n        }\n      }\n      return t\n    }\n    /*\n     Create type. This is called when the local user creates a type (which is a synchronous action)\n    */\n    createType (typedefinition, id) {\n      var structname = typedefinition[0].struct\n      id = id || this.getNextOpId(1)\n      var op = Y.Struct[structname].create(id)\n      op.type = typedefinition[0].name\n\n      this.requestTransaction(function * () {\n        if (op.id[0] === '_') {\n          yield* this.setOperation(op)\n        } else {\n          yield* this.applyCreatedOperations([op])\n        }\n      })\n      var t = Y[op.type].typeDefinition.createType(this, op, typedefinition[1])\n      this.initializedTypes[JSON.stringify(op.id)] = t\n      return t\n    }\n  }\n  Y.AbstractDatabase = AbstractDatabase\n}\n\n\n//# sourceURL=webpack:///./node_modules/yjs/src/Database.js?");

/***/ }),

/***/ "./node_modules/yjs/src/Struct.js":
/*!****************************************!*\
  !*** ./node_modules/yjs/src/Struct.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* @flow */\n\n\n/*\n An operation also defines the structure of a type. This is why operation and\n structure are used interchangeably here.\n\n It must be of the type Object. I hope to achieve some performance\n improvements when working on databases that support the json format.\n\n An operation must have the following properties:\n\n * encode\n     - Encode the structure in a readable format (preferably string- todo)\n * decode (todo)\n     - decode structure to json\n * execute\n     - Execute the semantics of an operation.\n * requiredOps\n     - Operations that are required to execute this operation.\n*/\nmodule.exports = function (Y/* :any */) {\n  var Struct = {\n    /* This is the only operation that is actually not a structure, because\n    it is not stored in the OS. This is why it _does not_ have an id\n\n    op = {\n      target: Id\n    }\n    */\n    Delete: {\n      encode: function (op) {\n        return {\n          target: op.target,\n          length: op.length || 0,\n          struct: 'Delete'\n        }\n      },\n      requiredOps: function (op) {\n        return [] // [op.target]\n      },\n      execute: function * (op) {\n        return yield* this.deleteOperation(op.target, op.length || 1)\n      }\n    },\n    Insert: {\n      /* {\n          content: [any],\n          opContent: Id,\n          id: Id,\n          left: Id,\n          origin: Id,\n          right: Id,\n          parent: Id,\n          parentSub: string (optional), // child of Map type\n        }\n      */\n      encode: function (op/* :Insertion */) /* :Insertion */ {\n        // TODO: you could not send the \"left\" property, then you also have to\n        // \"op.left = null\" in $execute or $decode\n        var e/* :any */ = {\n          id: op.id,\n          left: op.left,\n          right: op.right,\n          origin: op.origin,\n          parent: op.parent,\n          struct: op.struct\n        }\n        if (op.parentSub != null) {\n          e.parentSub = op.parentSub\n        }\n        if (op.hasOwnProperty('opContent')) {\n          e.opContent = op.opContent\n        } else {\n          e.content = op.content.slice()\n        }\n\n        return e\n      },\n      requiredOps: function (op) {\n        var ids = []\n        if (op.left != null) {\n          ids.push(op.left)\n        }\n        if (op.right != null) {\n          ids.push(op.right)\n        }\n        if (op.origin != null && !Y.utils.compareIds(op.left, op.origin)) {\n          ids.push(op.origin)\n        }\n        // if (op.right == null && op.left == null) {\n        ids.push(op.parent)\n\n        if (op.opContent != null) {\n          ids.push(op.opContent)\n        }\n        return ids\n      },\n      getDistanceToOrigin: function * (op) {\n        if (op.left == null) {\n          return 0\n        } else {\n          var d = 0\n          var o = yield* this.getInsertion(op.left)\n          while (!Y.utils.matchesId(o, op.origin)) {\n            d++\n            if (o.left == null) {\n              break\n            } else {\n              o = yield* this.getInsertion(o.left)\n            }\n          }\n          return d\n        }\n      },\n      /*\n      # $this has to find a unique position between origin and the next known character\n      # case 1: $origin equals $o.origin: the $creator parameter decides if left or right\n      #         let $OL= [o1,o2,o3,o4], whereby $this is to be inserted between o1 and o4\n      #         o2,o3 and o4 origin is 1 (the position of o2)\n      #         there is the case that $this.creator < o2.creator, but o3.creator < $this.creator\n      #         then o2 knows o3. Since on another client $OL could be [o1,o3,o4] the problem is complex\n      #         therefore $this would be always to the right of o3\n      # case 2: $origin < $o.origin\n      #         if current $this insert_position > $o origin: $this ins\n      #         else $insert_position will not change\n      #         (maybe we encounter case 1 later, then this will be to the right of $o)\n      # case 3: $origin > $o.origin\n      #         $this insert_position is to the left of $o (forever!)\n      */\n      execute: function * (op) {\n        var i // loop counter\n\n        // during this function some ops may get split into two pieces (e.g. with getInsertionCleanEnd)\n        // We try to merge them later, if possible\n        var tryToRemergeLater = []\n\n        if (op.origin != null) { // TODO: !== instead of !=\n          // we save in origin that op originates in it\n          // we need that later when we eventually garbage collect origin (see transaction)\n          var origin = yield* this.getInsertionCleanEnd(op.origin)\n          if (origin.originOf == null) {\n            origin.originOf = []\n          }\n          origin.originOf.push(op.id)\n          yield* this.setOperation(origin)\n          if (origin.right != null) {\n            tryToRemergeLater.push(origin.right)\n          }\n        }\n        var distanceToOrigin = i = yield* Struct.Insert.getDistanceToOrigin.call(this, op) // most cases: 0 (starts from 0)\n\n        // now we begin to insert op in the list of insertions..\n        var o\n        var parent\n        var start\n\n        // find o. o is the first conflicting operation\n        if (op.left != null) {\n          o = yield* this.getInsertionCleanEnd(op.left)\n          if (!Y.utils.compareIds(op.left, op.origin) && o.right != null) {\n            // only if not added previously\n            tryToRemergeLater.push(o.right)\n          }\n          o = (o.right == null) ? null : yield* this.getOperation(o.right)\n        } else { // left == null\n          parent = yield* this.getOperation(op.parent)\n          let startId = op.parentSub ? parent.map[op.parentSub] : parent.start\n          start = startId == null ? null : yield* this.getOperation(startId)\n          o = start\n        }\n\n        // make sure to split op.right if necessary (also add to tryCombineWithLeft)\n        if (op.right != null) {\n          tryToRemergeLater.push(op.right)\n          yield* this.getInsertionCleanStart(op.right)\n        }\n\n        // handle conflicts\n        while (true) {\n          if (o != null && !Y.utils.compareIds(o.id, op.right)) {\n            var oOriginDistance = yield* Struct.Insert.getDistanceToOrigin.call(this, o)\n            if (oOriginDistance === i) {\n              // case 1\n              if (o.id[0] < op.id[0]) {\n                op.left = Y.utils.getLastId(o)\n                distanceToOrigin = i + 1 // just ignore o.content.length, doesn't make a difference\n              }\n            } else if (oOriginDistance < i) {\n              // case 2\n              if (i - distanceToOrigin <= oOriginDistance) {\n                op.left = Y.utils.getLastId(o)\n                distanceToOrigin = i + 1 // just ignore o.content.length, doesn't make a difference\n              }\n            } else {\n              break\n            }\n            i++\n            if (o.right != null) {\n              o = yield* this.getInsertion(o.right)\n            } else {\n              o = null\n            }\n          } else {\n            break\n          }\n        }\n\n        // reconnect..\n        var left = null\n        var right = null\n        if (parent == null) {\n          parent = yield* this.getOperation(op.parent)\n        }\n\n        // reconnect left and set right of op\n        if (op.left != null) {\n          left = yield* this.getInsertion(op.left)\n          // link left\n          op.right = left.right\n          left.right = op.id\n\n          yield* this.setOperation(left)\n        } else {\n          // set op.right from parent, if necessary\n          op.right = op.parentSub ? parent.map[op.parentSub] || null : parent.start\n        }\n        // reconnect right\n        if (op.right != null) {\n          // TODO: wanna connect right too?\n          right = yield* this.getOperation(op.right)\n          right.left = Y.utils.getLastId(op)\n\n          // if right exists, and it is supposed to be gc'd. Remove it from the gc\n          if (right.gc != null) {\n            if (right.content != null && right.content.length > 1) {\n              right = yield* this.getInsertionCleanEnd(right.id)\n            }\n            this.store.removeFromGarbageCollector(right)\n          }\n          yield* this.setOperation(right)\n        }\n\n        // update parents .map/start/end properties\n        if (op.parentSub != null) {\n          if (left == null) {\n            parent.map[op.parentSub] = op.id\n            yield* this.setOperation(parent)\n          }\n          // is a child of a map struct.\n          // Then also make sure that only the most left element is not deleted\n          // We do not call the type in this case (this is what the third parameter is for)\n          if (op.right != null) {\n            yield* this.deleteOperation(op.right, 1, true)\n          }\n          if (op.left != null) {\n            yield* this.deleteOperation(op.id, 1, true)\n          }\n        } else {\n          if (right == null || left == null) {\n            if (right == null) {\n              parent.end = Y.utils.getLastId(op)\n            }\n            if (left == null) {\n              parent.start = op.id\n            }\n            yield* this.setOperation(parent)\n          }\n        }\n\n        // try to merge original op.left and op.origin\n        for (i = 0; i < tryToRemergeLater.length; i++) {\n          var m = yield* this.getOperation(tryToRemergeLater[i])\n          yield* this.tryCombineWithLeft(m)\n        }\n      }\n    },\n    List: {\n      /*\n      {\n        start: null,\n        end: null,\n        struct: \"List\",\n        type: \"\",\n        id: this.os.getNextOpId(1)\n      }\n      */\n      create: function (id) {\n        return {\n          start: null,\n          end: null,\n          struct: 'List',\n          id: id\n        }\n      },\n      encode: function (op) {\n        var e = {\n          struct: 'List',\n          id: op.id,\n          type: op.type\n        }\n        if (op.requires != null) {\n          e.requires = op.requires\n        }\n        if (op.info != null) {\n          e.info = op.info\n        }\n        return e\n      },\n      requiredOps: function () {\n        /*\n        var ids = []\n        if (op.start != null) {\n          ids.push(op.start)\n        }\n        if (op.end != null){\n          ids.push(op.end)\n        }\n        return ids\n        */\n        return []\n      },\n      execute: function * (op) {\n        op.start = null\n        op.end = null\n      },\n      ref: function * (op, pos) {\n        if (op.start == null) {\n          return null\n        }\n        var res = null\n        var o = yield* this.getOperation(op.start)\n\n        while (true) {\n          if (!o.deleted) {\n            res = o\n            pos--\n          }\n          if (pos >= 0 && o.right != null) {\n            o = yield* this.getOperation(o.right)\n          } else {\n            break\n          }\n        }\n        return res\n      },\n      map: function * (o, f) {\n        o = o.start\n        var res = []\n        while (o != null) { // TODO: change to != (at least some convention)\n          var operation = yield* this.getOperation(o)\n          if (!operation.deleted) {\n            res.push(f(operation))\n          }\n          o = operation.right\n        }\n        return res\n      }\n    },\n    Map: {\n      /*\n        {\n          map: {},\n          struct: \"Map\",\n          type: \"\",\n          id: this.os.getNextOpId(1)\n        }\n      */\n      create: function (id) {\n        return {\n          id: id,\n          map: {},\n          struct: 'Map'\n        }\n      },\n      encode: function (op) {\n        var e = {\n          struct: 'Map',\n          type: op.type,\n          id: op.id,\n          map: {} // overwrite map!!\n        }\n        if (op.requires != null) {\n          e.requires = op.requires\n        }\n        if (op.info != null) {\n          e.info = op.info\n        }\n        return e\n      },\n      requiredOps: function () {\n        return []\n      },\n      execute: function * () {},\n      /*\n        Get a property by name\n      */\n      get: function * (op, name) {\n        var oid = op.map[name]\n        if (oid != null) {\n          var res = yield* this.getOperation(oid)\n          if (res == null || res.deleted) {\n            return void 0\n          } else if (res.opContent == null) {\n            return res.content[0]\n          } else {\n            return yield* this.getType(res.opContent)\n          }\n        }\n      }\n    }\n  }\n  Y.Struct = Struct\n}\n\n\n//# sourceURL=webpack:///./node_modules/yjs/src/Struct.js?");

/***/ }),

/***/ "./node_modules/yjs/src/Transaction.js":
/*!*********************************************!*\
  !*** ./node_modules/yjs/src/Transaction.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* @flow */\n\n\n/*\n  Partial definition of a transaction\n\n  A transaction provides all the the async functionality on a database.\n\n  By convention, a transaction has the following properties:\n  * ss for StateSet\n  * os for OperationStore\n  * ds for DeleteStore\n\n  A transaction must also define the following methods:\n  * checkDeleteStoreForState(state)\n    - When increasing the state of a user, an operation with an higher id\n      may already be garbage collected, and therefore it will never be received.\n      update the state to reflect this knowledge. This won't call a method to save the state!\n  * getDeleteSet(id)\n    - Get the delete set in a readable format:\n      {\n        \"userX\": [\n          [5,1], // starting from position 5, one operations is deleted\n          [9,4]  // starting from position 9, four operations are deleted\n        ],\n        \"userY\": ...\n      }\n  * getOpsFromDeleteSet(ds) -- TODO: just call this.deleteOperation(id) here\n    - get a set of deletions that need to be applied in order to get to\n      achieve the state of the supplied ds\n  * setOperation(op)\n    - write `op` to the database.\n      Note: this is allowed to return an in-memory object.\n      E.g. the Memory adapter returns the object that it has in-memory.\n      Changing values on this object will be stored directly in the database\n      without calling this function. Therefore,\n      setOperation may have no functionality in some adapters. This also has\n      implications on the way we use operations that were served from the database.\n      We try not to call copyObject, if not necessary.\n  * addOperation(op)\n    - add an operation to the database.\n      This may only be called once for every op.id\n      Must return a function that returns the next operation in the database (ordered by id)\n  * getOperation(id)\n  * removeOperation(id)\n    - remove an operation from the database. This is called when an operation\n      is garbage collected.\n  * setState(state)\n    - `state` is of the form\n      {\n        user: \"1\",\n        clock: 4\n      } <- meaning that we have four operations from user \"1\"\n           (with these id's respectively: 0, 1, 2, and 3)\n  * getState(user)\n  * getStateVector()\n    - Get the state of the OS in the form\n    [{\n      user: \"userX\",\n      clock: 11\n    },\n     ..\n    ]\n  * getStateSet()\n    - Get the state of the OS in the form\n    {\n      \"userX\": 11,\n      \"userY\": 22\n    }\n   * getOperations(startSS)\n     - Get the all the operations that are necessary in order to achive the\n       stateSet of this user, starting from a stateSet supplied by another user\n   * makeOperationReady(ss, op)\n     - this is called only by `getOperations(startSS)`. It makes an operation\n       applyable on a given SS.\n*/\nmodule.exports = function (Y/* :any */) {\n  class TransactionInterface {\n    /* ::\n    store: Y.AbstractDatabase;\n    ds: Store;\n    os: Store;\n    ss: Store;\n    */\n    /*\n      Apply operations that this user created (no remote ones!)\n        * does not check for Struct.*.requiredOps()\n        * also broadcasts it through the connector\n    */\n    * applyCreatedOperations (ops) {\n      var send = []\n      for (var i = 0; i < ops.length; i++) {\n        var op = ops[i]\n        yield* this.store.tryExecute.call(this, op)\n        if (op.id == null || typeof op.id[1] !== 'string') {\n          send.push(Y.Struct[op.struct].encode(op))\n        }\n      }\n      if (send.length > 0) { // TODO: && !this.store.forwardAppliedOperations (but then i don't send delete ops)\n        // is connected, and this is not going to be send in addOperation\n        this.store.y.connector.broadcastOps(send)\n      }\n    }\n\n    * deleteList (start) {\n      while (start != null) {\n        start = yield* this.getOperation(start)\n        if (!start.gc) {\n          start.gc = true\n          start.deleted = true\n          yield* this.setOperation(start)\n          var delLength = start.content != null ? start.content.length : 1\n          yield* this.markDeleted(start.id, delLength)\n          if (start.opContent != null) {\n            yield* this.deleteOperation(start.opContent)\n          }\n          this.store.queueGarbageCollector(start.id)\n        }\n        start = start.right\n      }\n    }\n\n    /*\n      Mark an operation as deleted, and add it to the GC, if possible.\n    */\n    * deleteOperation (targetId, length, preventCallType) /* :Generator<any, any, any> */ {\n      if (length == null) {\n        length = 1\n      }\n      yield* this.markDeleted(targetId, length)\n      while (length > 0) {\n        var callType = false\n        var target = yield* this.os.findWithUpperBound([targetId[0], targetId[1] + length - 1])\n        var targetLength = target != null && target.content != null ? target.content.length : 1\n        if (target == null || target.id[0] !== targetId[0] || target.id[1] + targetLength <= targetId[1]) {\n          // does not exist or is not in the range of the deletion\n          target = null\n          length = 0\n        } else {\n          // does exist, check if it is too long\n          if (!target.deleted) {\n            if (target.id[1] < targetId[1]) {\n              // starts to the left of the deletion range\n              target = yield* this.getInsertionCleanStart(targetId)\n              targetLength = target.content.length // must have content property!\n            }\n            if (target.id[1] + targetLength > targetId[1] + length) {\n              // ends to the right of the deletion range\n              target = yield* this.getInsertionCleanEnd([targetId[0], targetId[1] + length - 1])\n              targetLength = target.content.length\n            }\n          }\n          length = target.id[1] - targetId[1]\n        }\n\n        if (target != null) {\n          if (!target.deleted) {\n            callType = true\n            // set deleted & notify type\n            target.deleted = true\n            // delete containing lists\n            if (target.start != null) {\n              // TODO: don't do it like this .. -.-\n              yield* this.deleteList(target.start)\n              // yield* this.deleteList(target.id) -- do not gc itself because this may still get referenced\n            }\n            if (target.map != null) {\n              for (var name in target.map) {\n                yield* this.deleteList(target.map[name])\n              }\n              // TODO: here to..  (see above)\n              // yield* this.deleteList(target.id) -- see above\n            }\n            if (target.opContent != null) {\n              yield* this.deleteOperation(target.opContent)\n              // target.opContent = null\n            }\n            if (target.requires != null) {\n              for (var i = 0; i < target.requires.length; i++) {\n                yield* this.deleteOperation(target.requires[i])\n              }\n            }\n          }\n          var left\n          if (target.left != null) {\n            left = yield* this.getInsertion(target.left)\n          } else {\n            left = null\n          }\n\n          // set here because it was deleted and/or gc'd\n          yield* this.setOperation(target)\n\n          /*\n            Check if it is possible to add right to the gc.\n            Because this delete can't be responsible for left being gc'd,\n            we don't have to add left to the gc..\n          */\n          var right\n          if (target.right != null) {\n            right = yield* this.getOperation(target.right)\n          } else {\n            right = null\n          }\n          if (callType && !preventCallType) {\n            yield* this.store.operationAdded(this, {\n              struct: 'Delete',\n              target: target.id,\n              length: targetLength,\n              targetParent: target.parent\n            })\n          }\n          // need to gc in the end!\n          yield* this.store.addToGarbageCollector.call(this, target, left)\n          if (right != null) {\n            yield* this.store.addToGarbageCollector.call(this, right, target)\n          }\n        }\n      }\n    }\n    /*\n      Mark an operation as deleted&gc'd\n    */\n    * markGarbageCollected (id, len) {\n      // this.mem.push([\"gc\", id]);\n      this.store.addToDebug('yield* this.markGarbageCollected(', id, ', ', len, ')')\n      var n = yield* this.markDeleted(id, len)\n      if (n.id[1] < id[1] && !n.gc) {\n        // un-extend left\n        var newlen = n.len - (id[1] - n.id[1])\n        n.len -= newlen\n        yield* this.ds.put(n)\n        n = {id: id, len: newlen, gc: false}\n        yield* this.ds.put(n)\n      }\n      // get prev&next before adding a new operation\n      var prev = yield* this.ds.findPrev(id)\n      var next = yield* this.ds.findNext(id)\n\n      if (id[1] + len < n.id[1] + n.len && !n.gc) {\n        // un-extend right\n        yield* this.ds.put({id: [id[0], id[1] + len], len: n.len - len, gc: false})\n        n.len = len\n      }\n      // set gc'd\n      n.gc = true\n      // can extend left?\n      if (\n        prev != null &&\n        prev.gc &&\n        Y.utils.compareIds([prev.id[0], prev.id[1] + prev.len], n.id)\n      ) {\n        prev.len += n.len\n        yield* this.ds.delete(n.id)\n        n = prev\n        // ds.put n here?\n      }\n      // can extend right?\n      if (\n        next != null &&\n        next.gc &&\n        Y.utils.compareIds([n.id[0], n.id[1] + n.len], next.id)\n      ) {\n        n.len += next.len\n        yield* this.ds.delete(next.id)\n      }\n      yield* this.ds.put(n)\n      yield* this.updateState(n.id[0])\n    }\n    /*\n      Mark an operation as deleted.\n\n      returns the delete node\n    */\n    * markDeleted (id, length) {\n      if (length == null) {\n        length = 1\n      }\n      // this.mem.push([\"del\", id]);\n      var n = yield* this.ds.findWithUpperBound(id)\n      if (n != null && n.id[0] === id[0]) {\n        if (n.id[1] <= id[1] && id[1] <= n.id[1] + n.len) {\n          // id is in n's range\n          var diff = id[1] + length - (n.id[1] + n.len) // overlapping right\n          if (diff > 0) {\n            // id+length overlaps n\n            if (!n.gc) {\n              n.len += diff\n            } else {\n              diff = n.id[1] + n.len - id[1] // overlapping left (id till n.end)\n              if (diff < length) {\n                // a partial deletion\n                n = {id: [id[0], id[1] + diff], len: length - diff, gc: false}\n                yield* this.ds.put(n)\n              } else {\n                // already gc'd\n                throw new Error('Cannot happen! (it dit though.. :()')\n                // return n\n              }\n            }\n          } else {\n            // no overlapping, already deleted\n            return n\n          }\n        } else {\n          // cannot extend left (there is no left!)\n          n = {id: id, len: length, gc: false}\n          yield* this.ds.put(n) // TODO: you double-put !!\n        }\n      } else {\n        // cannot extend left\n        n = {id: id, len: length, gc: false}\n        yield* this.ds.put(n)\n      }\n      // can extend right?\n      var next = yield* this.ds.findNext(n.id)\n      if (\n        next != null &&\n        n.id[0] === next.id[0] &&\n        n.id[1] + n.len >= next.id[1]\n      ) {\n        diff = n.id[1] + n.len - next.id[1] // from next.start to n.end\n        while (diff >= 0) {\n          // n overlaps with next\n          if (next.gc) {\n            // gc is stronger, so reduce length of n\n            n.len -= diff\n            if (diff >= next.len) {\n              // delete the missing range after next\n              diff = diff - next.len // missing range after next\n              if (diff > 0) {\n                yield* this.ds.put(n) // unneccessary? TODO!\n                yield* this.markDeleted([next.id[0], next.id[1] + next.len], diff)\n              }\n            }\n            break\n          } else {\n            // we can extend n with next\n            if (diff > next.len) {\n              // n is even longer than next\n              // get next.next, and try to extend it\n              var _next = yield* this.ds.findNext(next.id)\n              yield* this.ds.delete(next.id)\n              if (_next == null || n.id[0] !== _next.id[0]) {\n                break\n              } else {\n                next = _next\n                diff = n.id[1] + n.len - next.id[1] // from next.start to n.end\n                // continue!\n              }\n            } else {\n              // n just partially overlaps with next. extend n, delete next, and break this loop\n              n.len += next.len - diff\n              yield* this.ds.delete(next.id)\n              break\n            }\n          }\n        }\n      }\n      yield* this.ds.put(n)\n      return n\n    }\n    /*\n      Call this method when the client is connected&synced with the\n      other clients (e.g. master). This will query the database for\n      operations that can be gc'd and add them to the garbage collector.\n    */\n    * garbageCollectAfterSync () {\n      if (this.store.gc1.length > 0 || this.store.gc2.length > 0) {\n        console.warn('gc should be empty after sync')\n      }\n      if (!this.store.gc) {\n        return\n      }\n      yield* this.os.iterate(this, null, null, function * (op) {\n        if (op.gc) {\n          delete op.gc\n          yield* this.setOperation(op)\n        }\n        if (op.parent != null) {\n          var parentDeleted = yield* this.isDeleted(op.parent)\n          if (parentDeleted) {\n            op.gc = true\n            if (!op.deleted) {\n              yield* this.markDeleted(op.id, op.content != null ? op.content.length : 1)\n              op.deleted = true\n              if (op.opContent != null) {\n                yield* this.deleteOperation(op.opContent)\n              }\n              if (op.requires != null) {\n                for (var i = 0; i < op.requires.length; i++) {\n                  yield* this.deleteOperation(op.requires[i])\n                }\n              }\n            }\n            yield* this.setOperation(op)\n            this.store.gc1.push(op.id) // this is ok becaues its shortly before sync (otherwise use queueGarbageCollector!)\n            return\n          }\n        }\n        if (op.deleted) {\n          var left = null\n          if (op.left != null) {\n            left = yield* this.getInsertion(op.left)\n          }\n          yield* this.store.addToGarbageCollector.call(this, op, left)\n        }\n      })\n    }\n    /*\n      Really remove an op and all its effects.\n      The complicated case here is the Insert operation:\n      * reset left\n      * reset right\n      * reset parent.start\n      * reset parent.end\n      * reset origins of all right ops\n    */\n    * garbageCollectOperation (id) {\n      this.store.addToDebug('yield* this.garbageCollectOperation(', id, ')')\n      var o = yield* this.getOperation(id)\n      yield* this.markGarbageCollected(id, (o != null && o.content != null) ? o.content.length : 1) // always mark gc'd\n      // if op exists, then clean that mess up..\n      if (o != null) {\n        var deps = []\n        if (o.opContent != null) {\n          deps.push(o.opContent)\n        }\n        if (o.requires != null) {\n          deps = deps.concat(o.requires)\n        }\n        for (var i = 0; i < deps.length; i++) {\n          var dep = yield* this.getOperation(deps[i])\n          if (dep != null) {\n            if (!dep.deleted) {\n              yield* this.deleteOperation(dep.id)\n              dep = yield* this.getOperation(dep.id)\n            }\n            dep.gc = true\n            yield* this.setOperation(dep)\n            this.store.queueGarbageCollector(dep.id)\n          } else {\n            yield* this.markGarbageCollected(deps[i], 1)\n          }\n        }\n\n        // remove gc'd op from the left op, if it exists\n        if (o.left != null) {\n          var left = yield* this.getInsertion(o.left)\n          left.right = o.right\n          yield* this.setOperation(left)\n        }\n        // remove gc'd op from the right op, if it exists\n        // also reset origins of right ops\n        if (o.right != null) {\n          var right = yield* this.getOperation(o.right)\n          right.left = o.left\n          yield* this.setOperation(right)\n\n          if (o.originOf != null && o.originOf.length > 0) {\n            // find new origin of right ops\n            // origin is the first left deleted operation\n            var neworigin = o.left\n            var neworigin_ = null\n            while (neworigin != null) {\n              neworigin_ = yield* this.getInsertion(neworigin)\n              if (neworigin_.deleted) {\n                break\n              }\n              neworigin = neworigin_.left\n            }\n\n            // reset origin of all right ops (except first right - duh!),\n\n            /* ** The following code does not rely on the the originOf property **\n                  I recently added originOf to all Insert Operations (see Struct.Insert.execute),\n                  which saves which operations originate in a Insert operation.\n                  Garbage collecting without originOf is more memory efficient, but is nearly impossible for large texts, or lists!\n                  But I keep this code for now\n            ```\n            // reset origin of right\n            right.origin = neworigin\n            // search until you find origin pointer to the left of o\n            if (right.right != null) {\n              var i = yield* this.getOperation(right.right)\n              var ids = [o.id, o.right]\n              while (ids.some(function (id) {\n                return Y.utils.compareIds(id, i.origin)\n              })) {\n                if (Y.utils.compareIds(i.origin, o.id)) {\n                  // reset origin of i\n                  i.origin = neworigin\n                  yield* this.setOperation(i)\n                }\n                // get next i\n                if (i.right == null) {\n                  break\n                } else {\n                  ids.push(i.id)\n                  i = yield* this.getOperation(i.right)\n                }\n              }\n            }\n            ```\n            */\n            // ** Now the new implementation starts **\n            // reset neworigin of all originOf[*]\n            for (var _i in o.originOf) {\n              var originsIn = yield* this.getOperation(o.originOf[_i])\n              if (originsIn != null) {\n                originsIn.origin = neworigin\n                yield* this.setOperation(originsIn)\n              }\n            }\n            if (neworigin != null) {\n              if (neworigin_.originOf == null) {\n                neworigin_.originOf = o.originOf\n              } else {\n                neworigin_.originOf = o.originOf.concat(neworigin_.originOf)\n              }\n              yield* this.setOperation(neworigin_)\n            }\n            // we don't need to set right here, because\n            // right should be in o.originOf => it is set it the previous for loop\n          }\n        }\n        // o may originate in another operation.\n        // Since o is deleted, we have to reset o.origin's `originOf` property\n        if (o.origin != null) {\n          var origin = yield* this.getInsertion(o.origin)\n          origin.originOf = origin.originOf.filter(function (_id) {\n            return !Y.utils.compareIds(id, _id)\n          })\n          yield* this.setOperation(origin)\n        }\n        var parent\n        if (o.parent != null) {\n          parent = yield* this.getOperation(o.parent)\n        }\n        // remove gc'd op from parent, if it exists\n        if (parent != null) {\n          var setParent = false // whether to save parent to the os\n          if (o.parentSub != null) {\n            if (Y.utils.compareIds(parent.map[o.parentSub], o.id)) {\n              setParent = true\n              if (o.right != null) {\n                parent.map[o.parentSub] = o.right\n              } else {\n                delete parent.map[o.parentSub]\n              }\n            }\n          } else {\n            if (Y.utils.compareIds(parent.start, o.id)) {\n              // gc'd op is the start\n              setParent = true\n              parent.start = o.right\n            }\n            if (Y.utils.matchesId(o, parent.end)) {\n              // gc'd op is the end\n              setParent = true\n              parent.end = o.left\n            }\n          }\n          if (setParent) {\n            yield* this.setOperation(parent)\n          }\n        }\n        // finally remove it from the os\n        yield* this.removeOperation(o.id)\n      }\n    }\n    * checkDeleteStoreForState (state) {\n      var n = yield* this.ds.findWithUpperBound([state.user, state.clock])\n      if (n != null && n.id[0] === state.user && n.gc) {\n        state.clock = Math.max(state.clock, n.id[1] + n.len)\n      }\n    }\n    * updateState (user) {\n      var state = yield* this.getState(user)\n      yield* this.checkDeleteStoreForState(state)\n      var o = yield* this.getInsertion([user, state.clock])\n      var oLength = (o != null && o.content != null) ? o.content.length : 1\n      while (o != null && user === o.id[0] && o.id[1] <= state.clock && o.id[1] + oLength > state.clock) {\n        // either its a new operation (1. case), or it is an operation that was deleted, but is not yet in the OS\n        state.clock += oLength\n        yield* this.checkDeleteStoreForState(state)\n        o = yield* this.os.findNext(o.id)\n        oLength = (o != null && o.content != null) ? o.content.length : 1\n      }\n      yield* this.setState(state)\n    }\n    /*\n      apply a delete set in order to get\n      the state of the supplied ds\n    */\n    * applyDeleteSet (ds) {\n      var deletions = []\n\n      for (var user in ds) {\n        var dv = ds[user]\n        var pos = 0\n        var d = dv[pos]\n        yield* this.ds.iterate(this, [user, 0], [user, Number.MAX_VALUE], function * (n) {\n          // cases:\n          // 1. d deletes something to the right of n\n          //  => go to next n (break)\n          // 2. d deletes something to the left of n\n          //  => create deletions\n          //  => reset d accordingly\n          //  *)=> if d doesn't delete anything anymore, go to next d (continue)\n          // 3. not 2) and d deletes something that also n deletes\n          //  => reset d so that it doesn't contain n's deletion\n          //  *)=> if d does not delete anything anymore, go to next d (continue)\n          while (d != null) {\n            var diff = 0 // describe the diff of length in 1) and 2)\n            if (n.id[1] + n.len <= d[0]) {\n              // 1)\n              break\n            } else if (d[0] < n.id[1]) {\n              // 2)\n              // delete maximum the len of d\n              // else delete as much as possible\n              diff = Math.min(n.id[1] - d[0], d[1])\n              deletions.push([user, d[0], diff, d[2]])\n            } else {\n              // 3)\n              diff = n.id[1] + n.len - d[0] // never null (see 1)\n              if (d[2] && !n.gc) {\n                // d marks as gc'd but n does not\n                // then delete either way\n                deletions.push([user, d[0], Math.min(diff, d[1]), d[2]])\n              }\n            }\n            if (d[1] <= diff) {\n              // d doesn't delete anything anymore\n              d = dv[++pos]\n            } else {\n              d[0] = d[0] + diff // reset pos\n              d[1] = d[1] - diff // reset length\n            }\n          }\n        })\n        // for the rest.. just apply it\n        for (; pos < dv.length; pos++) {\n          d = dv[pos]\n          deletions.push([user, d[0], d[1], d[2]])\n        }\n      }\n      for (var i = 0; i < deletions.length; i++) {\n        var del = deletions[i]\n        // always try to delete..\n        yield* this.deleteOperation([del[0], del[1]], del[2])\n        if (del[3]) {\n          // gc..\n          yield* this.markGarbageCollected([del[0], del[1]], del[2]) // always mark gc'd\n          // remove operation..\n          var counter = del[1] + del[2]\n          while (counter >= del[1]) {\n            var o = yield* this.os.findWithUpperBound([del[0], counter - 1])\n            if (o == null) {\n              break\n            }\n            var oLen = o.content != null ? o.content.length : 1\n            if (o.id[0] !== del[0] || o.id[1] + oLen <= del[1]) {\n              // not in range\n              break\n            }\n            if (o.id[1] + oLen > del[1] + del[2]) {\n              // overlaps right\n              o = yield* this.getInsertionCleanEnd([del[0], del[1] + del[2] - 1])\n            }\n            if (o.id[1] < del[1]) {\n              // overlaps left\n              o = yield* this.getInsertionCleanStart([del[0], del[1]])\n            }\n            counter = o.id[1]\n            yield* this.garbageCollectOperation(o.id)\n          }\n        }\n        if (this.store.forwardAppliedOperations) {\n          var ops = []\n          ops.push({struct: 'Delete', target: [del[0], del[1]], length: del[2]})\n          this.store.y.connector.broadcastOps(ops)\n        }\n      }\n    }\n    * isGarbageCollected (id) {\n      var n = yield* this.ds.findWithUpperBound(id)\n      return n != null && n.id[0] === id[0] && id[1] < n.id[1] + n.len && n.gc\n    }\n    /*\n      A DeleteSet (ds) describes all the deleted ops in the OS\n    */\n    * getDeleteSet () {\n      var ds = {}\n      yield* this.ds.iterate(this, null, null, function * (n) {\n        var user = n.id[0]\n        var counter = n.id[1]\n        var len = n.len\n        var gc = n.gc\n        var dv = ds[user]\n        if (dv === void 0) {\n          dv = []\n          ds[user] = dv\n        }\n        dv.push([counter, len, gc])\n      })\n      return ds\n    }\n    * isDeleted (id) {\n      var n = yield* this.ds.findWithUpperBound(id)\n      return n != null && n.id[0] === id[0] && id[1] < n.id[1] + n.len\n    }\n    * setOperation (op) {\n      yield* this.os.put(op)\n      return op\n    }\n    * addOperation (op) {\n      yield* this.os.put(op)\n      if (this.store.forwardAppliedOperations && typeof op.id[1] !== 'string') {\n        // is connected, and this is not going to be send in addOperation\n        this.store.y.connector.broadcastOps([op])\n      }\n    }\n    // if insertion, try to combine with left insertion (if both have content property)\n    * tryCombineWithLeft (op) {\n      if (\n        op != null &&\n        op.left != null &&\n        op.content != null &&\n        op.left[0] === op.id[0] &&\n        Y.utils.compareIds(op.left, op.origin)\n      ) {\n        var left = yield* this.getInsertion(op.left)\n        if (left.content != null &&\n            left.id[1] + left.content.length === op.id[1] &&\n            left.originOf.length === 1 &&\n            !left.gc && !left.deleted &&\n            !op.gc && !op.deleted\n        ) {\n          // combine!\n          if (op.originOf != null) {\n            left.originOf = op.originOf\n          } else {\n            delete left.originOf\n          }\n          left.content = left.content.concat(op.content)\n          left.right = op.right\n          yield* this.os.delete(op.id)\n          yield* this.setOperation(left)\n        }\n      }\n    }\n    * getInsertion (id) {\n      var ins = yield* this.os.findWithUpperBound(id)\n      if (ins == null) {\n        return null\n      } else {\n        var len = ins.content != null ? ins.content.length : 1 // in case of opContent\n        if (id[0] === ins.id[0] && id[1] < ins.id[1] + len) {\n          return ins\n        } else {\n          return null\n        }\n      }\n    }\n    * getInsertionCleanStartEnd (id) {\n      yield* this.getInsertionCleanStart(id)\n      return yield* this.getInsertionCleanEnd(id)\n    }\n    // Return an insertion such that id is the first element of content\n    // This function manipulates an operation, if necessary\n    * getInsertionCleanStart (id) {\n      var ins = yield* this.getInsertion(id)\n      if (ins != null) {\n        if (ins.id[1] === id[1]) {\n          return ins\n        } else {\n          var left = Y.utils.copyObject(ins)\n          ins.content = left.content.splice(id[1] - ins.id[1])\n          ins.id = id\n          var leftLid = Y.utils.getLastId(left)\n          ins.origin = leftLid\n          left.originOf = [ins.id]\n          left.right = ins.id\n          ins.left = leftLid\n          // debugger // check\n          yield* this.setOperation(left)\n          yield* this.setOperation(ins)\n          if (left.gc) {\n            this.store.queueGarbageCollector(ins.id)\n          }\n          return ins\n        }\n      } else {\n        return null\n      }\n    }\n    // Return an insertion such that id is the last element of content\n    // This function manipulates an operation, if necessary\n    * getInsertionCleanEnd (id) {\n      var ins = yield* this.getInsertion(id)\n      if (ins != null) {\n        if (ins.content == null || (ins.id[1] + ins.content.length - 1 === id[1])) {\n          return ins\n        } else {\n          var right = Y.utils.copyObject(ins)\n          right.content = ins.content.splice(id[1] - ins.id[1] + 1) // cut off remainder\n          right.id = [id[0], id[1] + 1]\n          var insLid = Y.utils.getLastId(ins)\n          right.origin = insLid\n          ins.originOf = [right.id]\n          ins.right = right.id\n          right.left = insLid\n          // debugger // check\n          yield* this.setOperation(right)\n          yield* this.setOperation(ins)\n          if (ins.gc) {\n            this.store.queueGarbageCollector(right.id)\n          }\n          return ins\n        }\n      } else {\n        return null\n      }\n    }\n    * getOperation (id/* :any */)/* :Transaction<any> */ {\n      var o = yield* this.os.find(id)\n      if (id[0] !== '_' || o != null) {\n        return o\n      } else { // type is string\n        // generate this operation?\n        var comp = id[1].split('_')\n        if (comp.length > 1) {\n          var struct = comp[0]\n          var op = Y.Struct[struct].create(id)\n          op.type = comp[1]\n          yield* this.setOperation(op)\n          return op\n        } else {\n          // won't be called. but just in case..\n          console.error('Unexpected case. How can this happen?')\n          debugger // eslint-disable-line\n          return null\n        }\n      }\n    }\n    * removeOperation (id) {\n      yield* this.os.delete(id)\n    }\n    * setState (state) {\n      var val = {\n        id: [state.user],\n        clock: state.clock\n      }\n      yield* this.ss.put(val)\n    }\n    * getState (user) {\n      var n = yield* this.ss.find([user])\n      var clock = n == null ? null : n.clock\n      if (clock == null) {\n        clock = 0\n      }\n      return {\n        user: user,\n        clock: clock\n      }\n    }\n    * getStateVector () {\n      var stateVector = []\n      yield* this.ss.iterate(this, null, null, function * (n) {\n        stateVector.push({\n          user: n.id[0],\n          clock: n.clock\n        })\n      })\n      return stateVector\n    }\n    * getStateSet () {\n      var ss = {}\n      yield* this.ss.iterate(this, null, null, function * (n) {\n        ss[n.id[0]] = n.clock\n      })\n      return ss\n    }\n    /*\n      Here, we make all missing operations executable for the receiving user.\n\n      Notes:\n        startSS: denotes to the SV that the remote user sent\n        currSS:  denotes to the state vector that the user should have if he\n                 applies all already sent operations (increases is each step)\n\n      We face several problems:\n      * Execute op as is won't work because ops depend on each other\n       -> find a way so that they do not anymore\n      * When changing left, must not go more to the left than the origin\n      * When changing right, you have to consider that other ops may have op\n        as their origin, this means that you must not set one of these ops\n        as the new right (interdependencies of ops)\n      * can't just go to the right until you find the first known operation,\n        With currSS\n          -> interdependency of ops is a problem\n        With startSS\n          -> leads to inconsistencies when two users join at the same time.\n             Then the position depends on the order of execution -> error!\n\n        Solution:\n        -> re-create originial situation\n          -> set op.left = op.origin (which never changes)\n          -> set op.right\n               to the first operation that is known (according to startSS)\n               or to the first operation that has an origin that is not to the\n               right of op.\n          -> Enforces unique execution order -> happy user\n\n        Improvements: TODO\n          * Could set left to origin, or the first known operation\n            (startSS or currSS.. ?)\n            -> Could be necessary when I turn GC again.\n            -> Is a bad(ish) idea because it requires more computation\n\n      What we do:\n      * Iterate over all missing operations.\n      * When there is an operation, where the right op is known, send this op all missing ops to the left to the user\n      * I explained above what we have to do with each operation. Here is how we do it efficiently:\n        1. Go to the left until you find either op.origin, or a known operation (let o denote current operation in the iteration)\n        2. Found a known operation -> set op.left = o, and send it to the user. stop\n        3. Found o = op.origin -> set op.left = op.origin, and send it to the user. start again from 1. (set op = o)\n        4. Found some o -> set o.right = op, o.left = o.origin, send it to the user, continue\n    */\n    * getOperations (startSS) {\n      // TODO: use bounds here!\n      if (startSS == null) {\n        startSS = {}\n      }\n      var send = []\n\n      var endSV = yield* this.getStateVector()\n      for (var endState of endSV) {\n        var user = endState.user\n        if (user === '_') {\n          continue\n        }\n        var startPos = startSS[user] || 0\n        if (startPos > 0) {\n          // There is a change that [user, startPos] is in a composed Insertion (with a smaller counter)\n          // find out if that is the case\n          var firstMissing = yield* this.getInsertion([user, startPos])\n          if (firstMissing != null) {\n            // update startPos\n            startPos = firstMissing.id[1]\n            startSS[user] = startPos\n          }\n        }\n        yield* this.os.iterate(this, [user, startPos], [user, Number.MAX_VALUE], function * (op) {\n          op = Y.Struct[op.struct].encode(op)\n          if (op.struct !== 'Insert') {\n            send.push(op)\n          } else if (op.right == null || op.right[1] < (startSS[op.right[0]] || 0)) {\n            // case 1. op.right is known\n            var o = op\n            // Remember: ?\n            // -> set op.right\n            //    1. to the first operation that is known (according to startSS)\n            //    2. or to the first operation that has an origin that is not to the\n            //      right of op.\n            // For this we maintain a list of ops which origins are not found yet.\n            var missing_origins = [op]\n            var newright = op.right\n            while (true) {\n              if (o.left == null) {\n                op.left = null\n                send.push(op)\n                if (!Y.utils.compareIds(o.id, op.id)) {\n                  o = Y.Struct[op.struct].encode(o)\n                  o.right = missing_origins[missing_origins.length - 1].id\n                  send.push(o)\n                }\n                break\n              }\n              o = yield* this.getInsertion(o.left)\n              // we set another o, check if we can reduce $missing_origins\n              while (missing_origins.length > 0 && Y.utils.matchesId(o, missing_origins[missing_origins.length - 1].origin)) {\n                missing_origins.pop()\n              }\n              if (o.id[1] < (startSS[o.id[0]] || 0)) {\n                // case 2. o is known\n                op.left = Y.utils.getLastId(o)\n                send.push(op)\n                break\n              } else if (Y.utils.matchesId(o, op.origin)) {\n                // case 3. o is op.origin\n                op.left = op.origin\n                send.push(op)\n                op = Y.Struct[op.struct].encode(o)\n                op.right = newright\n                if (missing_origins.length > 0) {\n                  console.log('This should not happen .. :( please report this')\n                }\n                missing_origins = [op]\n              } else {\n                // case 4. send o, continue to find op.origin\n                var s = Y.Struct[op.struct].encode(o)\n                s.right = missing_origins[missing_origins.length - 1].id\n                s.left = s.origin\n                send.push(s)\n                missing_origins.push(o)\n              }\n            }\n          }\n        })\n      }\n      return send.reverse()\n    }\n    /*\n     * Get the plain untransformed operations from the database.\n     * You can apply these operations using .applyOperationsUntransformed(ops)\n     *\n     */\n    * getOperationsUntransformed () {\n      var ops = []\n      yield* this.os.iterate(this, null, null, function * (op) {\n        if (op.id[0] !== '_') {\n          ops.push(op)\n        }\n      })\n      return {\n        untransformed: ops\n      }\n    }\n    * applyOperationsUntransformed (m, stateSet) {\n      var ops = m.untransformed\n      for (var i = 0; i < ops.length; i++) {\n        var op = ops[i]\n        // create, and modify parent, if it is created implicitly\n        if (op.parent != null && op.parent[0] === '_') {\n          if (op.struct === 'Insert') {\n            // update parents .map/start/end properties\n            if (op.parentSub != null && op.left == null) {\n              // op is child of Map\n              let parent = yield* this.getOperation(op.parent)\n              parent.map[op.parentSub] = op.id\n              yield* this.setOperation(parent)\n            } else if (op.right == null || op.left == null) {\n              let parent = yield* this.getOperation(op.parent)\n              if (op.right == null) {\n                parent.end = Y.utils.getLastId(op)\n              }\n              if (op.left == null) {\n                parent.start = op.id\n              }\n              yield* this.setOperation(parent)\n            }\n          }\n        }\n        yield* this.os.put(op)\n      }\n      for (var user in stateSet) {\n        yield* this.ss.put({\n          id: [user],\n          clock: stateSet[user]\n        })\n      }\n    }\n    /* this is what we used before.. use this as a reference..\n    * makeOperationReady (startSS, op) {\n      op = Y.Struct[op.struct].encode(op)\n      op = Y.utils.copyObject(op) -- use copyoperation instead now!\n      var o = op\n      var ids = [op.id]\n      // search for the new op.right\n      // it is either the first known op (according to startSS)\n      // or the o that has no origin to the right of op\n      // (this is why we use the ids array)\n      while (o.right != null) {\n        var right = yield* this.getOperation(o.right)\n        if (o.right[1] < (startSS[o.right[0]] || 0) || !ids.some(function (id) {\n          return Y.utils.compareIds(id, right.origin)\n        })) {\n          break\n        }\n        ids.push(o.right)\n        o = right\n      }\n      op.right = o.right\n      op.left = op.origin\n      return op\n    }\n    */\n    * flush () {\n      yield* this.os.flush()\n      yield* this.ss.flush()\n      yield* this.ds.flush()\n    }\n  }\n  Y.Transaction = TransactionInterface\n}\n\n\n//# sourceURL=webpack:///./node_modules/yjs/src/Transaction.js?");

/***/ }),

/***/ "./node_modules/yjs/src/Utils.js":
/*!***************************************!*\
  !*** ./node_modules/yjs/src/Utils.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* @flow */\n\n\n/*\n  EventHandler is an helper class for constructing custom types.\n\n  Why: When constructing custom types, you sometimes want your types to work\n  synchronous: E.g.\n  ``` Synchronous\n    mytype.setSomething(\"yay\")\n    mytype.getSomething() === \"yay\"\n  ```\n  versus\n  ``` Asynchronous\n    mytype.setSomething(\"yay\")\n    mytype.getSomething() === undefined\n    mytype.waitForSomething().then(function(){\n      mytype.getSomething() === \"yay\"\n    })\n  ```\n\n  The structures usually work asynchronously (you have to wait for the\n  database request to finish). EventHandler helps you to make your type\n  synchronous.\n*/\nmodule.exports = function (Y /* : any*/) {\n  Y.utils = {}\n\n  Y.utils.bubbleEvent = function (type, event) {\n    type.eventHandler.callEventListeners(event)\n    event.path = []\n    while (type != null && type._deepEventHandler != null) {\n      type._deepEventHandler.callEventListeners(event)\n      var parent = null\n      if (type._parent != null) {\n        parent = type.os.getType(type._parent)\n      }\n      if (parent != null && parent._getPathToChild != null) {\n        event.path = [parent._getPathToChild(type._model)].concat(event.path)\n        type = parent\n      } else {\n        type = null\n      }\n    }\n  }\n\n  class EventListenerHandler {\n    constructor () {\n      this.eventListeners = []\n    }\n    destroy () {\n      this.eventListeners = null\n    }\n     /*\n      Basic event listener boilerplate...\n    */\n    addEventListener (f) {\n      this.eventListeners.push(f)\n    }\n    removeEventListener (f) {\n      this.eventListeners = this.eventListeners.filter(function (g) {\n        return f !== g\n      })\n    }\n    removeAllEventListeners () {\n      this.eventListeners = []\n    }\n    callEventListeners (event) {\n      for (var i = 0; i < this.eventListeners.length; i++) {\n        try {\n          var _event = {}\n          for (var name in event) {\n            _event[name] = event[name]\n          }\n          this.eventListeners[i](_event)\n        } catch (e) {\n          console.error('Your observer threw an error. This error was caught so that Yjs still can ensure data consistency! In order to debug this error you have to check \"Pause On Caught Exceptions\"', e)\n        }\n      }\n    }\n  }\n  Y.utils.EventListenerHandler = EventListenerHandler\n\n  class EventHandler extends EventListenerHandler {\n    /* ::\n    waiting: Array<Insertion | Deletion>;\n    awaiting: number;\n    onevent: Function;\n    eventListeners: Array<Function>;\n    */\n    /*\n      onevent: is called when the structure changes.\n\n      Note: \"awaiting opertations\" is used to denote operations that were\n      prematurely called. Events for received operations can not be executed until\n      all prematurely called operations were executed (\"waiting operations\")\n    */\n    constructor (onevent /* : Function */) {\n      super()\n      this.waiting = []\n      this.awaiting = 0\n      this.onevent = onevent\n    }\n    destroy () {\n      super.destroy()\n      this.waiting = null\n      this.onevent = null\n    }\n    /*\n      Call this when a new operation arrives. It will be executed right away if\n      there are no waiting operations, that you prematurely executed\n    */\n    receivedOp (op) {\n      if (this.awaiting <= 0) {\n        this.onevent(op)\n      } else if (op.struct === 'Delete') {\n        var self = this\n        var checkDelete = function checkDelete (d) {\n          if (d.length == null) {\n            throw new Error('This shouldn\\'t happen! d.length must be defined!')\n          }\n          // we check if o deletes something in self.waiting\n          // if so, we remove the deleted operation\n          for (var w = 0; w < self.waiting.length; w++) {\n            var i = self.waiting[w]\n            if (i.struct === 'Insert' && i.id[0] === d.target[0]) {\n              var iLength = i.hasOwnProperty('content') ? i.content.length : 1\n              var dStart = d.target[1]\n              var dEnd = d.target[1] + (d.length || 1)\n              var iStart = i.id[1]\n              var iEnd = i.id[1] + iLength\n              // Check if they don't overlap\n              if (iEnd <= dStart || dEnd <= iStart) {\n                // no overlapping\n                continue\n              }\n              // we check all overlapping cases. All cases:\n              /*\n                1)  iiiii\n                      ddddd\n                    --> modify i and d\n                2)  iiiiiii\n                      ddddd\n                    --> modify i, remove d\n                3)  iiiiiii\n                      ddd\n                    --> remove d, modify i, and create another i (for the right hand side)\n                4)  iiiii\n                    ddddddd\n                    --> remove i, modify d\n                5)  iiiiiii\n                    ddddddd\n                    --> remove both i and d (**)\n                6)  iiiiiii\n                    ddddd\n                    --> modify i, remove d\n                7)    iii\n                    ddddddd\n                    --> remove i, create and apply two d with checkDelete(d) (**)\n                8)    iiiii\n                    ddddddd\n                    --> remove i, modify d (**)\n                9)    iiiii\n                    ddddd\n                    --> modify i and d\n                (**) (also check if i contains content or type)\n              */\n              // TODO: I left some debugger statements, because I want to debug all cases once in production. REMEMBER END TODO\n              if (iStart < dStart) {\n                if (dStart < iEnd) {\n                  if (iEnd < dEnd) {\n                    // Case 1\n                    // remove the right part of i's content\n                    i.content.splice(dStart - iStart)\n                    // remove the start of d's deletion\n                    d.length = dEnd - iEnd\n                    d.target = [d.target[0], iEnd]\n                    continue\n                  } else if (iEnd === dEnd) {\n                    // Case 2\n                    i.content.splice(dStart - iStart)\n                    // remove d, we do that by simply ending this function\n                    return\n                  } else { // (dEnd < iEnd)\n                    // Case 3\n                    var newI = {\n                      id: [i.id[0], dEnd],\n                      content: i.content.slice(dEnd - iStart),\n                      struct: 'Insert'\n                    }\n                    self.waiting.push(newI)\n                    i.content.splice(dStart - iStart)\n                    return\n                  }\n                }\n              } else if (dStart === iStart) {\n                if (iEnd < dEnd) {\n                  // Case 4\n                  d.length = dEnd - iEnd\n                  d.target = [d.target[0], iEnd]\n                  i.content = []\n                  continue\n                } else if (iEnd === dEnd) {\n                  // Case 5\n                  self.waiting.splice(w, 1)\n                  return\n                } else { // (dEnd < iEnd)\n                  // Case 6\n                  i.content = i.content.slice(dEnd - iStart)\n                  i.id = [i.id[0], dEnd]\n                  return\n                }\n              } else { // (dStart < iStart)\n                if (iStart < dEnd) {\n                  // they overlap\n                  /*\n                  7)    iii\n                      ddddddd\n                      --> remove i, create and apply two d with checkDelete(d) (**)\n                  8)    iiiii\n                      ddddddd\n                      --> remove i, modify d (**)\n                  9)    iiiii\n                      ddddd\n                      --> modify i and d\n                  */\n                  if (iEnd < dEnd) {\n                    // Case 7\n                    // debugger // TODO: You did not test this case yet!!!! (add the debugger here)\n                    self.waiting.splice(w, 1)\n                    checkDelete({\n                      target: [d.target[0], dStart],\n                      length: iStart - dStart,\n                      struct: 'Delete'\n                    })\n                    checkDelete({\n                      target: [d.target[0], iEnd],\n                      length: iEnd - dEnd,\n                      struct: 'Delete'\n                    })\n                    return\n                  } else if (iEnd === dEnd) {\n                    // Case 8\n                    self.waiting.splice(w, 1)\n                    w--\n                    d.length -= iLength\n                    continue\n                  } else { // dEnd < iEnd\n                    // Case 9\n                    d.length = iStart - dStart\n                    i.content.splice(0, dEnd - iStart)\n                    i.id = [i.id[0], dEnd]\n                    continue\n                  }\n                }\n              }\n            }\n          }\n          // finished with remaining operations\n          self.waiting.push(d)\n        }\n        if (op.key == null) {\n          // deletes in list\n          checkDelete(op)\n        } else {\n          // deletes in map\n          this.waiting.push(op)\n        }\n      } else {\n        this.waiting.push(op)\n      }\n    }\n    /*\n      You created some operations, and you want the `onevent` function to be\n      called right away. Received operations will not be executed untill all\n      prematurely called operations are executed\n    */\n    awaitAndPrematurelyCall (ops) {\n      this.awaiting++\n      ops.map(Y.utils.copyOperation).forEach(this.onevent)\n    }\n    * awaitOps (transaction, f, args) {\n      function notSoSmartSort (array) {\n        // this function sorts insertions in a executable order\n        var result = []\n        while (array.length > 0) {\n          for (var i = 0; i < array.length; i++) {\n            var independent = true\n            for (var j = 0; j < array.length; j++) {\n              if (Y.utils.matchesId(array[j], array[i].left)) {\n                // array[i] depends on array[j]\n                independent = false\n                break\n              }\n            }\n            if (independent) {\n              result.push(array.splice(i, 1)[0])\n              i--\n            }\n          }\n        }\n        return result\n      }\n      var before = this.waiting.length\n      // somehow create new operations\n      yield* f.apply(transaction, args)\n      // remove all appended ops / awaited ops\n      this.waiting.splice(before)\n      if (this.awaiting > 0) this.awaiting--\n      // if there are no awaited ops anymore, we can update all waiting ops, and send execute them (if there are still no awaited ops)\n      if (this.awaiting === 0 && this.waiting.length > 0) {\n        // update all waiting ops\n        for (let i = 0; i < this.waiting.length; i++) {\n          var o = this.waiting[i]\n          if (o.struct === 'Insert') {\n            var _o = yield* transaction.getInsertion(o.id)\n            if (_o.parentSub != null && _o.left != null) {\n              // if o is an insertion of a map struc (parentSub is defined), then it shouldn't be necessary to compute left\n              this.waiting.splice(i, 1)\n              i-- // update index\n            } else if (!Y.utils.compareIds(_o.id, o.id)) {\n              // o got extended\n              o.left = [o.id[0], o.id[1] - 1]\n            } else if (_o.left == null) {\n              o.left = null\n            } else {\n              // find next undeleted op\n              var left = yield* transaction.getInsertion(_o.left)\n              while (left.deleted != null) {\n                if (left.left != null) {\n                  left = yield* transaction.getInsertion(left.left)\n                } else {\n                  left = null\n                  break\n                }\n              }\n              o.left = left != null ? Y.utils.getLastId(left) : null\n            }\n          }\n        }\n        // the previous stuff was async, so we have to check again!\n        // We also pull changes from the bindings, if there exists such a method, this could increase awaiting too\n        if (this._pullChanges != null) {\n          this._pullChanges()\n        }\n        if (this.awaiting === 0) {\n          // sort by type, execute inserts first\n          var ins = []\n          var dels = []\n          this.waiting.forEach(function (o) {\n            if (o.struct === 'Delete') {\n              dels.push(o)\n            } else {\n              ins.push(o)\n            }\n          })\n          this.waiting = []\n          // put in executable order\n          ins = notSoSmartSort(ins)\n          // this.onevent can trigger the creation of another operation\n          // -> check if this.awaiting increased & stop computation if it does\n          for (var i = 0; i < ins.length; i++) {\n            if (this.awaiting === 0) {\n              this.onevent(ins[i])\n            } else {\n              this.waiting = this.waiting.concat(ins.slice(i))\n              break\n            }\n          }\n          for (i = 0; i < dels.length; i++) {\n            if (this.awaiting === 0) {\n              this.onevent(dels[i])\n            } else {\n              this.waiting = this.waiting.concat(dels.slice(i))\n              break\n            }\n          }\n        }\n      }\n    }\n    // TODO: Remove awaitedInserts and awaitedDeletes in favor of awaitedOps, as they are deprecated and do not always work\n    // Do this in one of the coming releases that are breaking anyway\n    /*\n      Call this when you successfully awaited the execution of n Insert operations\n    */\n    awaitedInserts (n) {\n      var ops = this.waiting.splice(this.waiting.length - n)\n      for (var oid = 0; oid < ops.length; oid++) {\n        var op = ops[oid]\n        if (op.struct === 'Insert') {\n          for (var i = this.waiting.length - 1; i >= 0; i--) {\n            let w = this.waiting[i]\n            // TODO: do I handle split operations correctly here? Super unlikely, but yeah..\n            // Also: can this case happen? Can op be inserted in the middle of a larger op that is in $waiting?\n            if (w.struct === 'Insert') {\n              if (Y.utils.matchesId(w, op.left)) {\n                // include the effect of op in w\n                w.right = op.id\n                // exclude the effect of w in op\n                op.left = w.left\n              } else if (Y.utils.compareIds(w.id, op.right)) {\n                // similar..\n                w.left = Y.utils.getLastId(op)\n                op.right = w.right\n              }\n            }\n          }\n        } else {\n          throw new Error('Expected Insert Operation!')\n        }\n      }\n      this._tryCallEvents(n)\n    }\n    /*\n      Call this when you successfully awaited the execution of n Delete operations\n    */\n    awaitedDeletes (n, newLeft) {\n      var ops = this.waiting.splice(this.waiting.length - n)\n      for (var j = 0; j < ops.length; j++) {\n        var del = ops[j]\n        if (del.struct === 'Delete') {\n          if (newLeft != null) {\n            for (var i = 0; i < this.waiting.length; i++) {\n              let w = this.waiting[i]\n              // We will just care about w.left\n              if (w.struct === 'Insert' && Y.utils.compareIds(del.target, w.left)) {\n                w.left = newLeft\n              }\n            }\n          }\n        } else {\n          throw new Error('Expected Delete Operation!')\n        }\n      }\n      this._tryCallEvents(n)\n    }\n    /* (private)\n      Try to execute the events for the waiting operations\n    */\n    _tryCallEvents () {\n      function notSoSmartSort (array) {\n        var result = []\n        while (array.length > 0) {\n          for (var i = 0; i < array.length; i++) {\n            var independent = true\n            for (var j = 0; j < array.length; j++) {\n              if (Y.utils.matchesId(array[j], array[i].left)) {\n                // array[i] depends on array[j]\n                independent = false\n                break\n              }\n            }\n            if (independent) {\n              result.push(array.splice(i, 1)[0])\n              i--\n            }\n          }\n        }\n        return result\n      }\n      if (this.awaiting > 0) this.awaiting--\n      if (this.awaiting === 0 && this.waiting.length > 0) {\n        var ins = []\n        var dels = []\n        this.waiting.forEach(function (o) {\n          if (o.struct === 'Delete') {\n            dels.push(o)\n          } else {\n            ins.push(o)\n          }\n        })\n        ins = notSoSmartSort(ins)\n        ins.forEach(this.onevent)\n        dels.forEach(this.onevent)\n        this.waiting = []\n      }\n    }\n  }\n  Y.utils.EventHandler = EventHandler\n\n  /*\n    Default class of custom types!\n  */\n  class CustomType {\n    getPath () {\n      var parent = null\n      if (this._parent != null) {\n        parent = this.os.getType(this._parent)\n      }\n      if (parent != null && parent._getPathToChild != null) {\n        var firstKey = parent._getPathToChild(this._model)\n        var parentKeys = parent.getPath()\n        parentKeys.push(firstKey)\n        return parentKeys\n      } else {\n        return []\n      }\n    }\n  }\n  Y.utils.CustomType = CustomType\n\n  /*\n    A wrapper for the definition of a custom type.\n    Every custom type must have three properties:\n\n    * struct\n      - Structname of this type\n    * initType\n      - Given a model, creates a custom type\n    * class\n      - the constructor of the custom type (e.g. in order to inherit from a type)\n  */\n  class CustomTypeDefinition { // eslint-disable-line\n    /* ::\n    struct: any;\n    initType: any;\n    class: Function;\n    name: String;\n    */\n    constructor (def) {\n      if (def.struct == null ||\n        def.initType == null ||\n        def.class == null ||\n        def.name == null ||\n        def.createType == null\n      ) {\n        throw new Error('Custom type was not initialized correctly!')\n      }\n      this.struct = def.struct\n      this.initType = def.initType\n      this.createType = def.createType\n      this.class = def.class\n      this.name = def.name\n      if (def.appendAdditionalInfo != null) {\n        this.appendAdditionalInfo = def.appendAdditionalInfo\n      }\n      this.parseArguments = (def.parseArguments || function () {\n        return [this]\n      }).bind(this)\n      this.parseArguments.typeDefinition = this\n    }\n  }\n  Y.utils.CustomTypeDefinition = CustomTypeDefinition\n\n  Y.utils.isTypeDefinition = function isTypeDefinition (v) {\n    if (v != null) {\n      if (v instanceof Y.utils.CustomTypeDefinition) return [v]\n      else if (v.constructor === Array && v[0] instanceof Y.utils.CustomTypeDefinition) return v\n      else if (v instanceof Function && v.typeDefinition instanceof Y.utils.CustomTypeDefinition) return [v.typeDefinition]\n    }\n    return false\n  }\n\n  /*\n    Make a flat copy of an object\n    (just copy properties)\n  */\n  function copyObject (o) {\n    var c = {}\n    for (var key in o) {\n      c[key] = o[key]\n    }\n    return c\n  }\n  Y.utils.copyObject = copyObject\n\n  /*\n    Copy an operation, so that it can be manipulated.\n    Note: You must not change subproperties (except o.content)!\n  */\n  function copyOperation (o) {\n    o = copyObject(o)\n    if (o.content != null) {\n      o.content = o.content.map(function (c) { return c })\n    }\n    return o\n  }\n\n  Y.utils.copyOperation = copyOperation\n\n  /*\n    Defines a smaller relation on Id's\n  */\n  function smaller (a, b) {\n    return a[0] < b[0] || (a[0] === b[0] && (a[1] < b[1] || typeof a[1] < typeof b[1]))\n  }\n  Y.utils.smaller = smaller\n\n  function inDeletionRange (del, ins) {\n    return del.target[0] === ins[0] && del.target[1] <= ins[1] && ins[1] < del.target[1] + (del.length || 1)\n  }\n  Y.utils.inDeletionRange = inDeletionRange\n\n  function compareIds (id1, id2) {\n    if (id1 == null || id2 == null) {\n      return id1 === id2\n    } else {\n      return id1[0] === id2[0] && id1[1] === id2[1]\n    }\n  }\n  Y.utils.compareIds = compareIds\n\n  function matchesId (op, id) {\n    if (id == null || op == null) {\n      return id === op\n    } else {\n      if (id[0] === op.id[0]) {\n        if (op.content == null) {\n          return id[1] === op.id[1]\n        } else {\n          return id[1] >= op.id[1] && id[1] < op.id[1] + op.content.length\n        }\n      }\n    }\n  }\n  Y.utils.matchesId = matchesId\n\n  function getLastId (op) {\n    if (op.content == null || op.content.length === 1) {\n      return op.id\n    } else {\n      return [op.id[0], op.id[1] + op.content.length - 1]\n    }\n  }\n  Y.utils.getLastId = getLastId\n\n  function createEmptyOpsArray (n) {\n    var a = new Array(n)\n    for (var i = 0; i < a.length; i++) {\n      a[i] = {\n        id: [null, null]\n      }\n    }\n    return a\n  }\n\n  function createSmallLookupBuffer (Store) {\n    /*\n      This buffer implements a very small buffer that temporarily stores operations\n      after they are read / before they are written.\n      The buffer basically implements FIFO. Often requested lookups will be re-queued every time they are looked up / written.\n\n      It can speed up lookups on Operation Stores and State Stores. But it does not require notable use of memory or processing power.\n\n      Good for os and ss, bot not for ds (because it often uses methods that require a flush)\n\n      I tried to optimize this for performance, therefore no highlevel operations.\n    */\n    class SmallLookupBuffer extends Store {\n      constructor (arg1, arg2) {\n        // super(...arguments) -- do this when this is supported by stable nodejs\n        super(arg1, arg2)\n        this.writeBuffer = createEmptyOpsArray(5)\n        this.readBuffer = createEmptyOpsArray(10)\n      }\n      * find (id, noSuperCall) {\n        var i, r\n        for (i = this.readBuffer.length - 1; i >= 0; i--) {\n          r = this.readBuffer[i]\n          // we don't have to use compareids, because id is always defined!\n          if (r.id[1] === id[1] && r.id[0] === id[0]) {\n            // found r\n            // move r to the end of readBuffer\n            for (; i < this.readBuffer.length - 1; i++) {\n              this.readBuffer[i] = this.readBuffer[i + 1]\n            }\n            this.readBuffer[this.readBuffer.length - 1] = r\n            return r\n          }\n        }\n        var o\n        for (i = this.writeBuffer.length - 1; i >= 0; i--) {\n          r = this.writeBuffer[i]\n          if (r.id[1] === id[1] && r.id[0] === id[0]) {\n            o = r\n            break\n          }\n        }\n        if (i < 0 && noSuperCall === undefined) {\n          // did not reach break in last loop\n          // read id and put it to the end of readBuffer\n          o = yield* super.find(id)\n        }\n        if (o != null) {\n          for (i = 0; i < this.readBuffer.length - 1; i++) {\n            this.readBuffer[i] = this.readBuffer[i + 1]\n          }\n          this.readBuffer[this.readBuffer.length - 1] = o\n        }\n        return o\n      }\n      * put (o) {\n        var id = o.id\n        var i, r // helper variables\n        for (i = this.writeBuffer.length - 1; i >= 0; i--) {\n          r = this.writeBuffer[i]\n          if (r.id[1] === id[1] && r.id[0] === id[0]) {\n            // is already in buffer\n            // forget r, and move o to the end of writeBuffer\n            for (; i < this.writeBuffer.length - 1; i++) {\n              this.writeBuffer[i] = this.writeBuffer[i + 1]\n            }\n            this.writeBuffer[this.writeBuffer.length - 1] = o\n            break\n          }\n        }\n        if (i < 0) {\n          // did not reach break in last loop\n          // write writeBuffer[0]\n          var write = this.writeBuffer[0]\n          if (write.id[0] !== null) {\n            yield* super.put(write)\n          }\n          // put o to the end of writeBuffer\n          for (i = 0; i < this.writeBuffer.length - 1; i++) {\n            this.writeBuffer[i] = this.writeBuffer[i + 1]\n          }\n          this.writeBuffer[this.writeBuffer.length - 1] = o\n        }\n        // check readBuffer for every occurence of o.id, overwrite if found\n        // whether found or not, we'll append o to the readbuffer\n        for (i = 0; i < this.readBuffer.length - 1; i++) {\n          r = this.readBuffer[i + 1]\n          if (r.id[1] === id[1] && r.id[0] === id[0]) {\n            this.readBuffer[i] = o\n          } else {\n            this.readBuffer[i] = r\n          }\n        }\n        this.readBuffer[this.readBuffer.length - 1] = o\n      }\n      * delete (id) {\n        var i, r\n        for (i = 0; i < this.readBuffer.length; i++) {\n          r = this.readBuffer[i]\n          if (r.id[1] === id[1] && r.id[0] === id[0]) {\n            this.readBuffer[i] = {\n              id: [null, null]\n            }\n          }\n        }\n        yield* this.flush()\n        yield* super.delete(id)\n      }\n      * findWithLowerBound (id) {\n        var o = yield* this.find(id, true)\n        if (o != null) {\n          return o\n        } else {\n          yield* this.flush()\n          return yield* super.findWithLowerBound.apply(this, arguments)\n        }\n      }\n      * findWithUpperBound (id) {\n        var o = yield* this.find(id, true)\n        if (o != null) {\n          return o\n        } else {\n          yield* this.flush()\n          return yield* super.findWithUpperBound.apply(this, arguments)\n        }\n      }\n      * findNext () {\n        yield* this.flush()\n        return yield* super.findNext.apply(this, arguments)\n      }\n      * findPrev () {\n        yield* this.flush()\n        return yield* super.findPrev.apply(this, arguments)\n      }\n      * iterate () {\n        yield* this.flush()\n        yield* super.iterate.apply(this, arguments)\n      }\n      * flush () {\n        for (var i = 0; i < this.writeBuffer.length; i++) {\n          var write = this.writeBuffer[i]\n          if (write.id[0] !== null) {\n            yield* super.put(write)\n            this.writeBuffer[i] = {\n              id: [null, null]\n            }\n          }\n        }\n      }\n    }\n    return SmallLookupBuffer\n  }\n  Y.utils.createSmallLookupBuffer = createSmallLookupBuffer\n\n  // Generates a unique id, for use as a user id.\n  // Thx to @jed for this script https://gist.github.com/jed/982883\n  function generateGuid(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,generateGuid)} // eslint-disable-line\n  Y.utils.generateGuid = generateGuid\n}\n\n\n//# sourceURL=webpack:///./node_modules/yjs/src/Utils.js?");

/***/ }),

/***/ "./node_modules/yjs/src/y.js":
/*!***********************************!*\
  !*** ./node_modules/yjs/src/y.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* @flow */\n\n\n__webpack_require__(/*! ./Connector.js */ \"./node_modules/yjs/src/Connector.js\")(Y)\n__webpack_require__(/*! ./Database.js */ \"./node_modules/yjs/src/Database.js\")(Y)\n__webpack_require__(/*! ./Transaction.js */ \"./node_modules/yjs/src/Transaction.js\")(Y)\n__webpack_require__(/*! ./Struct.js */ \"./node_modules/yjs/src/Struct.js\")(Y)\n__webpack_require__(/*! ./Utils.js */ \"./node_modules/yjs/src/Utils.js\")(Y)\n__webpack_require__(/*! ./Connectors/Test.js */ \"./node_modules/yjs/src/Connectors/Test.js\")(Y)\n\nY.debug = __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\")\n\nvar requiringModules = {}\n\nmodule.exports = Y\nY.requiringModules = requiringModules\n\nY.extend = function (name, value) {\n  if (arguments.length === 2 && typeof name === 'string') {\n    if (value instanceof Y.utils.CustomTypeDefinition) {\n      Y[name] = value.parseArguments\n    } else {\n      Y[name] = value\n    }\n    if (requiringModules[name] != null) {\n      requiringModules[name].resolve()\n      delete requiringModules[name]\n    }\n  } else {\n    for (var i = 0; i < arguments.length; i++) {\n      var f = arguments[i]\n      if (typeof f === 'function') {\n        f(Y)\n      } else {\n        throw new Error('Expected function!')\n      }\n    }\n  }\n}\n\nY.requestModules = requestModules\nfunction requestModules (modules) {\n  var sourceDir\n  if (Y.sourceDir === null) {\n    sourceDir = null\n  } else {\n    sourceDir = Y.sourceDir || '/bower_components'\n  }\n  // determine if this module was compiled for es5 or es6 (y.js vs. y.es6)\n  // if Insert.execute is a Function, then it isnt a generator..\n  // then load the es5(.js) files..\n  var extention = typeof regeneratorRuntime !== 'undefined' ? '.js' : '.es6'\n  var promises = []\n  for (var i = 0; i < modules.length; i++) {\n    var module = modules[i].split('(')[0]\n    var modulename = 'y-' + module.toLowerCase()\n    if (Y[module] == null) {\n      if (requiringModules[module] == null) {\n        // module does not exist\n        if (typeof window !== 'undefined' && window.Y !== 'undefined') {\n          if (sourceDir != null) {\n            var imported = document.createElement('script')\n            imported.src = sourceDir + '/' + modulename + '/' + modulename + extention\n            document.head.appendChild(imported)\n          }\n          let requireModule = {}\n          requiringModules[module] = requireModule\n          requireModule.promise = new Promise(function (resolve) {\n            requireModule.resolve = resolve\n          })\n          promises.push(requireModule.promise)\n        } else {\n          console.info('YJS: Please do not depend on automatic requiring of modules anymore! Extend modules as follows `require(\\'y-modulename\\')(Y)`')\n          __webpack_require__(\"./node_modules/yjs/src sync recursive\")(modulename)(Y)\n        }\n      } else {\n        promises.push(requiringModules[modules[i]].promise)\n      }\n    }\n  }\n  return Promise.all(promises)\n}\n\n/* ::\ntype MemoryOptions = {\n  name: 'memory'\n}\ntype IndexedDBOptions = {\n  name: 'indexeddb',\n  namespace: string\n}\ntype DbOptions = MemoryOptions | IndexedDBOptions\n\ntype WebRTCOptions = {\n  name: 'webrtc',\n  room: string\n}\ntype WebsocketsClientOptions = {\n  name: 'websockets-client',\n  room: string\n}\ntype ConnectionOptions = WebRTCOptions | WebsocketsClientOptions\n\ntype YOptions = {\n  connector: ConnectionOptions,\n  db: DbOptions,\n  types: Array<TypeName>,\n  sourceDir: string,\n  share: {[key: string]: TypeName}\n}\n*/\n\nfunction Y (opts/* :YOptions */) /* :Promise<YConfig> */ {\n  if (opts.hasOwnProperty('sourceDir')) {\n    Y.sourceDir = opts.sourceDir\n  }\n  opts.types = opts.types != null ? opts.types : []\n  var modules = [opts.db.name, opts.connector.name].concat(opts.types)\n  for (var name in opts.share) {\n    modules.push(opts.share[name])\n  }\n  return new Promise(function (resolve, reject) {\n    if (opts == null) reject('An options object is expected! ')\n    else if (opts.connector == null) reject('You must specify a connector! (missing connector property)')\n    else if (opts.connector.name == null) reject('You must specify connector name! (missing connector.name property)')\n    else if (opts.db == null) reject('You must specify a database! (missing db property)')\n    else if (opts.connector.name == null) reject('You must specify db name! (missing db.name property)')\n    else {\n      opts = Y.utils.copyObject(opts)\n      opts.connector = Y.utils.copyObject(opts.connector)\n      opts.db = Y.utils.copyObject(opts.db)\n      opts.share = Y.utils.copyObject(opts.share)\n      setTimeout(function () {\n        Y.requestModules(modules).then(function () {\n          var yconfig = new YConfig(opts)\n          yconfig.db.whenUserIdSet(function () {\n            yconfig.init(function () {\n              resolve(yconfig)\n            })\n          })\n        }).catch(reject)\n      }, 0)\n    }\n  })\n}\n\nclass YConfig {\n  /* ::\n  db: Y.AbstractDatabase;\n  connector: Y.AbstractConnector;\n  share: {[key: string]: any};\n  options: Object;\n  */\n  constructor (opts, callback) {\n    this.options = opts\n    this.db = new Y[opts.db.name](this, opts.db)\n    this.connector = new Y[opts.connector.name](this, opts.connector)\n    this.connected = true\n  }\n  init (callback) {\n    var opts = this.options\n    var share = {}\n    this.share = share\n    this.db.requestTransaction(function * requestTransaction () {\n      // create shared object\n      for (var propertyname in opts.share) {\n        var typeConstructor = opts.share[propertyname].split('(')\n        var typeName = typeConstructor.splice(0, 1)\n        var type = Y[typeName]\n        var typedef = type.typeDefinition\n        var id = ['_', typedef.struct + '_' + typeName + '_' + propertyname + '_' + typeConstructor]\n        var args = []\n        if (typeConstructor.length === 1) {\n          try {\n            args = JSON.parse('[' + typeConstructor[0].split(')')[0] + ']')\n          } catch (e) {\n            throw new Error('Was not able to parse type definition! (share.' + propertyname + ')')\n          }\n          if (type.typeDefinition.parseArguments == null) {\n            throw new Error(typeName + ' does not expect arguments!')\n          } else {\n            args = typedef.parseArguments(args[0])[1]\n          }\n        }\n        share[propertyname] = yield* this.store.initType.call(this, id, args)\n      }\n      this.store.whenTransactionsFinished()\n        .then(callback)\n    })\n  }\n  isConnected () {\n    return this.connector.isSynced\n  }\n  disconnect () {\n    if (this.connected) {\n      this.connected = false\n      return this.connector.disconnect()\n    } else {\n      return Promise.resolve()\n    }\n  }\n  reconnect () {\n    if (!this.connected) {\n      this.connected = true\n      return this.connector.reconnect()\n    } else {\n      return Promise.resolve()\n    }\n  }\n  destroy () {\n    var self = this\n    return this.close().then(function () {\n      if (self.db.deleteDB != null) {\n        return self.db.deleteDB()\n      } else {\n        return Promise.resolve()\n      }\n    })\n  }\n  close () {\n    var self = this\n    this.share = null\n    if (this.connector.destroy != null) {\n      this.connector.destroy()\n    } else {\n      this.connector.disconnect()\n    }\n    return this.db.whenTransactionsFinished(function () {\n      this.db.destroyTypes()\n      // make sure to wait for all transactions before destroying the db\n      this.db.requestTransaction(function * () {\n        yield* self.db.destroy()\n      })\n      return this.db.whenTransactionsFinished()\n    })\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/yjs/src/y.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/* harmony import */ var yjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! yjs */ \"./node_modules/yjs/src/y.js\");\n/* harmony import */ var yjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(yjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var y_webrtc_dist_y_webrtc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! y-webrtc/dist/y-webrtc */ \"./node_modules/y-webrtc/dist/y-webrtc.js\");\n/* harmony import */ var y_webrtc_dist_y_webrtc__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(y_webrtc_dist_y_webrtc__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n\n/**\n * `yjs-element`\n * \n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass YjsElement extends _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__[\"PolymerElement\"] {\n  static get template() {\n    return _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__[\"html\"]`\n      <style>\n        :host {\n          display: block;\n        }\n      </style>\n      <h2>Hello [[prop1]]!</h2>\n    `;\n  }\n  static get properties() {\n    return {\n      prop1: {\n        type: String,\n        value: 'yjs-element',\n      },\n    };\n  }\n}\n\nwindow.customElements.define('yjs-element', YjsElement);\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

/******/ });